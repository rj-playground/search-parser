// This file is autogenerated by ./scripts/generate_protobuf_and_funcs.rb

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file pg_query.proto (package pg_query, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "npm:@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "npm:@bufbuild/protobuf/codegenv1";
import type { Message } from "npm:@bufbuild/protobuf";

/**
 * Describes the file pg_query.proto.
 */
export const file_pg_query: GenFile = /*@__PURE__*/
  fileDesc("");

/**
 * @generated from message pg_query.ParseResult
 */
export type ParseResult = Message<"pg_query.ParseResult"> & {
  /**
   * @generated from field: int32 version = 1;
   */
  version: number;

  /**
   * @generated from field: repeated pg_query.RawStmt stmts = 2;
   */
  stmts: RawStmt[];
};

/**
 * Describes the message pg_query.ParseResult.
 * Use `create(ParseResultSchema)` to create a new message.
 */
export const ParseResultSchema: GenMessage<ParseResult> = /*@__PURE__*/
  messageDesc(file_pg_query, 0);

/**
 * @generated from message pg_query.ScanResult
 */
export type ScanResult = Message<"pg_query.ScanResult"> & {
  /**
   * @generated from field: int32 version = 1;
   */
  version: number;

  /**
   * @generated from field: repeated pg_query.ScanToken tokens = 2;
   */
  tokens: ScanToken[];
};

/**
 * Describes the message pg_query.ScanResult.
 * Use `create(ScanResultSchema)` to create a new message.
 */
export const ScanResultSchema: GenMessage<ScanResult> = /*@__PURE__*/
  messageDesc(file_pg_query, 1);

/**
 * @generated from message pg_query.Node
 */
export type Node = Message<"pg_query.Node"> & {
  /**
   * @generated from oneof pg_query.Node.node
   */
  node: {
    /**
     * @generated from field: pg_query.Alias alias = 1 [json_name = "Alias"];
     */
    value: Alias;
    case: "alias";
  } | {
    /**
     * @generated from field: pg_query.RangeVar range_var = 2 [json_name = "RangeVar"];
     */
    value: RangeVar;
    case: "rangeVar";
  } | {
    /**
     * @generated from field: pg_query.TableFunc table_func = 3 [json_name = "TableFunc"];
     */
    value: TableFunc;
    case: "tableFunc";
  } | {
    /**
     * @generated from field: pg_query.Expr expr = 4 [json_name = "Expr"];
     */
    value: Expr;
    case: "expr";
  } | {
    /**
     * @generated from field: pg_query.Var var = 5 [json_name = "Var"];
     */
    value: Var;
    case: "var";
  } | {
    /**
     * @generated from field: pg_query.Param param = 6 [json_name = "Param"];
     */
    value: Param;
    case: "param";
  } | {
    /**
     * @generated from field: pg_query.Aggref aggref = 7 [json_name = "Aggref"];
     */
    value: Aggref;
    case: "aggref";
  } | {
    /**
     * @generated from field: pg_query.GroupingFunc grouping_func = 8 [json_name = "GroupingFunc"];
     */
    value: GroupingFunc;
    case: "groupingFunc";
  } | {
    /**
     * @generated from field: pg_query.WindowFunc window_func = 9 [json_name = "WindowFunc"];
     */
    value: WindowFunc;
    case: "windowFunc";
  } | {
    /**
     * @generated from field: pg_query.SubscriptingRef subscripting_ref = 10 [json_name = "SubscriptingRef"];
     */
    value: SubscriptingRef;
    case: "subscriptingRef";
  } | {
    /**
     * @generated from field: pg_query.FuncExpr func_expr = 11 [json_name = "FuncExpr"];
     */
    value: FuncExpr;
    case: "funcExpr";
  } | {
    /**
     * @generated from field: pg_query.NamedArgExpr named_arg_expr = 12 [json_name = "NamedArgExpr"];
     */
    value: NamedArgExpr;
    case: "namedArgExpr";
  } | {
    /**
     * @generated from field: pg_query.OpExpr op_expr = 13 [json_name = "OpExpr"];
     */
    value: OpExpr;
    case: "opExpr";
  } | {
    /**
     * @generated from field: pg_query.DistinctExpr distinct_expr = 14 [json_name = "DistinctExpr"];
     */
    value: DistinctExpr;
    case: "distinctExpr";
  } | {
    /**
     * @generated from field: pg_query.NullIfExpr null_if_expr = 15 [json_name = "NullIfExpr"];
     */
    value: NullIfExpr;
    case: "nullIfExpr";
  } | {
    /**
     * @generated from field: pg_query.ScalarArrayOpExpr scalar_array_op_expr = 16 [json_name = "ScalarArrayOpExpr"];
     */
    value: ScalarArrayOpExpr;
    case: "scalarArrayOpExpr";
  } | {
    /**
     * @generated from field: pg_query.BoolExpr bool_expr = 17 [json_name = "BoolExpr"];
     */
    value: BoolExpr;
    case: "boolExpr";
  } | {
    /**
     * @generated from field: pg_query.SubLink sub_link = 18 [json_name = "SubLink"];
     */
    value: SubLink;
    case: "subLink";
  } | {
    /**
     * @generated from field: pg_query.SubPlan sub_plan = 19 [json_name = "SubPlan"];
     */
    value: SubPlan;
    case: "subPlan";
  } | {
    /**
     * @generated from field: pg_query.AlternativeSubPlan alternative_sub_plan = 20 [json_name = "AlternativeSubPlan"];
     */
    value: AlternativeSubPlan;
    case: "alternativeSubPlan";
  } | {
    /**
     * @generated from field: pg_query.FieldSelect field_select = 21 [json_name = "FieldSelect"];
     */
    value: FieldSelect;
    case: "fieldSelect";
  } | {
    /**
     * @generated from field: pg_query.FieldStore field_store = 22 [json_name = "FieldStore"];
     */
    value: FieldStore;
    case: "fieldStore";
  } | {
    /**
     * @generated from field: pg_query.RelabelType relabel_type = 23 [json_name = "RelabelType"];
     */
    value: RelabelType;
    case: "relabelType";
  } | {
    /**
     * @generated from field: pg_query.CoerceViaIO coerce_via_io = 24 [json_name = "CoerceViaIO"];
     */
    value: CoerceViaIO;
    case: "coerceViaIo";
  } | {
    /**
     * @generated from field: pg_query.ArrayCoerceExpr array_coerce_expr = 25 [json_name = "ArrayCoerceExpr"];
     */
    value: ArrayCoerceExpr;
    case: "arrayCoerceExpr";
  } | {
    /**
     * @generated from field: pg_query.ConvertRowtypeExpr convert_rowtype_expr = 26 [json_name = "ConvertRowtypeExpr"];
     */
    value: ConvertRowtypeExpr;
    case: "convertRowtypeExpr";
  } | {
    /**
     * @generated from field: pg_query.CollateExpr collate_expr = 27 [json_name = "CollateExpr"];
     */
    value: CollateExpr;
    case: "collateExpr";
  } | {
    /**
     * @generated from field: pg_query.CaseExpr case_expr = 28 [json_name = "CaseExpr"];
     */
    value: CaseExpr;
    case: "caseExpr";
  } | {
    /**
     * @generated from field: pg_query.CaseWhen case_when = 29 [json_name = "CaseWhen"];
     */
    value: CaseWhen;
    case: "caseWhen";
  } | {
    /**
     * @generated from field: pg_query.CaseTestExpr case_test_expr = 30 [json_name = "CaseTestExpr"];
     */
    value: CaseTestExpr;
    case: "caseTestExpr";
  } | {
    /**
     * @generated from field: pg_query.ArrayExpr array_expr = 31 [json_name = "ArrayExpr"];
     */
    value: ArrayExpr;
    case: "arrayExpr";
  } | {
    /**
     * @generated from field: pg_query.RowExpr row_expr = 32 [json_name = "RowExpr"];
     */
    value: RowExpr;
    case: "rowExpr";
  } | {
    /**
     * @generated from field: pg_query.RowCompareExpr row_compare_expr = 33 [json_name = "RowCompareExpr"];
     */
    value: RowCompareExpr;
    case: "rowCompareExpr";
  } | {
    /**
     * @generated from field: pg_query.CoalesceExpr coalesce_expr = 34 [json_name = "CoalesceExpr"];
     */
    value: CoalesceExpr;
    case: "coalesceExpr";
  } | {
    /**
     * @generated from field: pg_query.MinMaxExpr min_max_expr = 35 [json_name = "MinMaxExpr"];
     */
    value: MinMaxExpr;
    case: "minMaxExpr";
  } | {
    /**
     * @generated from field: pg_query.SQLValueFunction sqlvalue_function = 36 [json_name = "SQLValueFunction"];
     */
    value: SQLValueFunction;
    case: "sqlvalueFunction";
  } | {
    /**
     * @generated from field: pg_query.XmlExpr xml_expr = 37 [json_name = "XmlExpr"];
     */
    value: XmlExpr;
    case: "xmlExpr";
  } | {
    /**
     * @generated from field: pg_query.NullTest null_test = 38 [json_name = "NullTest"];
     */
    value: NullTest;
    case: "nullTest";
  } | {
    /**
     * @generated from field: pg_query.BooleanTest boolean_test = 39 [json_name = "BooleanTest"];
     */
    value: BooleanTest;
    case: "booleanTest";
  } | {
    /**
     * @generated from field: pg_query.CoerceToDomain coerce_to_domain = 40 [json_name = "CoerceToDomain"];
     */
    value: CoerceToDomain;
    case: "coerceToDomain";
  } | {
    /**
     * @generated from field: pg_query.CoerceToDomainValue coerce_to_domain_value = 41 [json_name = "CoerceToDomainValue"];
     */
    value: CoerceToDomainValue;
    case: "coerceToDomainValue";
  } | {
    /**
     * @generated from field: pg_query.SetToDefault set_to_default = 42 [json_name = "SetToDefault"];
     */
    value: SetToDefault;
    case: "setToDefault";
  } | {
    /**
     * @generated from field: pg_query.CurrentOfExpr current_of_expr = 43 [json_name = "CurrentOfExpr"];
     */
    value: CurrentOfExpr;
    case: "currentOfExpr";
  } | {
    /**
     * @generated from field: pg_query.NextValueExpr next_value_expr = 44 [json_name = "NextValueExpr"];
     */
    value: NextValueExpr;
    case: "nextValueExpr";
  } | {
    /**
     * @generated from field: pg_query.InferenceElem inference_elem = 45 [json_name = "InferenceElem"];
     */
    value: InferenceElem;
    case: "inferenceElem";
  } | {
    /**
     * @generated from field: pg_query.TargetEntry target_entry = 46 [json_name = "TargetEntry"];
     */
    value: TargetEntry;
    case: "targetEntry";
  } | {
    /**
     * @generated from field: pg_query.RangeTblRef range_tbl_ref = 47 [json_name = "RangeTblRef"];
     */
    value: RangeTblRef;
    case: "rangeTblRef";
  } | {
    /**
     * @generated from field: pg_query.JoinExpr join_expr = 48 [json_name = "JoinExpr"];
     */
    value: JoinExpr;
    case: "joinExpr";
  } | {
    /**
     * @generated from field: pg_query.FromExpr from_expr = 49 [json_name = "FromExpr"];
     */
    value: FromExpr;
    case: "fromExpr";
  } | {
    /**
     * @generated from field: pg_query.OnConflictExpr on_conflict_expr = 50 [json_name = "OnConflictExpr"];
     */
    value: OnConflictExpr;
    case: "onConflictExpr";
  } | {
    /**
     * @generated from field: pg_query.IntoClause into_clause = 51 [json_name = "IntoClause"];
     */
    value: IntoClause;
    case: "intoClause";
  } | {
    /**
     * @generated from field: pg_query.RawStmt raw_stmt = 52 [json_name = "RawStmt"];
     */
    value: RawStmt;
    case: "rawStmt";
  } | {
    /**
     * @generated from field: pg_query.Query query = 53 [json_name = "Query"];
     */
    value: Query;
    case: "query";
  } | {
    /**
     * @generated from field: pg_query.InsertStmt insert_stmt = 54 [json_name = "InsertStmt"];
     */
    value: InsertStmt;
    case: "insertStmt";
  } | {
    /**
     * @generated from field: pg_query.DeleteStmt delete_stmt = 55 [json_name = "DeleteStmt"];
     */
    value: DeleteStmt;
    case: "deleteStmt";
  } | {
    /**
     * @generated from field: pg_query.UpdateStmt update_stmt = 56 [json_name = "UpdateStmt"];
     */
    value: UpdateStmt;
    case: "updateStmt";
  } | {
    /**
     * @generated from field: pg_query.SelectStmt select_stmt = 57 [json_name = "SelectStmt"];
     */
    value: SelectStmt;
    case: "selectStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterTableStmt alter_table_stmt = 58 [json_name = "AlterTableStmt"];
     */
    value: AlterTableStmt;
    case: "alterTableStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterTableCmd alter_table_cmd = 59 [json_name = "AlterTableCmd"];
     */
    value: AlterTableCmd;
    case: "alterTableCmd";
  } | {
    /**
     * @generated from field: pg_query.AlterDomainStmt alter_domain_stmt = 60 [json_name = "AlterDomainStmt"];
     */
    value: AlterDomainStmt;
    case: "alterDomainStmt";
  } | {
    /**
     * @generated from field: pg_query.SetOperationStmt set_operation_stmt = 61 [json_name = "SetOperationStmt"];
     */
    value: SetOperationStmt;
    case: "setOperationStmt";
  } | {
    /**
     * @generated from field: pg_query.GrantStmt grant_stmt = 62 [json_name = "GrantStmt"];
     */
    value: GrantStmt;
    case: "grantStmt";
  } | {
    /**
     * @generated from field: pg_query.GrantRoleStmt grant_role_stmt = 63 [json_name = "GrantRoleStmt"];
     */
    value: GrantRoleStmt;
    case: "grantRoleStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterDefaultPrivilegesStmt alter_default_privileges_stmt = 64 [json_name = "AlterDefaultPrivilegesStmt"];
     */
    value: AlterDefaultPrivilegesStmt;
    case: "alterDefaultPrivilegesStmt";
  } | {
    /**
     * @generated from field: pg_query.ClosePortalStmt close_portal_stmt = 65 [json_name = "ClosePortalStmt"];
     */
    value: ClosePortalStmt;
    case: "closePortalStmt";
  } | {
    /**
     * @generated from field: pg_query.ClusterStmt cluster_stmt = 66 [json_name = "ClusterStmt"];
     */
    value: ClusterStmt;
    case: "clusterStmt";
  } | {
    /**
     * @generated from field: pg_query.CopyStmt copy_stmt = 67 [json_name = "CopyStmt"];
     */
    value: CopyStmt;
    case: "copyStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateStmt create_stmt = 68 [json_name = "CreateStmt"];
     */
    value: CreateStmt;
    case: "createStmt";
  } | {
    /**
     * @generated from field: pg_query.DefineStmt define_stmt = 69 [json_name = "DefineStmt"];
     */
    value: DefineStmt;
    case: "defineStmt";
  } | {
    /**
     * @generated from field: pg_query.DropStmt drop_stmt = 70 [json_name = "DropStmt"];
     */
    value: DropStmt;
    case: "dropStmt";
  } | {
    /**
     * @generated from field: pg_query.TruncateStmt truncate_stmt = 71 [json_name = "TruncateStmt"];
     */
    value: TruncateStmt;
    case: "truncateStmt";
  } | {
    /**
     * @generated from field: pg_query.CommentStmt comment_stmt = 72 [json_name = "CommentStmt"];
     */
    value: CommentStmt;
    case: "commentStmt";
  } | {
    /**
     * @generated from field: pg_query.FetchStmt fetch_stmt = 73 [json_name = "FetchStmt"];
     */
    value: FetchStmt;
    case: "fetchStmt";
  } | {
    /**
     * @generated from field: pg_query.IndexStmt index_stmt = 74 [json_name = "IndexStmt"];
     */
    value: IndexStmt;
    case: "indexStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateFunctionStmt create_function_stmt = 75 [json_name = "CreateFunctionStmt"];
     */
    value: CreateFunctionStmt;
    case: "createFunctionStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterFunctionStmt alter_function_stmt = 76 [json_name = "AlterFunctionStmt"];
     */
    value: AlterFunctionStmt;
    case: "alterFunctionStmt";
  } | {
    /**
     * @generated from field: pg_query.DoStmt do_stmt = 77 [json_name = "DoStmt"];
     */
    value: DoStmt;
    case: "doStmt";
  } | {
    /**
     * @generated from field: pg_query.RenameStmt rename_stmt = 78 [json_name = "RenameStmt"];
     */
    value: RenameStmt;
    case: "renameStmt";
  } | {
    /**
     * @generated from field: pg_query.RuleStmt rule_stmt = 79 [json_name = "RuleStmt"];
     */
    value: RuleStmt;
    case: "ruleStmt";
  } | {
    /**
     * @generated from field: pg_query.NotifyStmt notify_stmt = 80 [json_name = "NotifyStmt"];
     */
    value: NotifyStmt;
    case: "notifyStmt";
  } | {
    /**
     * @generated from field: pg_query.ListenStmt listen_stmt = 81 [json_name = "ListenStmt"];
     */
    value: ListenStmt;
    case: "listenStmt";
  } | {
    /**
     * @generated from field: pg_query.UnlistenStmt unlisten_stmt = 82 [json_name = "UnlistenStmt"];
     */
    value: UnlistenStmt;
    case: "unlistenStmt";
  } | {
    /**
     * @generated from field: pg_query.TransactionStmt transaction_stmt = 83 [json_name = "TransactionStmt"];
     */
    value: TransactionStmt;
    case: "transactionStmt";
  } | {
    /**
     * @generated from field: pg_query.ViewStmt view_stmt = 84 [json_name = "ViewStmt"];
     */
    value: ViewStmt;
    case: "viewStmt";
  } | {
    /**
     * @generated from field: pg_query.LoadStmt load_stmt = 85 [json_name = "LoadStmt"];
     */
    value: LoadStmt;
    case: "loadStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateDomainStmt create_domain_stmt = 86 [json_name = "CreateDomainStmt"];
     */
    value: CreateDomainStmt;
    case: "createDomainStmt";
  } | {
    /**
     * @generated from field: pg_query.CreatedbStmt createdb_stmt = 87 [json_name = "CreatedbStmt"];
     */
    value: CreatedbStmt;
    case: "createdbStmt";
  } | {
    /**
     * @generated from field: pg_query.DropdbStmt dropdb_stmt = 88 [json_name = "DropdbStmt"];
     */
    value: DropdbStmt;
    case: "dropdbStmt";
  } | {
    /**
     * @generated from field: pg_query.VacuumStmt vacuum_stmt = 89 [json_name = "VacuumStmt"];
     */
    value: VacuumStmt;
    case: "vacuumStmt";
  } | {
    /**
     * @generated from field: pg_query.ExplainStmt explain_stmt = 90 [json_name = "ExplainStmt"];
     */
    value: ExplainStmt;
    case: "explainStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateTableAsStmt create_table_as_stmt = 91 [json_name = "CreateTableAsStmt"];
     */
    value: CreateTableAsStmt;
    case: "createTableAsStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateSeqStmt create_seq_stmt = 92 [json_name = "CreateSeqStmt"];
     */
    value: CreateSeqStmt;
    case: "createSeqStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterSeqStmt alter_seq_stmt = 93 [json_name = "AlterSeqStmt"];
     */
    value: AlterSeqStmt;
    case: "alterSeqStmt";
  } | {
    /**
     * @generated from field: pg_query.VariableSetStmt variable_set_stmt = 94 [json_name = "VariableSetStmt"];
     */
    value: VariableSetStmt;
    case: "variableSetStmt";
  } | {
    /**
     * @generated from field: pg_query.VariableShowStmt variable_show_stmt = 95 [json_name = "VariableShowStmt"];
     */
    value: VariableShowStmt;
    case: "variableShowStmt";
  } | {
    /**
     * @generated from field: pg_query.DiscardStmt discard_stmt = 96 [json_name = "DiscardStmt"];
     */
    value: DiscardStmt;
    case: "discardStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateTrigStmt create_trig_stmt = 97 [json_name = "CreateTrigStmt"];
     */
    value: CreateTrigStmt;
    case: "createTrigStmt";
  } | {
    /**
     * @generated from field: pg_query.CreatePLangStmt create_plang_stmt = 98 [json_name = "CreatePLangStmt"];
     */
    value: CreatePLangStmt;
    case: "createPlangStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateRoleStmt create_role_stmt = 99 [json_name = "CreateRoleStmt"];
     */
    value: CreateRoleStmt;
    case: "createRoleStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterRoleStmt alter_role_stmt = 100 [json_name = "AlterRoleStmt"];
     */
    value: AlterRoleStmt;
    case: "alterRoleStmt";
  } | {
    /**
     * @generated from field: pg_query.DropRoleStmt drop_role_stmt = 101 [json_name = "DropRoleStmt"];
     */
    value: DropRoleStmt;
    case: "dropRoleStmt";
  } | {
    /**
     * @generated from field: pg_query.LockStmt lock_stmt = 102 [json_name = "LockStmt"];
     */
    value: LockStmt;
    case: "lockStmt";
  } | {
    /**
     * @generated from field: pg_query.ConstraintsSetStmt constraints_set_stmt = 103 [json_name = "ConstraintsSetStmt"];
     */
    value: ConstraintsSetStmt;
    case: "constraintsSetStmt";
  } | {
    /**
     * @generated from field: pg_query.ReindexStmt reindex_stmt = 104 [json_name = "ReindexStmt"];
     */
    value: ReindexStmt;
    case: "reindexStmt";
  } | {
    /**
     * @generated from field: pg_query.CheckPointStmt check_point_stmt = 105 [json_name = "CheckPointStmt"];
     */
    value: CheckPointStmt;
    case: "checkPointStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateSchemaStmt create_schema_stmt = 106 [json_name = "CreateSchemaStmt"];
     */
    value: CreateSchemaStmt;
    case: "createSchemaStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterDatabaseStmt alter_database_stmt = 107 [json_name = "AlterDatabaseStmt"];
     */
    value: AlterDatabaseStmt;
    case: "alterDatabaseStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterDatabaseSetStmt alter_database_set_stmt = 108 [json_name = "AlterDatabaseSetStmt"];
     */
    value: AlterDatabaseSetStmt;
    case: "alterDatabaseSetStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterRoleSetStmt alter_role_set_stmt = 109 [json_name = "AlterRoleSetStmt"];
     */
    value: AlterRoleSetStmt;
    case: "alterRoleSetStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateConversionStmt create_conversion_stmt = 110 [json_name = "CreateConversionStmt"];
     */
    value: CreateConversionStmt;
    case: "createConversionStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateCastStmt create_cast_stmt = 111 [json_name = "CreateCastStmt"];
     */
    value: CreateCastStmt;
    case: "createCastStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateOpClassStmt create_op_class_stmt = 112 [json_name = "CreateOpClassStmt"];
     */
    value: CreateOpClassStmt;
    case: "createOpClassStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateOpFamilyStmt create_op_family_stmt = 113 [json_name = "CreateOpFamilyStmt"];
     */
    value: CreateOpFamilyStmt;
    case: "createOpFamilyStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterOpFamilyStmt alter_op_family_stmt = 114 [json_name = "AlterOpFamilyStmt"];
     */
    value: AlterOpFamilyStmt;
    case: "alterOpFamilyStmt";
  } | {
    /**
     * @generated from field: pg_query.PrepareStmt prepare_stmt = 115 [json_name = "PrepareStmt"];
     */
    value: PrepareStmt;
    case: "prepareStmt";
  } | {
    /**
     * @generated from field: pg_query.ExecuteStmt execute_stmt = 116 [json_name = "ExecuteStmt"];
     */
    value: ExecuteStmt;
    case: "executeStmt";
  } | {
    /**
     * @generated from field: pg_query.DeallocateStmt deallocate_stmt = 117 [json_name = "DeallocateStmt"];
     */
    value: DeallocateStmt;
    case: "deallocateStmt";
  } | {
    /**
     * @generated from field: pg_query.DeclareCursorStmt declare_cursor_stmt = 118 [json_name = "DeclareCursorStmt"];
     */
    value: DeclareCursorStmt;
    case: "declareCursorStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateTableSpaceStmt create_table_space_stmt = 119 [json_name = "CreateTableSpaceStmt"];
     */
    value: CreateTableSpaceStmt;
    case: "createTableSpaceStmt";
  } | {
    /**
     * @generated from field: pg_query.DropTableSpaceStmt drop_table_space_stmt = 120 [json_name = "DropTableSpaceStmt"];
     */
    value: DropTableSpaceStmt;
    case: "dropTableSpaceStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterObjectDependsStmt alter_object_depends_stmt = 121 [json_name = "AlterObjectDependsStmt"];
     */
    value: AlterObjectDependsStmt;
    case: "alterObjectDependsStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterObjectSchemaStmt alter_object_schema_stmt = 122 [json_name = "AlterObjectSchemaStmt"];
     */
    value: AlterObjectSchemaStmt;
    case: "alterObjectSchemaStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterOwnerStmt alter_owner_stmt = 123 [json_name = "AlterOwnerStmt"];
     */
    value: AlterOwnerStmt;
    case: "alterOwnerStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterOperatorStmt alter_operator_stmt = 124 [json_name = "AlterOperatorStmt"];
     */
    value: AlterOperatorStmt;
    case: "alterOperatorStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterTypeStmt alter_type_stmt = 125 [json_name = "AlterTypeStmt"];
     */
    value: AlterTypeStmt;
    case: "alterTypeStmt";
  } | {
    /**
     * @generated from field: pg_query.DropOwnedStmt drop_owned_stmt = 126 [json_name = "DropOwnedStmt"];
     */
    value: DropOwnedStmt;
    case: "dropOwnedStmt";
  } | {
    /**
     * @generated from field: pg_query.ReassignOwnedStmt reassign_owned_stmt = 127 [json_name = "ReassignOwnedStmt"];
     */
    value: ReassignOwnedStmt;
    case: "reassignOwnedStmt";
  } | {
    /**
     * @generated from field: pg_query.CompositeTypeStmt composite_type_stmt = 128 [json_name = "CompositeTypeStmt"];
     */
    value: CompositeTypeStmt;
    case: "compositeTypeStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateEnumStmt create_enum_stmt = 129 [json_name = "CreateEnumStmt"];
     */
    value: CreateEnumStmt;
    case: "createEnumStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateRangeStmt create_range_stmt = 130 [json_name = "CreateRangeStmt"];
     */
    value: CreateRangeStmt;
    case: "createRangeStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterEnumStmt alter_enum_stmt = 131 [json_name = "AlterEnumStmt"];
     */
    value: AlterEnumStmt;
    case: "alterEnumStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterTSDictionaryStmt alter_tsdictionary_stmt = 132 [json_name = "AlterTSDictionaryStmt"];
     */
    value: AlterTSDictionaryStmt;
    case: "alterTsdictionaryStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterTSConfigurationStmt alter_tsconfiguration_stmt = 133 [json_name = "AlterTSConfigurationStmt"];
     */
    value: AlterTSConfigurationStmt;
    case: "alterTsconfigurationStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateFdwStmt create_fdw_stmt = 134 [json_name = "CreateFdwStmt"];
     */
    value: CreateFdwStmt;
    case: "createFdwStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterFdwStmt alter_fdw_stmt = 135 [json_name = "AlterFdwStmt"];
     */
    value: AlterFdwStmt;
    case: "alterFdwStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateForeignServerStmt create_foreign_server_stmt = 136 [json_name = "CreateForeignServerStmt"];
     */
    value: CreateForeignServerStmt;
    case: "createForeignServerStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterForeignServerStmt alter_foreign_server_stmt = 137 [json_name = "AlterForeignServerStmt"];
     */
    value: AlterForeignServerStmt;
    case: "alterForeignServerStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateUserMappingStmt create_user_mapping_stmt = 138 [json_name = "CreateUserMappingStmt"];
     */
    value: CreateUserMappingStmt;
    case: "createUserMappingStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterUserMappingStmt alter_user_mapping_stmt = 139 [json_name = "AlterUserMappingStmt"];
     */
    value: AlterUserMappingStmt;
    case: "alterUserMappingStmt";
  } | {
    /**
     * @generated from field: pg_query.DropUserMappingStmt drop_user_mapping_stmt = 140 [json_name = "DropUserMappingStmt"];
     */
    value: DropUserMappingStmt;
    case: "dropUserMappingStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterTableSpaceOptionsStmt alter_table_space_options_stmt = 141 [json_name = "AlterTableSpaceOptionsStmt"];
     */
    value: AlterTableSpaceOptionsStmt;
    case: "alterTableSpaceOptionsStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterTableMoveAllStmt alter_table_move_all_stmt = 142 [json_name = "AlterTableMoveAllStmt"];
     */
    value: AlterTableMoveAllStmt;
    case: "alterTableMoveAllStmt";
  } | {
    /**
     * @generated from field: pg_query.SecLabelStmt sec_label_stmt = 143 [json_name = "SecLabelStmt"];
     */
    value: SecLabelStmt;
    case: "secLabelStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateForeignTableStmt create_foreign_table_stmt = 144 [json_name = "CreateForeignTableStmt"];
     */
    value: CreateForeignTableStmt;
    case: "createForeignTableStmt";
  } | {
    /**
     * @generated from field: pg_query.ImportForeignSchemaStmt import_foreign_schema_stmt = 145 [json_name = "ImportForeignSchemaStmt"];
     */
    value: ImportForeignSchemaStmt;
    case: "importForeignSchemaStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateExtensionStmt create_extension_stmt = 146 [json_name = "CreateExtensionStmt"];
     */
    value: CreateExtensionStmt;
    case: "createExtensionStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterExtensionStmt alter_extension_stmt = 147 [json_name = "AlterExtensionStmt"];
     */
    value: AlterExtensionStmt;
    case: "alterExtensionStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterExtensionContentsStmt alter_extension_contents_stmt = 148 [json_name = "AlterExtensionContentsStmt"];
     */
    value: AlterExtensionContentsStmt;
    case: "alterExtensionContentsStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateEventTrigStmt create_event_trig_stmt = 149 [json_name = "CreateEventTrigStmt"];
     */
    value: CreateEventTrigStmt;
    case: "createEventTrigStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterEventTrigStmt alter_event_trig_stmt = 150 [json_name = "AlterEventTrigStmt"];
     */
    value: AlterEventTrigStmt;
    case: "alterEventTrigStmt";
  } | {
    /**
     * @generated from field: pg_query.RefreshMatViewStmt refresh_mat_view_stmt = 151 [json_name = "RefreshMatViewStmt"];
     */
    value: RefreshMatViewStmt;
    case: "refreshMatViewStmt";
  } | {
    /**
     * @generated from field: pg_query.ReplicaIdentityStmt replica_identity_stmt = 152 [json_name = "ReplicaIdentityStmt"];
     */
    value: ReplicaIdentityStmt;
    case: "replicaIdentityStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterSystemStmt alter_system_stmt = 153 [json_name = "AlterSystemStmt"];
     */
    value: AlterSystemStmt;
    case: "alterSystemStmt";
  } | {
    /**
     * @generated from field: pg_query.CreatePolicyStmt create_policy_stmt = 154 [json_name = "CreatePolicyStmt"];
     */
    value: CreatePolicyStmt;
    case: "createPolicyStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterPolicyStmt alter_policy_stmt = 155 [json_name = "AlterPolicyStmt"];
     */
    value: AlterPolicyStmt;
    case: "alterPolicyStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateTransformStmt create_transform_stmt = 156 [json_name = "CreateTransformStmt"];
     */
    value: CreateTransformStmt;
    case: "createTransformStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateAmStmt create_am_stmt = 157 [json_name = "CreateAmStmt"];
     */
    value: CreateAmStmt;
    case: "createAmStmt";
  } | {
    /**
     * @generated from field: pg_query.CreatePublicationStmt create_publication_stmt = 158 [json_name = "CreatePublicationStmt"];
     */
    value: CreatePublicationStmt;
    case: "createPublicationStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterPublicationStmt alter_publication_stmt = 159 [json_name = "AlterPublicationStmt"];
     */
    value: AlterPublicationStmt;
    case: "alterPublicationStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateSubscriptionStmt create_subscription_stmt = 160 [json_name = "CreateSubscriptionStmt"];
     */
    value: CreateSubscriptionStmt;
    case: "createSubscriptionStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterSubscriptionStmt alter_subscription_stmt = 161 [json_name = "AlterSubscriptionStmt"];
     */
    value: AlterSubscriptionStmt;
    case: "alterSubscriptionStmt";
  } | {
    /**
     * @generated from field: pg_query.DropSubscriptionStmt drop_subscription_stmt = 162 [json_name = "DropSubscriptionStmt"];
     */
    value: DropSubscriptionStmt;
    case: "dropSubscriptionStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateStatsStmt create_stats_stmt = 163 [json_name = "CreateStatsStmt"];
     */
    value: CreateStatsStmt;
    case: "createStatsStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterCollationStmt alter_collation_stmt = 164 [json_name = "AlterCollationStmt"];
     */
    value: AlterCollationStmt;
    case: "alterCollationStmt";
  } | {
    /**
     * @generated from field: pg_query.CallStmt call_stmt = 165 [json_name = "CallStmt"];
     */
    value: CallStmt;
    case: "callStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterStatsStmt alter_stats_stmt = 166 [json_name = "AlterStatsStmt"];
     */
    value: AlterStatsStmt;
    case: "alterStatsStmt";
  } | {
    /**
     * @generated from field: pg_query.A_Expr a_expr = 167 [json_name = "A_Expr"];
     */
    value: A_Expr;
    case: "aExpr";
  } | {
    /**
     * @generated from field: pg_query.ColumnRef column_ref = 168 [json_name = "ColumnRef"];
     */
    value: ColumnRef;
    case: "columnRef";
  } | {
    /**
     * @generated from field: pg_query.ParamRef param_ref = 169 [json_name = "ParamRef"];
     */
    value: ParamRef;
    case: "paramRef";
  } | {
    /**
     * @generated from field: pg_query.A_Const a_const = 170 [json_name = "A_Const"];
     */
    value: A_Const;
    case: "aConst";
  } | {
    /**
     * @generated from field: pg_query.FuncCall func_call = 171 [json_name = "FuncCall"];
     */
    value: FuncCall;
    case: "funcCall";
  } | {
    /**
     * @generated from field: pg_query.A_Star a_star = 172 [json_name = "A_Star"];
     */
    value: A_Star;
    case: "aStar";
  } | {
    /**
     * @generated from field: pg_query.A_Indices a_indices = 173 [json_name = "A_Indices"];
     */
    value: A_Indices;
    case: "aIndices";
  } | {
    /**
     * @generated from field: pg_query.A_Indirection a_indirection = 174 [json_name = "A_Indirection"];
     */
    value: A_Indirection;
    case: "aIndirection";
  } | {
    /**
     * @generated from field: pg_query.A_ArrayExpr a_array_expr = 175 [json_name = "A_ArrayExpr"];
     */
    value: A_ArrayExpr;
    case: "aArrayExpr";
  } | {
    /**
     * @generated from field: pg_query.ResTarget res_target = 176 [json_name = "ResTarget"];
     */
    value: ResTarget;
    case: "resTarget";
  } | {
    /**
     * @generated from field: pg_query.MultiAssignRef multi_assign_ref = 177 [json_name = "MultiAssignRef"];
     */
    value: MultiAssignRef;
    case: "multiAssignRef";
  } | {
    /**
     * @generated from field: pg_query.TypeCast type_cast = 178 [json_name = "TypeCast"];
     */
    value: TypeCast;
    case: "typeCast";
  } | {
    /**
     * @generated from field: pg_query.CollateClause collate_clause = 179 [json_name = "CollateClause"];
     */
    value: CollateClause;
    case: "collateClause";
  } | {
    /**
     * @generated from field: pg_query.SortBy sort_by = 180 [json_name = "SortBy"];
     */
    value: SortBy;
    case: "sortBy";
  } | {
    /**
     * @generated from field: pg_query.WindowDef window_def = 181 [json_name = "WindowDef"];
     */
    value: WindowDef;
    case: "windowDef";
  } | {
    /**
     * @generated from field: pg_query.RangeSubselect range_subselect = 182 [json_name = "RangeSubselect"];
     */
    value: RangeSubselect;
    case: "rangeSubselect";
  } | {
    /**
     * @generated from field: pg_query.RangeFunction range_function = 183 [json_name = "RangeFunction"];
     */
    value: RangeFunction;
    case: "rangeFunction";
  } | {
    /**
     * @generated from field: pg_query.RangeTableSample range_table_sample = 184 [json_name = "RangeTableSample"];
     */
    value: RangeTableSample;
    case: "rangeTableSample";
  } | {
    /**
     * @generated from field: pg_query.RangeTableFunc range_table_func = 185 [json_name = "RangeTableFunc"];
     */
    value: RangeTableFunc;
    case: "rangeTableFunc";
  } | {
    /**
     * @generated from field: pg_query.RangeTableFuncCol range_table_func_col = 186 [json_name = "RangeTableFuncCol"];
     */
    value: RangeTableFuncCol;
    case: "rangeTableFuncCol";
  } | {
    /**
     * @generated from field: pg_query.TypeName type_name = 187 [json_name = "TypeName"];
     */
    value: TypeName;
    case: "typeName";
  } | {
    /**
     * @generated from field: pg_query.ColumnDef column_def = 188 [json_name = "ColumnDef"];
     */
    value: ColumnDef;
    case: "columnDef";
  } | {
    /**
     * @generated from field: pg_query.IndexElem index_elem = 189 [json_name = "IndexElem"];
     */
    value: IndexElem;
    case: "indexElem";
  } | {
    /**
     * @generated from field: pg_query.Constraint constraint = 190 [json_name = "Constraint"];
     */
    value: Constraint;
    case: "constraint";
  } | {
    /**
     * @generated from field: pg_query.DefElem def_elem = 191 [json_name = "DefElem"];
     */
    value: DefElem;
    case: "defElem";
  } | {
    /**
     * @generated from field: pg_query.RangeTblEntry range_tbl_entry = 192 [json_name = "RangeTblEntry"];
     */
    value: RangeTblEntry;
    case: "rangeTblEntry";
  } | {
    /**
     * @generated from field: pg_query.RangeTblFunction range_tbl_function = 193 [json_name = "RangeTblFunction"];
     */
    value: RangeTblFunction;
    case: "rangeTblFunction";
  } | {
    /**
     * @generated from field: pg_query.TableSampleClause table_sample_clause = 194 [json_name = "TableSampleClause"];
     */
    value: TableSampleClause;
    case: "tableSampleClause";
  } | {
    /**
     * @generated from field: pg_query.WithCheckOption with_check_option = 195 [json_name = "WithCheckOption"];
     */
    value: WithCheckOption;
    case: "withCheckOption";
  } | {
    /**
     * @generated from field: pg_query.SortGroupClause sort_group_clause = 196 [json_name = "SortGroupClause"];
     */
    value: SortGroupClause;
    case: "sortGroupClause";
  } | {
    /**
     * @generated from field: pg_query.GroupingSet grouping_set = 197 [json_name = "GroupingSet"];
     */
    value: GroupingSet;
    case: "groupingSet";
  } | {
    /**
     * @generated from field: pg_query.WindowClause window_clause = 198 [json_name = "WindowClause"];
     */
    value: WindowClause;
    case: "windowClause";
  } | {
    /**
     * @generated from field: pg_query.ObjectWithArgs object_with_args = 199 [json_name = "ObjectWithArgs"];
     */
    value: ObjectWithArgs;
    case: "objectWithArgs";
  } | {
    /**
     * @generated from field: pg_query.AccessPriv access_priv = 200 [json_name = "AccessPriv"];
     */
    value: AccessPriv;
    case: "accessPriv";
  } | {
    /**
     * @generated from field: pg_query.CreateOpClassItem create_op_class_item = 201 [json_name = "CreateOpClassItem"];
     */
    value: CreateOpClassItem;
    case: "createOpClassItem";
  } | {
    /**
     * @generated from field: pg_query.TableLikeClause table_like_clause = 202 [json_name = "TableLikeClause"];
     */
    value: TableLikeClause;
    case: "tableLikeClause";
  } | {
    /**
     * @generated from field: pg_query.FunctionParameter function_parameter = 203 [json_name = "FunctionParameter"];
     */
    value: FunctionParameter;
    case: "functionParameter";
  } | {
    /**
     * @generated from field: pg_query.LockingClause locking_clause = 204 [json_name = "LockingClause"];
     */
    value: LockingClause;
    case: "lockingClause";
  } | {
    /**
     * @generated from field: pg_query.RowMarkClause row_mark_clause = 205 [json_name = "RowMarkClause"];
     */
    value: RowMarkClause;
    case: "rowMarkClause";
  } | {
    /**
     * @generated from field: pg_query.XmlSerialize xml_serialize = 206 [json_name = "XmlSerialize"];
     */
    value: XmlSerialize;
    case: "xmlSerialize";
  } | {
    /**
     * @generated from field: pg_query.WithClause with_clause = 207 [json_name = "WithClause"];
     */
    value: WithClause;
    case: "withClause";
  } | {
    /**
     * @generated from field: pg_query.InferClause infer_clause = 208 [json_name = "InferClause"];
     */
    value: InferClause;
    case: "inferClause";
  } | {
    /**
     * @generated from field: pg_query.OnConflictClause on_conflict_clause = 209 [json_name = "OnConflictClause"];
     */
    value: OnConflictClause;
    case: "onConflictClause";
  } | {
    /**
     * @generated from field: pg_query.CommonTableExpr common_table_expr = 210 [json_name = "CommonTableExpr"];
     */
    value: CommonTableExpr;
    case: "commonTableExpr";
  } | {
    /**
     * @generated from field: pg_query.RoleSpec role_spec = 211 [json_name = "RoleSpec"];
     */
    value: RoleSpec;
    case: "roleSpec";
  } | {
    /**
     * @generated from field: pg_query.TriggerTransition trigger_transition = 212 [json_name = "TriggerTransition"];
     */
    value: TriggerTransition;
    case: "triggerTransition";
  } | {
    /**
     * @generated from field: pg_query.PartitionElem partition_elem = 213 [json_name = "PartitionElem"];
     */
    value: PartitionElem;
    case: "partitionElem";
  } | {
    /**
     * @generated from field: pg_query.PartitionSpec partition_spec = 214 [json_name = "PartitionSpec"];
     */
    value: PartitionSpec;
    case: "partitionSpec";
  } | {
    /**
     * @generated from field: pg_query.PartitionBoundSpec partition_bound_spec = 215 [json_name = "PartitionBoundSpec"];
     */
    value: PartitionBoundSpec;
    case: "partitionBoundSpec";
  } | {
    /**
     * @generated from field: pg_query.PartitionRangeDatum partition_range_datum = 216 [json_name = "PartitionRangeDatum"];
     */
    value: PartitionRangeDatum;
    case: "partitionRangeDatum";
  } | {
    /**
     * @generated from field: pg_query.PartitionCmd partition_cmd = 217 [json_name = "PartitionCmd"];
     */
    value: PartitionCmd;
    case: "partitionCmd";
  } | {
    /**
     * @generated from field: pg_query.VacuumRelation vacuum_relation = 218 [json_name = "VacuumRelation"];
     */
    value: VacuumRelation;
    case: "vacuumRelation";
  } | {
    /**
     * @generated from field: pg_query.InlineCodeBlock inline_code_block = 219 [json_name = "InlineCodeBlock"];
     */
    value: InlineCodeBlock;
    case: "inlineCodeBlock";
  } | {
    /**
     * @generated from field: pg_query.CallContext call_context = 220 [json_name = "CallContext"];
     */
    value: CallContext;
    case: "callContext";
  } | {
    /**
     * @generated from field: pg_query.Integer integer = 221 [json_name = "Integer"];
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: pg_query.Float float = 222 [json_name = "Float"];
     */
    value: Float;
    case: "float";
  } | {
    /**
     * @generated from field: pg_query.String string = 223 [json_name = "String"];
     */
    value: String;
    case: "string";
  } | {
    /**
     * @generated from field: pg_query.BitString bit_string = 224 [json_name = "BitString"];
     */
    value: BitString;
    case: "bitString";
  } | {
    /**
     * @generated from field: pg_query.Null null = 225 [json_name = "Null"];
     */
    value: Null;
    case: "null";
  } | {
    /**
     * @generated from field: pg_query.List list = 226 [json_name = "List"];
     */
    value: List;
    case: "list";
  } | {
    /**
     * @generated from field: pg_query.IntList int_list = 227 [json_name = "IntList"];
     */
    value: IntList;
    case: "intList";
  } | {
    /**
     * @generated from field: pg_query.OidList oid_list = 228 [json_name = "OidList"];
     */
    value: OidList;
    case: "oidList";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message pg_query.Node.
 * Use `create(NodeSchema)` to create a new message.
 */
export const NodeSchema: GenMessage<Node> = /*@__PURE__*/
  messageDesc(file_pg_query, 2);

/**
 * @generated from message pg_query.Integer
 */
export type Integer = Message<"pg_query.Integer"> & {
  /**
   * machine integer 
   *
   * @generated from field: int32 ival = 1;
   */
  ival: number;
};

/**
 * Describes the message pg_query.Integer.
 * Use `create(IntegerSchema)` to create a new message.
 */
export const IntegerSchema: GenMessage<Integer> = /*@__PURE__*/
  messageDesc(file_pg_query, 3);

/**
 * @generated from message pg_query.Float
 */
export type Float = Message<"pg_query.Float"> & {
  /**
   * string 
   *
   * @generated from field: string str = 1;
   */
  str: string;
};

/**
 * Describes the message pg_query.Float.
 * Use `create(FloatSchema)` to create a new message.
 */
export const FloatSchema: GenMessage<Float> = /*@__PURE__*/
  messageDesc(file_pg_query, 4);

/**
 * @generated from message pg_query.String
 */
export type String = Message<"pg_query.String"> & {
  /**
   * string 
   *
   * @generated from field: string str = 1;
   */
  str: string;
};

/**
 * Describes the message pg_query.String.
 * Use `create(StringSchema)` to create a new message.
 */
export const StringSchema: GenMessage<String> = /*@__PURE__*/
  messageDesc(file_pg_query, 5);

/**
 * @generated from message pg_query.BitString
 */
export type BitString = Message<"pg_query.BitString"> & {
  /**
   * string 
   *
   * @generated from field: string str = 1;
   */
  str: string;
};

/**
 * Describes the message pg_query.BitString.
 * Use `create(BitStringSchema)` to create a new message.
 */
export const BitStringSchema: GenMessage<BitString> = /*@__PURE__*/
  messageDesc(file_pg_query, 6);

/**
 * intentionally empty
 *
 * @generated from message pg_query.Null
 */
export type Null = Message<"pg_query.Null"> & {
};

/**
 * Describes the message pg_query.Null.
 * Use `create(NullSchema)` to create a new message.
 */
export const NullSchema: GenMessage<Null> = /*@__PURE__*/
  messageDesc(file_pg_query, 7);

/**
 * @generated from message pg_query.List
 */
export type List = Message<"pg_query.List"> & {
  /**
   * @generated from field: repeated pg_query.Node items = 1;
   */
  items: Node[];
};

/**
 * Describes the message pg_query.List.
 * Use `create(ListSchema)` to create a new message.
 */
export const ListSchema: GenMessage<List> = /*@__PURE__*/
  messageDesc(file_pg_query, 8);

/**
 * @generated from message pg_query.OidList
 */
export type OidList = Message<"pg_query.OidList"> & {
  /**
   * @generated from field: repeated pg_query.Node items = 1;
   */
  items: Node[];
};

/**
 * Describes the message pg_query.OidList.
 * Use `create(OidListSchema)` to create a new message.
 */
export const OidListSchema: GenMessage<OidList> = /*@__PURE__*/
  messageDesc(file_pg_query, 9);

/**
 * @generated from message pg_query.IntList
 */
export type IntList = Message<"pg_query.IntList"> & {
  /**
   * @generated from field: repeated pg_query.Node items = 1;
   */
  items: Node[];
};

/**
 * Describes the message pg_query.IntList.
 * Use `create(IntListSchema)` to create a new message.
 */
export const IntListSchema: GenMessage<IntList> = /*@__PURE__*/
  messageDesc(file_pg_query, 10);

/**
 * @generated from message pg_query.Alias
 */
export type Alias = Message<"pg_query.Alias"> & {
  /**
   * @generated from field: string aliasname = 1;
   */
  aliasname: string;

  /**
   * @generated from field: repeated pg_query.Node colnames = 2;
   */
  colnames: Node[];
};

/**
 * Describes the message pg_query.Alias.
 * Use `create(AliasSchema)` to create a new message.
 */
export const AliasSchema: GenMessage<Alias> = /*@__PURE__*/
  messageDesc(file_pg_query, 11);

/**
 * @generated from message pg_query.RangeVar
 */
export type RangeVar = Message<"pg_query.RangeVar"> & {
  /**
   * @generated from field: string catalogname = 1;
   */
  catalogname: string;

  /**
   * @generated from field: string schemaname = 2;
   */
  schemaname: string;

  /**
   * @generated from field: string relname = 3;
   */
  relname: string;

  /**
   * @generated from field: bool inh = 4;
   */
  inh: boolean;

  /**
   * @generated from field: string relpersistence = 5;
   */
  relpersistence: string;

  /**
   * @generated from field: pg_query.Alias alias = 6;
   */
  alias?: Alias;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * Describes the message pg_query.RangeVar.
 * Use `create(RangeVarSchema)` to create a new message.
 */
export const RangeVarSchema: GenMessage<RangeVar> = /*@__PURE__*/
  messageDesc(file_pg_query, 12);

/**
 * @generated from message pg_query.TableFunc
 */
export type TableFunc = Message<"pg_query.TableFunc"> & {
  /**
   * @generated from field: repeated pg_query.Node ns_uris = 1 [json_name = "ns_uris"];
   */
  nsUris: Node[];

  /**
   * @generated from field: repeated pg_query.Node ns_names = 2 [json_name = "ns_names"];
   */
  nsNames: Node[];

  /**
   * @generated from field: pg_query.Node docexpr = 3;
   */
  docexpr?: Node;

  /**
   * @generated from field: pg_query.Node rowexpr = 4;
   */
  rowexpr?: Node;

  /**
   * @generated from field: repeated pg_query.Node colnames = 5;
   */
  colnames: Node[];

  /**
   * @generated from field: repeated pg_query.Node coltypes = 6;
   */
  coltypes: Node[];

  /**
   * @generated from field: repeated pg_query.Node coltypmods = 7;
   */
  coltypmods: Node[];

  /**
   * @generated from field: repeated pg_query.Node colcollations = 8;
   */
  colcollations: Node[];

  /**
   * @generated from field: repeated pg_query.Node colexprs = 9;
   */
  colexprs: Node[];

  /**
   * @generated from field: repeated pg_query.Node coldefexprs = 10;
   */
  coldefexprs: Node[];

  /**
   * @generated from field: repeated uint64 notnulls = 11;
   */
  notnulls: bigint[];

  /**
   * @generated from field: int32 ordinalitycol = 12;
   */
  ordinalitycol: number;

  /**
   * @generated from field: int32 location = 13;
   */
  location: number;
};

/**
 * Describes the message pg_query.TableFunc.
 * Use `create(TableFuncSchema)` to create a new message.
 */
export const TableFuncSchema: GenMessage<TableFunc> = /*@__PURE__*/
  messageDesc(file_pg_query, 13);

/**
 * @generated from message pg_query.Expr
 */
export type Expr = Message<"pg_query.Expr"> & {
};

/**
 * Describes the message pg_query.Expr.
 * Use `create(ExprSchema)` to create a new message.
 */
export const ExprSchema: GenMessage<Expr> = /*@__PURE__*/
  messageDesc(file_pg_query, 14);

/**
 * @generated from message pg_query.Var
 */
export type Var = Message<"pg_query.Var"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 varno = 2;
   */
  varno: number;

  /**
   * @generated from field: int32 varattno = 3;
   */
  varattno: number;

  /**
   * @generated from field: uint32 vartype = 4;
   */
  vartype: number;

  /**
   * @generated from field: int32 vartypmod = 5;
   */
  vartypmod: number;

  /**
   * @generated from field: uint32 varcollid = 6;
   */
  varcollid: number;

  /**
   * @generated from field: uint32 varlevelsup = 7;
   */
  varlevelsup: number;

  /**
   * @generated from field: uint32 varnosyn = 8;
   */
  varnosyn: number;

  /**
   * @generated from field: int32 varattnosyn = 9;
   */
  varattnosyn: number;

  /**
   * @generated from field: int32 location = 10;
   */
  location: number;
};

/**
 * Describes the message pg_query.Var.
 * Use `create(VarSchema)` to create a new message.
 */
export const VarSchema: GenMessage<Var> = /*@__PURE__*/
  messageDesc(file_pg_query, 15);

/**
 * @generated from message pg_query.Param
 */
export type Param = Message<"pg_query.Param"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.ParamKind paramkind = 2;
   */
  paramkind: ParamKind;

  /**
   * @generated from field: int32 paramid = 3;
   */
  paramid: number;

  /**
   * @generated from field: uint32 paramtype = 4;
   */
  paramtype: number;

  /**
   * @generated from field: int32 paramtypmod = 5;
   */
  paramtypmod: number;

  /**
   * @generated from field: uint32 paramcollid = 6;
   */
  paramcollid: number;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * Describes the message pg_query.Param.
 * Use `create(ParamSchema)` to create a new message.
 */
export const ParamSchema: GenMessage<Param> = /*@__PURE__*/
  messageDesc(file_pg_query, 16);

/**
 * @generated from message pg_query.Aggref
 */
export type Aggref = Message<"pg_query.Aggref"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 aggfnoid = 2;
   */
  aggfnoid: number;

  /**
   * @generated from field: uint32 aggtype = 3;
   */
  aggtype: number;

  /**
   * @generated from field: uint32 aggcollid = 4;
   */
  aggcollid: number;

  /**
   * @generated from field: uint32 inputcollid = 5;
   */
  inputcollid: number;

  /**
   * @generated from field: uint32 aggtranstype = 6;
   */
  aggtranstype: number;

  /**
   * @generated from field: repeated pg_query.Node aggargtypes = 7;
   */
  aggargtypes: Node[];

  /**
   * @generated from field: repeated pg_query.Node aggdirectargs = 8;
   */
  aggdirectargs: Node[];

  /**
   * @generated from field: repeated pg_query.Node args = 9;
   */
  args: Node[];

  /**
   * @generated from field: repeated pg_query.Node aggorder = 10;
   */
  aggorder: Node[];

  /**
   * @generated from field: repeated pg_query.Node aggdistinct = 11;
   */
  aggdistinct: Node[];

  /**
   * @generated from field: pg_query.Node aggfilter = 12;
   */
  aggfilter?: Node;

  /**
   * @generated from field: bool aggstar = 13;
   */
  aggstar: boolean;

  /**
   * @generated from field: bool aggvariadic = 14;
   */
  aggvariadic: boolean;

  /**
   * @generated from field: string aggkind = 15;
   */
  aggkind: string;

  /**
   * @generated from field: uint32 agglevelsup = 16;
   */
  agglevelsup: number;

  /**
   * @generated from field: pg_query.AggSplit aggsplit = 17;
   */
  aggsplit: AggSplit;

  /**
   * @generated from field: int32 location = 18;
   */
  location: number;
};

/**
 * Describes the message pg_query.Aggref.
 * Use `create(AggrefSchema)` to create a new message.
 */
export const AggrefSchema: GenMessage<Aggref> = /*@__PURE__*/
  messageDesc(file_pg_query, 17);

/**
 * @generated from message pg_query.GroupingFunc
 */
export type GroupingFunc = Message<"pg_query.GroupingFunc"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: repeated pg_query.Node args = 2;
   */
  args: Node[];

  /**
   * @generated from field: repeated pg_query.Node refs = 3;
   */
  refs: Node[];

  /**
   * @generated from field: repeated pg_query.Node cols = 4;
   */
  cols: Node[];

  /**
   * @generated from field: uint32 agglevelsup = 5;
   */
  agglevelsup: number;

  /**
   * @generated from field: int32 location = 6;
   */
  location: number;
};

/**
 * Describes the message pg_query.GroupingFunc.
 * Use `create(GroupingFuncSchema)` to create a new message.
 */
export const GroupingFuncSchema: GenMessage<GroupingFunc> = /*@__PURE__*/
  messageDesc(file_pg_query, 18);

/**
 * @generated from message pg_query.WindowFunc
 */
export type WindowFunc = Message<"pg_query.WindowFunc"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 winfnoid = 2;
   */
  winfnoid: number;

  /**
   * @generated from field: uint32 wintype = 3;
   */
  wintype: number;

  /**
   * @generated from field: uint32 wincollid = 4;
   */
  wincollid: number;

  /**
   * @generated from field: uint32 inputcollid = 5;
   */
  inputcollid: number;

  /**
   * @generated from field: repeated pg_query.Node args = 6;
   */
  args: Node[];

  /**
   * @generated from field: pg_query.Node aggfilter = 7;
   */
  aggfilter?: Node;

  /**
   * @generated from field: uint32 winref = 8;
   */
  winref: number;

  /**
   * @generated from field: bool winstar = 9;
   */
  winstar: boolean;

  /**
   * @generated from field: bool winagg = 10;
   */
  winagg: boolean;

  /**
   * @generated from field: int32 location = 11;
   */
  location: number;
};

/**
 * Describes the message pg_query.WindowFunc.
 * Use `create(WindowFuncSchema)` to create a new message.
 */
export const WindowFuncSchema: GenMessage<WindowFunc> = /*@__PURE__*/
  messageDesc(file_pg_query, 19);

/**
 * @generated from message pg_query.SubscriptingRef
 */
export type SubscriptingRef = Message<"pg_query.SubscriptingRef"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 refcontainertype = 2;
   */
  refcontainertype: number;

  /**
   * @generated from field: uint32 refelemtype = 3;
   */
  refelemtype: number;

  /**
   * @generated from field: int32 reftypmod = 4;
   */
  reftypmod: number;

  /**
   * @generated from field: uint32 refcollid = 5;
   */
  refcollid: number;

  /**
   * @generated from field: repeated pg_query.Node refupperindexpr = 6;
   */
  refupperindexpr: Node[];

  /**
   * @generated from field: repeated pg_query.Node reflowerindexpr = 7;
   */
  reflowerindexpr: Node[];

  /**
   * @generated from field: pg_query.Node refexpr = 8;
   */
  refexpr?: Node;

  /**
   * @generated from field: pg_query.Node refassgnexpr = 9;
   */
  refassgnexpr?: Node;
};

/**
 * Describes the message pg_query.SubscriptingRef.
 * Use `create(SubscriptingRefSchema)` to create a new message.
 */
export const SubscriptingRefSchema: GenMessage<SubscriptingRef> = /*@__PURE__*/
  messageDesc(file_pg_query, 20);

/**
 * @generated from message pg_query.FuncExpr
 */
export type FuncExpr = Message<"pg_query.FuncExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 funcid = 2;
   */
  funcid: number;

  /**
   * @generated from field: uint32 funcresulttype = 3;
   */
  funcresulttype: number;

  /**
   * @generated from field: bool funcretset = 4;
   */
  funcretset: boolean;

  /**
   * @generated from field: bool funcvariadic = 5;
   */
  funcvariadic: boolean;

  /**
   * @generated from field: pg_query.CoercionForm funcformat = 6;
   */
  funcformat: CoercionForm;

  /**
   * @generated from field: uint32 funccollid = 7;
   */
  funccollid: number;

  /**
   * @generated from field: uint32 inputcollid = 8;
   */
  inputcollid: number;

  /**
   * @generated from field: repeated pg_query.Node args = 9;
   */
  args: Node[];

  /**
   * @generated from field: int32 location = 10;
   */
  location: number;
};

/**
 * Describes the message pg_query.FuncExpr.
 * Use `create(FuncExprSchema)` to create a new message.
 */
export const FuncExprSchema: GenMessage<FuncExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 21);

/**
 * @generated from message pg_query.NamedArgExpr
 */
export type NamedArgExpr = Message<"pg_query.NamedArgExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: int32 argnumber = 4;
   */
  argnumber: number;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * Describes the message pg_query.NamedArgExpr.
 * Use `create(NamedArgExprSchema)` to create a new message.
 */
export const NamedArgExprSchema: GenMessage<NamedArgExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 22);

/**
 * @generated from message pg_query.OpExpr
 */
export type OpExpr = Message<"pg_query.OpExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 opno = 2;
   */
  opno: number;

  /**
   * @generated from field: uint32 opfuncid = 3;
   */
  opfuncid: number;

  /**
   * @generated from field: uint32 opresulttype = 4;
   */
  opresulttype: number;

  /**
   * @generated from field: bool opretset = 5;
   */
  opretset: boolean;

  /**
   * @generated from field: uint32 opcollid = 6;
   */
  opcollid: number;

  /**
   * @generated from field: uint32 inputcollid = 7;
   */
  inputcollid: number;

  /**
   * @generated from field: repeated pg_query.Node args = 8;
   */
  args: Node[];

  /**
   * @generated from field: int32 location = 9;
   */
  location: number;
};

/**
 * Describes the message pg_query.OpExpr.
 * Use `create(OpExprSchema)` to create a new message.
 */
export const OpExprSchema: GenMessage<OpExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 23);

/**
 * @generated from message pg_query.DistinctExpr
 */
export type DistinctExpr = Message<"pg_query.DistinctExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 opno = 2;
   */
  opno: number;

  /**
   * @generated from field: uint32 opfuncid = 3;
   */
  opfuncid: number;

  /**
   * @generated from field: uint32 opresulttype = 4;
   */
  opresulttype: number;

  /**
   * @generated from field: bool opretset = 5;
   */
  opretset: boolean;

  /**
   * @generated from field: uint32 opcollid = 6;
   */
  opcollid: number;

  /**
   * @generated from field: uint32 inputcollid = 7;
   */
  inputcollid: number;

  /**
   * @generated from field: repeated pg_query.Node args = 8;
   */
  args: Node[];

  /**
   * @generated from field: int32 location = 9;
   */
  location: number;
};

/**
 * Describes the message pg_query.DistinctExpr.
 * Use `create(DistinctExprSchema)` to create a new message.
 */
export const DistinctExprSchema: GenMessage<DistinctExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 24);

/**
 * @generated from message pg_query.NullIfExpr
 */
export type NullIfExpr = Message<"pg_query.NullIfExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 opno = 2;
   */
  opno: number;

  /**
   * @generated from field: uint32 opfuncid = 3;
   */
  opfuncid: number;

  /**
   * @generated from field: uint32 opresulttype = 4;
   */
  opresulttype: number;

  /**
   * @generated from field: bool opretset = 5;
   */
  opretset: boolean;

  /**
   * @generated from field: uint32 opcollid = 6;
   */
  opcollid: number;

  /**
   * @generated from field: uint32 inputcollid = 7;
   */
  inputcollid: number;

  /**
   * @generated from field: repeated pg_query.Node args = 8;
   */
  args: Node[];

  /**
   * @generated from field: int32 location = 9;
   */
  location: number;
};

/**
 * Describes the message pg_query.NullIfExpr.
 * Use `create(NullIfExprSchema)` to create a new message.
 */
export const NullIfExprSchema: GenMessage<NullIfExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 25);

/**
 * @generated from message pg_query.ScalarArrayOpExpr
 */
export type ScalarArrayOpExpr = Message<"pg_query.ScalarArrayOpExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 opno = 2;
   */
  opno: number;

  /**
   * @generated from field: uint32 opfuncid = 3;
   */
  opfuncid: number;

  /**
   * @generated from field: bool use_or = 4;
   */
  useOr: boolean;

  /**
   * @generated from field: uint32 inputcollid = 5;
   */
  inputcollid: number;

  /**
   * @generated from field: repeated pg_query.Node args = 6;
   */
  args: Node[];

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * Describes the message pg_query.ScalarArrayOpExpr.
 * Use `create(ScalarArrayOpExprSchema)` to create a new message.
 */
export const ScalarArrayOpExprSchema: GenMessage<ScalarArrayOpExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 26);

/**
 * @generated from message pg_query.BoolExpr
 */
export type BoolExpr = Message<"pg_query.BoolExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.BoolExprType boolop = 2;
   */
  boolop: BoolExprType;

  /**
   * @generated from field: repeated pg_query.Node args = 3;
   */
  args: Node[];

  /**
   * @generated from field: int32 location = 4;
   */
  location: number;
};

/**
 * Describes the message pg_query.BoolExpr.
 * Use `create(BoolExprSchema)` to create a new message.
 */
export const BoolExprSchema: GenMessage<BoolExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 27);

/**
 * @generated from message pg_query.SubLink
 */
export type SubLink = Message<"pg_query.SubLink"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.SubLinkType sub_link_type = 2;
   */
  subLinkType: SubLinkType;

  /**
   * @generated from field: int32 sub_link_id = 3;
   */
  subLinkId: number;

  /**
   * @generated from field: pg_query.Node testexpr = 4;
   */
  testexpr?: Node;

  /**
   * @generated from field: repeated pg_query.Node oper_name = 5;
   */
  operName: Node[];

  /**
   * @generated from field: pg_query.Node subselect = 6;
   */
  subselect?: Node;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * Describes the message pg_query.SubLink.
 * Use `create(SubLinkSchema)` to create a new message.
 */
export const SubLinkSchema: GenMessage<SubLink> = /*@__PURE__*/
  messageDesc(file_pg_query, 28);

/**
 * @generated from message pg_query.SubPlan
 */
export type SubPlan = Message<"pg_query.SubPlan"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.SubLinkType sub_link_type = 2;
   */
  subLinkType: SubLinkType;

  /**
   * @generated from field: pg_query.Node testexpr = 3;
   */
  testexpr?: Node;

  /**
   * @generated from field: repeated pg_query.Node param_ids = 4;
   */
  paramIds: Node[];

  /**
   * @generated from field: int32 plan_id = 5 [json_name = "plan_id"];
   */
  planId: number;

  /**
   * @generated from field: string plan_name = 6 [json_name = "plan_name"];
   */
  planName: string;

  /**
   * @generated from field: uint32 first_col_type = 7;
   */
  firstColType: number;

  /**
   * @generated from field: int32 first_col_typmod = 8;
   */
  firstColTypmod: number;

  /**
   * @generated from field: uint32 first_col_collation = 9;
   */
  firstColCollation: number;

  /**
   * @generated from field: bool use_hash_table = 10;
   */
  useHashTable: boolean;

  /**
   * @generated from field: bool unknown_eq_false = 11;
   */
  unknownEqFalse: boolean;

  /**
   * @generated from field: bool parallel_safe = 12 [json_name = "parallel_safe"];
   */
  parallelSafe: boolean;

  /**
   * @generated from field: repeated pg_query.Node set_param = 13;
   */
  setParam: Node[];

  /**
   * @generated from field: repeated pg_query.Node par_param = 14;
   */
  parParam: Node[];

  /**
   * @generated from field: repeated pg_query.Node args = 15;
   */
  args: Node[];

  /**
   * @generated from field: double startup_cost = 16 [json_name = "startup_cost"];
   */
  startupCost: number;

  /**
   * @generated from field: double per_call_cost = 17 [json_name = "per_call_cost"];
   */
  perCallCost: number;
};

/**
 * Describes the message pg_query.SubPlan.
 * Use `create(SubPlanSchema)` to create a new message.
 */
export const SubPlanSchema: GenMessage<SubPlan> = /*@__PURE__*/
  messageDesc(file_pg_query, 29);

/**
 * @generated from message pg_query.AlternativeSubPlan
 */
export type AlternativeSubPlan = Message<"pg_query.AlternativeSubPlan"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: repeated pg_query.Node subplans = 2;
   */
  subplans: Node[];
};

/**
 * Describes the message pg_query.AlternativeSubPlan.
 * Use `create(AlternativeSubPlanSchema)` to create a new message.
 */
export const AlternativeSubPlanSchema: GenMessage<AlternativeSubPlan> = /*@__PURE__*/
  messageDesc(file_pg_query, 30);

/**
 * @generated from message pg_query.FieldSelect
 */
export type FieldSelect = Message<"pg_query.FieldSelect"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: int32 fieldnum = 3;
   */
  fieldnum: number;

  /**
   * @generated from field: uint32 resulttype = 4;
   */
  resulttype: number;

  /**
   * @generated from field: int32 resulttypmod = 5;
   */
  resulttypmod: number;

  /**
   * @generated from field: uint32 resultcollid = 6;
   */
  resultcollid: number;
};

/**
 * Describes the message pg_query.FieldSelect.
 * Use `create(FieldSelectSchema)` to create a new message.
 */
export const FieldSelectSchema: GenMessage<FieldSelect> = /*@__PURE__*/
  messageDesc(file_pg_query, 31);

/**
 * @generated from message pg_query.FieldStore
 */
export type FieldStore = Message<"pg_query.FieldStore"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: repeated pg_query.Node newvals = 3;
   */
  newvals: Node[];

  /**
   * @generated from field: repeated pg_query.Node fieldnums = 4;
   */
  fieldnums: Node[];

  /**
   * @generated from field: uint32 resulttype = 5;
   */
  resulttype: number;
};

/**
 * Describes the message pg_query.FieldStore.
 * Use `create(FieldStoreSchema)` to create a new message.
 */
export const FieldStoreSchema: GenMessage<FieldStore> = /*@__PURE__*/
  messageDesc(file_pg_query, 32);

/**
 * @generated from message pg_query.RelabelType
 */
export type RelabelType = Message<"pg_query.RelabelType"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: uint32 resulttype = 3;
   */
  resulttype: number;

  /**
   * @generated from field: int32 resulttypmod = 4;
   */
  resulttypmod: number;

  /**
   * @generated from field: uint32 resultcollid = 5;
   */
  resultcollid: number;

  /**
   * @generated from field: pg_query.CoercionForm relabelformat = 6;
   */
  relabelformat: CoercionForm;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * Describes the message pg_query.RelabelType.
 * Use `create(RelabelTypeSchema)` to create a new message.
 */
export const RelabelTypeSchema: GenMessage<RelabelType> = /*@__PURE__*/
  messageDesc(file_pg_query, 33);

/**
 * @generated from message pg_query.CoerceViaIO
 */
export type CoerceViaIO = Message<"pg_query.CoerceViaIO"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: uint32 resulttype = 3;
   */
  resulttype: number;

  /**
   * @generated from field: uint32 resultcollid = 4;
   */
  resultcollid: number;

  /**
   * @generated from field: pg_query.CoercionForm coerceformat = 5;
   */
  coerceformat: CoercionForm;

  /**
   * @generated from field: int32 location = 6;
   */
  location: number;
};

/**
 * Describes the message pg_query.CoerceViaIO.
 * Use `create(CoerceViaIOSchema)` to create a new message.
 */
export const CoerceViaIOSchema: GenMessage<CoerceViaIO> = /*@__PURE__*/
  messageDesc(file_pg_query, 34);

/**
 * @generated from message pg_query.ArrayCoerceExpr
 */
export type ArrayCoerceExpr = Message<"pg_query.ArrayCoerceExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: pg_query.Node elemexpr = 3;
   */
  elemexpr?: Node;

  /**
   * @generated from field: uint32 resulttype = 4;
   */
  resulttype: number;

  /**
   * @generated from field: int32 resulttypmod = 5;
   */
  resulttypmod: number;

  /**
   * @generated from field: uint32 resultcollid = 6;
   */
  resultcollid: number;

  /**
   * @generated from field: pg_query.CoercionForm coerceformat = 7;
   */
  coerceformat: CoercionForm;

  /**
   * @generated from field: int32 location = 8;
   */
  location: number;
};

/**
 * Describes the message pg_query.ArrayCoerceExpr.
 * Use `create(ArrayCoerceExprSchema)` to create a new message.
 */
export const ArrayCoerceExprSchema: GenMessage<ArrayCoerceExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 35);

/**
 * @generated from message pg_query.ConvertRowtypeExpr
 */
export type ConvertRowtypeExpr = Message<"pg_query.ConvertRowtypeExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: uint32 resulttype = 3;
   */
  resulttype: number;

  /**
   * @generated from field: pg_query.CoercionForm convertformat = 4;
   */
  convertformat: CoercionForm;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * Describes the message pg_query.ConvertRowtypeExpr.
 * Use `create(ConvertRowtypeExprSchema)` to create a new message.
 */
export const ConvertRowtypeExprSchema: GenMessage<ConvertRowtypeExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 36);

/**
 * @generated from message pg_query.CollateExpr
 */
export type CollateExpr = Message<"pg_query.CollateExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: uint32 coll_oid = 3;
   */
  collOid: number;

  /**
   * @generated from field: int32 location = 4;
   */
  location: number;
};

/**
 * Describes the message pg_query.CollateExpr.
 * Use `create(CollateExprSchema)` to create a new message.
 */
export const CollateExprSchema: GenMessage<CollateExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 37);

/**
 * @generated from message pg_query.CaseExpr
 */
export type CaseExpr = Message<"pg_query.CaseExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 casetype = 2;
   */
  casetype: number;

  /**
   * @generated from field: uint32 casecollid = 3;
   */
  casecollid: number;

  /**
   * @generated from field: pg_query.Node arg = 4;
   */
  arg?: Node;

  /**
   * @generated from field: repeated pg_query.Node args = 5;
   */
  args: Node[];

  /**
   * @generated from field: pg_query.Node defresult = 6;
   */
  defresult?: Node;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * Describes the message pg_query.CaseExpr.
 * Use `create(CaseExprSchema)` to create a new message.
 */
export const CaseExprSchema: GenMessage<CaseExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 38);

/**
 * @generated from message pg_query.CaseWhen
 */
export type CaseWhen = Message<"pg_query.CaseWhen"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: Node;

  /**
   * @generated from field: pg_query.Node result = 3;
   */
  result?: Node;

  /**
   * @generated from field: int32 location = 4;
   */
  location: number;
};

/**
 * Describes the message pg_query.CaseWhen.
 * Use `create(CaseWhenSchema)` to create a new message.
 */
export const CaseWhenSchema: GenMessage<CaseWhen> = /*@__PURE__*/
  messageDesc(file_pg_query, 39);

/**
 * @generated from message pg_query.CaseTestExpr
 */
export type CaseTestExpr = Message<"pg_query.CaseTestExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 type_id = 2;
   */
  typeId: number;

  /**
   * @generated from field: int32 type_mod = 3;
   */
  typeMod: number;

  /**
   * @generated from field: uint32 collation = 4;
   */
  collation: number;
};

/**
 * Describes the message pg_query.CaseTestExpr.
 * Use `create(CaseTestExprSchema)` to create a new message.
 */
export const CaseTestExprSchema: GenMessage<CaseTestExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 40);

/**
 * @generated from message pg_query.ArrayExpr
 */
export type ArrayExpr = Message<"pg_query.ArrayExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 array_typeid = 2 [json_name = "array_typeid"];
   */
  arrayTypeid: number;

  /**
   * @generated from field: uint32 array_collid = 3 [json_name = "array_collid"];
   */
  arrayCollid: number;

  /**
   * @generated from field: uint32 element_typeid = 4 [json_name = "element_typeid"];
   */
  elementTypeid: number;

  /**
   * @generated from field: repeated pg_query.Node elements = 5;
   */
  elements: Node[];

  /**
   * @generated from field: bool multidims = 6;
   */
  multidims: boolean;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * Describes the message pg_query.ArrayExpr.
 * Use `create(ArrayExprSchema)` to create a new message.
 */
export const ArrayExprSchema: GenMessage<ArrayExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 41);

/**
 * @generated from message pg_query.RowExpr
 */
export type RowExpr = Message<"pg_query.RowExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: repeated pg_query.Node args = 2;
   */
  args: Node[];

  /**
   * @generated from field: uint32 row_typeid = 3 [json_name = "row_typeid"];
   */
  rowTypeid: number;

  /**
   * @generated from field: pg_query.CoercionForm row_format = 4 [json_name = "row_format"];
   */
  rowFormat: CoercionForm;

  /**
   * @generated from field: repeated pg_query.Node colnames = 5;
   */
  colnames: Node[];

  /**
   * @generated from field: int32 location = 6;
   */
  location: number;
};

/**
 * Describes the message pg_query.RowExpr.
 * Use `create(RowExprSchema)` to create a new message.
 */
export const RowExprSchema: GenMessage<RowExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 42);

/**
 * @generated from message pg_query.RowCompareExpr
 */
export type RowCompareExpr = Message<"pg_query.RowCompareExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.RowCompareType rctype = 2;
   */
  rctype: RowCompareType;

  /**
   * @generated from field: repeated pg_query.Node opnos = 3;
   */
  opnos: Node[];

  /**
   * @generated from field: repeated pg_query.Node opfamilies = 4;
   */
  opfamilies: Node[];

  /**
   * @generated from field: repeated pg_query.Node inputcollids = 5;
   */
  inputcollids: Node[];

  /**
   * @generated from field: repeated pg_query.Node largs = 6;
   */
  largs: Node[];

  /**
   * @generated from field: repeated pg_query.Node rargs = 7;
   */
  rargs: Node[];
};

/**
 * Describes the message pg_query.RowCompareExpr.
 * Use `create(RowCompareExprSchema)` to create a new message.
 */
export const RowCompareExprSchema: GenMessage<RowCompareExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 43);

/**
 * @generated from message pg_query.CoalesceExpr
 */
export type CoalesceExpr = Message<"pg_query.CoalesceExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 coalescetype = 2;
   */
  coalescetype: number;

  /**
   * @generated from field: uint32 coalescecollid = 3;
   */
  coalescecollid: number;

  /**
   * @generated from field: repeated pg_query.Node args = 4;
   */
  args: Node[];

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * Describes the message pg_query.CoalesceExpr.
 * Use `create(CoalesceExprSchema)` to create a new message.
 */
export const CoalesceExprSchema: GenMessage<CoalesceExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 44);

/**
 * @generated from message pg_query.MinMaxExpr
 */
export type MinMaxExpr = Message<"pg_query.MinMaxExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 minmaxtype = 2;
   */
  minmaxtype: number;

  /**
   * @generated from field: uint32 minmaxcollid = 3;
   */
  minmaxcollid: number;

  /**
   * @generated from field: uint32 inputcollid = 4;
   */
  inputcollid: number;

  /**
   * @generated from field: pg_query.MinMaxOp op = 5;
   */
  op: MinMaxOp;

  /**
   * @generated from field: repeated pg_query.Node args = 6;
   */
  args: Node[];

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * Describes the message pg_query.MinMaxExpr.
 * Use `create(MinMaxExprSchema)` to create a new message.
 */
export const MinMaxExprSchema: GenMessage<MinMaxExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 45);

/**
 * @generated from message pg_query.SQLValueFunction
 */
export type SQLValueFunction = Message<"pg_query.SQLValueFunction"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.SQLValueFunctionOp op = 2;
   */
  op: SQLValueFunctionOp;

  /**
   * @generated from field: uint32 type = 3;
   */
  type: number;

  /**
   * @generated from field: int32 typmod = 4;
   */
  typmod: number;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * Describes the message pg_query.SQLValueFunction.
 * Use `create(SQLValueFunctionSchema)` to create a new message.
 */
export const SQLValueFunctionSchema: GenMessage<SQLValueFunction> = /*@__PURE__*/
  messageDesc(file_pg_query, 46);

/**
 * @generated from message pg_query.XmlExpr
 */
export type XmlExpr = Message<"pg_query.XmlExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.XmlExprOp op = 2;
   */
  op: XmlExprOp;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: repeated pg_query.Node named_args = 4 [json_name = "named_args"];
   */
  namedArgs: Node[];

  /**
   * @generated from field: repeated pg_query.Node arg_names = 5 [json_name = "arg_names"];
   */
  argNames: Node[];

  /**
   * @generated from field: repeated pg_query.Node args = 6;
   */
  args: Node[];

  /**
   * @generated from field: pg_query.XmlOptionType xmloption = 7;
   */
  xmloption: XmlOptionType;

  /**
   * @generated from field: uint32 type = 8;
   */
  type: number;

  /**
   * @generated from field: int32 typmod = 9;
   */
  typmod: number;

  /**
   * @generated from field: int32 location = 10;
   */
  location: number;
};

/**
 * Describes the message pg_query.XmlExpr.
 * Use `create(XmlExprSchema)` to create a new message.
 */
export const XmlExprSchema: GenMessage<XmlExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 47);

/**
 * @generated from message pg_query.NullTest
 */
export type NullTest = Message<"pg_query.NullTest"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: pg_query.NullTestType nulltesttype = 3;
   */
  nulltesttype: NullTestType;

  /**
   * @generated from field: bool argisrow = 4;
   */
  argisrow: boolean;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * Describes the message pg_query.NullTest.
 * Use `create(NullTestSchema)` to create a new message.
 */
export const NullTestSchema: GenMessage<NullTest> = /*@__PURE__*/
  messageDesc(file_pg_query, 48);

/**
 * @generated from message pg_query.BooleanTest
 */
export type BooleanTest = Message<"pg_query.BooleanTest"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: pg_query.BoolTestType booltesttype = 3;
   */
  booltesttype: BoolTestType;

  /**
   * @generated from field: int32 location = 4;
   */
  location: number;
};

/**
 * Describes the message pg_query.BooleanTest.
 * Use `create(BooleanTestSchema)` to create a new message.
 */
export const BooleanTestSchema: GenMessage<BooleanTest> = /*@__PURE__*/
  messageDesc(file_pg_query, 49);

/**
 * @generated from message pg_query.CoerceToDomain
 */
export type CoerceToDomain = Message<"pg_query.CoerceToDomain"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: uint32 resulttype = 3;
   */
  resulttype: number;

  /**
   * @generated from field: int32 resulttypmod = 4;
   */
  resulttypmod: number;

  /**
   * @generated from field: uint32 resultcollid = 5;
   */
  resultcollid: number;

  /**
   * @generated from field: pg_query.CoercionForm coercionformat = 6;
   */
  coercionformat: CoercionForm;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * Describes the message pg_query.CoerceToDomain.
 * Use `create(CoerceToDomainSchema)` to create a new message.
 */
export const CoerceToDomainSchema: GenMessage<CoerceToDomain> = /*@__PURE__*/
  messageDesc(file_pg_query, 50);

/**
 * @generated from message pg_query.CoerceToDomainValue
 */
export type CoerceToDomainValue = Message<"pg_query.CoerceToDomainValue"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 type_id = 2;
   */
  typeId: number;

  /**
   * @generated from field: int32 type_mod = 3;
   */
  typeMod: number;

  /**
   * @generated from field: uint32 collation = 4;
   */
  collation: number;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * Describes the message pg_query.CoerceToDomainValue.
 * Use `create(CoerceToDomainValueSchema)` to create a new message.
 */
export const CoerceToDomainValueSchema: GenMessage<CoerceToDomainValue> = /*@__PURE__*/
  messageDesc(file_pg_query, 51);

/**
 * @generated from message pg_query.SetToDefault
 */
export type SetToDefault = Message<"pg_query.SetToDefault"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 type_id = 2;
   */
  typeId: number;

  /**
   * @generated from field: int32 type_mod = 3;
   */
  typeMod: number;

  /**
   * @generated from field: uint32 collation = 4;
   */
  collation: number;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * Describes the message pg_query.SetToDefault.
 * Use `create(SetToDefaultSchema)` to create a new message.
 */
export const SetToDefaultSchema: GenMessage<SetToDefault> = /*@__PURE__*/
  messageDesc(file_pg_query, 52);

/**
 * @generated from message pg_query.CurrentOfExpr
 */
export type CurrentOfExpr = Message<"pg_query.CurrentOfExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 cvarno = 2;
   */
  cvarno: number;

  /**
   * @generated from field: string cursor_name = 3 [json_name = "cursor_name"];
   */
  cursorName: string;

  /**
   * @generated from field: int32 cursor_param = 4 [json_name = "cursor_param"];
   */
  cursorParam: number;
};

/**
 * Describes the message pg_query.CurrentOfExpr.
 * Use `create(CurrentOfExprSchema)` to create a new message.
 */
export const CurrentOfExprSchema: GenMessage<CurrentOfExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 53);

/**
 * @generated from message pg_query.NextValueExpr
 */
export type NextValueExpr = Message<"pg_query.NextValueExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 seqid = 2;
   */
  seqid: number;

  /**
   * @generated from field: uint32 type_id = 3;
   */
  typeId: number;
};

/**
 * Describes the message pg_query.NextValueExpr.
 * Use `create(NextValueExprSchema)` to create a new message.
 */
export const NextValueExprSchema: GenMessage<NextValueExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 54);

/**
 * @generated from message pg_query.InferenceElem
 */
export type InferenceElem = Message<"pg_query.InferenceElem"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: Node;

  /**
   * @generated from field: uint32 infercollid = 3;
   */
  infercollid: number;

  /**
   * @generated from field: uint32 inferopclass = 4;
   */
  inferopclass: number;
};

/**
 * Describes the message pg_query.InferenceElem.
 * Use `create(InferenceElemSchema)` to create a new message.
 */
export const InferenceElemSchema: GenMessage<InferenceElem> = /*@__PURE__*/
  messageDesc(file_pg_query, 55);

/**
 * @generated from message pg_query.TargetEntry
 */
export type TargetEntry = Message<"pg_query.TargetEntry"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: Node;

  /**
   * @generated from field: int32 resno = 3;
   */
  resno: number;

  /**
   * @generated from field: string resname = 4;
   */
  resname: string;

  /**
   * @generated from field: uint32 ressortgroupref = 5;
   */
  ressortgroupref: number;

  /**
   * @generated from field: uint32 resorigtbl = 6;
   */
  resorigtbl: number;

  /**
   * @generated from field: int32 resorigcol = 7;
   */
  resorigcol: number;

  /**
   * @generated from field: bool resjunk = 8;
   */
  resjunk: boolean;
};

/**
 * Describes the message pg_query.TargetEntry.
 * Use `create(TargetEntrySchema)` to create a new message.
 */
export const TargetEntrySchema: GenMessage<TargetEntry> = /*@__PURE__*/
  messageDesc(file_pg_query, 56);

/**
 * @generated from message pg_query.RangeTblRef
 */
export type RangeTblRef = Message<"pg_query.RangeTblRef"> & {
  /**
   * @generated from field: int32 rtindex = 1;
   */
  rtindex: number;
};

/**
 * Describes the message pg_query.RangeTblRef.
 * Use `create(RangeTblRefSchema)` to create a new message.
 */
export const RangeTblRefSchema: GenMessage<RangeTblRef> = /*@__PURE__*/
  messageDesc(file_pg_query, 57);

/**
 * @generated from message pg_query.JoinExpr
 */
export type JoinExpr = Message<"pg_query.JoinExpr"> & {
  /**
   * @generated from field: pg_query.JoinType jointype = 1;
   */
  jointype: JoinType;

  /**
   * @generated from field: bool is_natural = 2;
   */
  isNatural: boolean;

  /**
   * @generated from field: pg_query.Node larg = 3;
   */
  larg?: Node;

  /**
   * @generated from field: pg_query.Node rarg = 4;
   */
  rarg?: Node;

  /**
   * @generated from field: repeated pg_query.Node using_clause = 5;
   */
  usingClause: Node[];

  /**
   * @generated from field: pg_query.Node quals = 6;
   */
  quals?: Node;

  /**
   * @generated from field: pg_query.Alias alias = 7;
   */
  alias?: Alias;

  /**
   * @generated from field: int32 rtindex = 8;
   */
  rtindex: number;
};

/**
 * Describes the message pg_query.JoinExpr.
 * Use `create(JoinExprSchema)` to create a new message.
 */
export const JoinExprSchema: GenMessage<JoinExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 58);

/**
 * @generated from message pg_query.FromExpr
 */
export type FromExpr = Message<"pg_query.FromExpr"> & {
  /**
   * @generated from field: repeated pg_query.Node fromlist = 1;
   */
  fromlist: Node[];

  /**
   * @generated from field: pg_query.Node quals = 2;
   */
  quals?: Node;
};

/**
 * Describes the message pg_query.FromExpr.
 * Use `create(FromExprSchema)` to create a new message.
 */
export const FromExprSchema: GenMessage<FromExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 59);

/**
 * @generated from message pg_query.OnConflictExpr
 */
export type OnConflictExpr = Message<"pg_query.OnConflictExpr"> & {
  /**
   * @generated from field: pg_query.OnConflictAction action = 1;
   */
  action: OnConflictAction;

  /**
   * @generated from field: repeated pg_query.Node arbiter_elems = 2;
   */
  arbiterElems: Node[];

  /**
   * @generated from field: pg_query.Node arbiter_where = 3;
   */
  arbiterWhere?: Node;

  /**
   * @generated from field: uint32 constraint = 4;
   */
  constraint: number;

  /**
   * @generated from field: repeated pg_query.Node on_conflict_set = 5;
   */
  onConflictSet: Node[];

  /**
   * @generated from field: pg_query.Node on_conflict_where = 6;
   */
  onConflictWhere?: Node;

  /**
   * @generated from field: int32 excl_rel_index = 7;
   */
  exclRelIndex: number;

  /**
   * @generated from field: repeated pg_query.Node excl_rel_tlist = 8;
   */
  exclRelTlist: Node[];
};

/**
 * Describes the message pg_query.OnConflictExpr.
 * Use `create(OnConflictExprSchema)` to create a new message.
 */
export const OnConflictExprSchema: GenMessage<OnConflictExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 60);

/**
 * @generated from message pg_query.IntoClause
 */
export type IntoClause = Message<"pg_query.IntoClause"> & {
  /**
   * @generated from field: pg_query.RangeVar rel = 1;
   */
  rel?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node col_names = 2;
   */
  colNames: Node[];

  /**
   * @generated from field: string access_method = 3;
   */
  accessMethod: string;

  /**
   * @generated from field: repeated pg_query.Node options = 4;
   */
  options: Node[];

  /**
   * @generated from field: pg_query.OnCommitAction on_commit = 5;
   */
  onCommit: OnCommitAction;

  /**
   * @generated from field: string table_space_name = 6;
   */
  tableSpaceName: string;

  /**
   * @generated from field: pg_query.Node view_query = 7;
   */
  viewQuery?: Node;

  /**
   * @generated from field: bool skip_data = 8;
   */
  skipData: boolean;
};

/**
 * Describes the message pg_query.IntoClause.
 * Use `create(IntoClauseSchema)` to create a new message.
 */
export const IntoClauseSchema: GenMessage<IntoClause> = /*@__PURE__*/
  messageDesc(file_pg_query, 61);

/**
 * @generated from message pg_query.RawStmt
 */
export type RawStmt = Message<"pg_query.RawStmt"> & {
  /**
   * @generated from field: pg_query.Node stmt = 1;
   */
  stmt?: Node;

  /**
   * @generated from field: int32 stmt_location = 2 [json_name = "stmt_location"];
   */
  stmtLocation: number;

  /**
   * @generated from field: int32 stmt_len = 3 [json_name = "stmt_len"];
   */
  stmtLen: number;
};

/**
 * Describes the message pg_query.RawStmt.
 * Use `create(RawStmtSchema)` to create a new message.
 */
export const RawStmtSchema: GenMessage<RawStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 62);

/**
 * @generated from message pg_query.Query
 */
export type Query = Message<"pg_query.Query"> & {
  /**
   * @generated from field: pg_query.CmdType command_type = 1;
   */
  commandType: CmdType;

  /**
   * @generated from field: pg_query.QuerySource query_source = 2;
   */
  querySource: QuerySource;

  /**
   * @generated from field: bool can_set_tag = 3;
   */
  canSetTag: boolean;

  /**
   * @generated from field: pg_query.Node utility_stmt = 4;
   */
  utilityStmt?: Node;

  /**
   * @generated from field: int32 result_relation = 5;
   */
  resultRelation: number;

  /**
   * @generated from field: bool has_aggs = 6;
   */
  hasAggs: boolean;

  /**
   * @generated from field: bool has_window_funcs = 7;
   */
  hasWindowFuncs: boolean;

  /**
   * @generated from field: bool has_target_srfs = 8 [json_name = "hasTargetSRFs"];
   */
  hasTargetSrfs: boolean;

  /**
   * @generated from field: bool has_sub_links = 9;
   */
  hasSubLinks: boolean;

  /**
   * @generated from field: bool has_distinct_on = 10;
   */
  hasDistinctOn: boolean;

  /**
   * @generated from field: bool has_recursive = 11;
   */
  hasRecursive: boolean;

  /**
   * @generated from field: bool has_modifying_cte = 12 [json_name = "hasModifyingCTE"];
   */
  hasModifyingCte: boolean;

  /**
   * @generated from field: bool has_for_update = 13;
   */
  hasForUpdate: boolean;

  /**
   * @generated from field: bool has_row_security = 14;
   */
  hasRowSecurity: boolean;

  /**
   * @generated from field: repeated pg_query.Node cte_list = 15;
   */
  cteList: Node[];

  /**
   * @generated from field: repeated pg_query.Node rtable = 16;
   */
  rtable: Node[];

  /**
   * @generated from field: pg_query.FromExpr jointree = 17;
   */
  jointree?: FromExpr;

  /**
   * @generated from field: repeated pg_query.Node target_list = 18;
   */
  targetList: Node[];

  /**
   * @generated from field: pg_query.OverridingKind override = 19;
   */
  override: OverridingKind;

  /**
   * @generated from field: pg_query.OnConflictExpr on_conflict = 20;
   */
  onConflict?: OnConflictExpr;

  /**
   * @generated from field: repeated pg_query.Node returning_list = 21;
   */
  returningList: Node[];

  /**
   * @generated from field: repeated pg_query.Node group_clause = 22;
   */
  groupClause: Node[];

  /**
   * @generated from field: repeated pg_query.Node grouping_sets = 23;
   */
  groupingSets: Node[];

  /**
   * @generated from field: pg_query.Node having_qual = 24;
   */
  havingQual?: Node;

  /**
   * @generated from field: repeated pg_query.Node window_clause = 25;
   */
  windowClause: Node[];

  /**
   * @generated from field: repeated pg_query.Node distinct_clause = 26;
   */
  distinctClause: Node[];

  /**
   * @generated from field: repeated pg_query.Node sort_clause = 27;
   */
  sortClause: Node[];

  /**
   * @generated from field: pg_query.Node limit_offset = 28;
   */
  limitOffset?: Node;

  /**
   * @generated from field: pg_query.Node limit_count = 29;
   */
  limitCount?: Node;

  /**
   * @generated from field: pg_query.LimitOption limit_option = 30;
   */
  limitOption: LimitOption;

  /**
   * @generated from field: repeated pg_query.Node row_marks = 31;
   */
  rowMarks: Node[];

  /**
   * @generated from field: pg_query.Node set_operations = 32;
   */
  setOperations?: Node;

  /**
   * @generated from field: repeated pg_query.Node constraint_deps = 33;
   */
  constraintDeps: Node[];

  /**
   * @generated from field: repeated pg_query.Node with_check_options = 34;
   */
  withCheckOptions: Node[];

  /**
   * @generated from field: int32 stmt_location = 35 [json_name = "stmt_location"];
   */
  stmtLocation: number;

  /**
   * @generated from field: int32 stmt_len = 36 [json_name = "stmt_len"];
   */
  stmtLen: number;
};

/**
 * Describes the message pg_query.Query.
 * Use `create(QuerySchema)` to create a new message.
 */
export const QuerySchema: GenMessage<Query> = /*@__PURE__*/
  messageDesc(file_pg_query, 63);

/**
 * @generated from message pg_query.InsertStmt
 */
export type InsertStmt = Message<"pg_query.InsertStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node cols = 2;
   */
  cols: Node[];

  /**
   * @generated from field: pg_query.Node select_stmt = 3;
   */
  selectStmt?: Node;

  /**
   * @generated from field: pg_query.OnConflictClause on_conflict_clause = 4;
   */
  onConflictClause?: OnConflictClause;

  /**
   * @generated from field: repeated pg_query.Node returning_list = 5;
   */
  returningList: Node[];

  /**
   * @generated from field: pg_query.WithClause with_clause = 6;
   */
  withClause?: WithClause;

  /**
   * @generated from field: pg_query.OverridingKind override = 7;
   */
  override: OverridingKind;
};

/**
 * Describes the message pg_query.InsertStmt.
 * Use `create(InsertStmtSchema)` to create a new message.
 */
export const InsertStmtSchema: GenMessage<InsertStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 64);

/**
 * @generated from message pg_query.DeleteStmt
 */
export type DeleteStmt = Message<"pg_query.DeleteStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node using_clause = 2;
   */
  usingClause: Node[];

  /**
   * @generated from field: pg_query.Node where_clause = 3;
   */
  whereClause?: Node;

  /**
   * @generated from field: repeated pg_query.Node returning_list = 4;
   */
  returningList: Node[];

  /**
   * @generated from field: pg_query.WithClause with_clause = 5;
   */
  withClause?: WithClause;
};

/**
 * Describes the message pg_query.DeleteStmt.
 * Use `create(DeleteStmtSchema)` to create a new message.
 */
export const DeleteStmtSchema: GenMessage<DeleteStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 65);

/**
 * @generated from message pg_query.UpdateStmt
 */
export type UpdateStmt = Message<"pg_query.UpdateStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node target_list = 2;
   */
  targetList: Node[];

  /**
   * @generated from field: pg_query.Node where_clause = 3;
   */
  whereClause?: Node;

  /**
   * @generated from field: repeated pg_query.Node from_clause = 4;
   */
  fromClause: Node[];

  /**
   * @generated from field: repeated pg_query.Node returning_list = 5;
   */
  returningList: Node[];

  /**
   * @generated from field: pg_query.WithClause with_clause = 6;
   */
  withClause?: WithClause;
};

/**
 * Describes the message pg_query.UpdateStmt.
 * Use `create(UpdateStmtSchema)` to create a new message.
 */
export const UpdateStmtSchema: GenMessage<UpdateStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 66);

/**
 * @generated from message pg_query.SelectStmt
 */
export type SelectStmt = Message<"pg_query.SelectStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node distinct_clause = 1;
   */
  distinctClause: Node[];

  /**
   * @generated from field: pg_query.IntoClause into_clause = 2;
   */
  intoClause?: IntoClause;

  /**
   * @generated from field: repeated pg_query.Node target_list = 3;
   */
  targetList: Node[];

  /**
   * @generated from field: repeated pg_query.Node from_clause = 4;
   */
  fromClause: Node[];

  /**
   * @generated from field: pg_query.Node where_clause = 5;
   */
  whereClause?: Node;

  /**
   * @generated from field: repeated pg_query.Node group_clause = 6;
   */
  groupClause: Node[];

  /**
   * @generated from field: pg_query.Node having_clause = 7;
   */
  havingClause?: Node;

  /**
   * @generated from field: repeated pg_query.Node window_clause = 8;
   */
  windowClause: Node[];

  /**
   * @generated from field: repeated pg_query.Node values_lists = 9;
   */
  valuesLists: Node[];

  /**
   * @generated from field: repeated pg_query.Node sort_clause = 10;
   */
  sortClause: Node[];

  /**
   * @generated from field: pg_query.Node limit_offset = 11;
   */
  limitOffset?: Node;

  /**
   * @generated from field: pg_query.Node limit_count = 12;
   */
  limitCount?: Node;

  /**
   * @generated from field: pg_query.LimitOption limit_option = 13;
   */
  limitOption: LimitOption;

  /**
   * @generated from field: repeated pg_query.Node locking_clause = 14;
   */
  lockingClause: Node[];

  /**
   * @generated from field: pg_query.WithClause with_clause = 15;
   */
  withClause?: WithClause;

  /**
   * @generated from field: pg_query.SetOperation op = 16;
   */
  op: SetOperation;

  /**
   * @generated from field: bool all = 17;
   */
  all: boolean;

  /**
   * @generated from field: pg_query.SelectStmt larg = 18;
   */
  larg?: SelectStmt;

  /**
   * @generated from field: pg_query.SelectStmt rarg = 19;
   */
  rarg?: SelectStmt;
};

/**
 * Describes the message pg_query.SelectStmt.
 * Use `create(SelectStmtSchema)` to create a new message.
 */
export const SelectStmtSchema: GenMessage<SelectStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 67);

/**
 * @generated from message pg_query.AlterTableStmt
 */
export type AlterTableStmt = Message<"pg_query.AlterTableStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node cmds = 2;
   */
  cmds: Node[];

  /**
   * @generated from field: pg_query.ObjectType relkind = 3;
   */
  relkind: ObjectType;

  /**
   * @generated from field: bool missing_ok = 4 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * Describes the message pg_query.AlterTableStmt.
 * Use `create(AlterTableStmtSchema)` to create a new message.
 */
export const AlterTableStmtSchema: GenMessage<AlterTableStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 68);

/**
 * @generated from message pg_query.AlterTableCmd
 */
export type AlterTableCmd = Message<"pg_query.AlterTableCmd"> & {
  /**
   * @generated from field: pg_query.AlterTableType subtype = 1;
   */
  subtype: AlterTableType;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: int32 num = 3;
   */
  num: number;

  /**
   * @generated from field: pg_query.RoleSpec newowner = 4;
   */
  newowner?: RoleSpec;

  /**
   * @generated from field: pg_query.Node def = 5;
   */
  def?: Node;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 6;
   */
  behavior: DropBehavior;

  /**
   * @generated from field: bool missing_ok = 7 [json_name = "missing_ok"];
   */
  missingOk: boolean;

  /**
   * @generated from field: bool recurse = 8;
   */
  recurse: boolean;
};

/**
 * Describes the message pg_query.AlterTableCmd.
 * Use `create(AlterTableCmdSchema)` to create a new message.
 */
export const AlterTableCmdSchema: GenMessage<AlterTableCmd> = /*@__PURE__*/
  messageDesc(file_pg_query, 69);

/**
 * @generated from message pg_query.AlterDomainStmt
 */
export type AlterDomainStmt = Message<"pg_query.AlterDomainStmt"> & {
  /**
   * @generated from field: string subtype = 1;
   */
  subtype: string;

  /**
   * @generated from field: repeated pg_query.Node type_name = 2;
   */
  typeName: Node[];

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: pg_query.Node def = 4;
   */
  def?: Node;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 5;
   */
  behavior: DropBehavior;

  /**
   * @generated from field: bool missing_ok = 6 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * Describes the message pg_query.AlterDomainStmt.
 * Use `create(AlterDomainStmtSchema)` to create a new message.
 */
export const AlterDomainStmtSchema: GenMessage<AlterDomainStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 70);

/**
 * @generated from message pg_query.SetOperationStmt
 */
export type SetOperationStmt = Message<"pg_query.SetOperationStmt"> & {
  /**
   * @generated from field: pg_query.SetOperation op = 1;
   */
  op: SetOperation;

  /**
   * @generated from field: bool all = 2;
   */
  all: boolean;

  /**
   * @generated from field: pg_query.Node larg = 3;
   */
  larg?: Node;

  /**
   * @generated from field: pg_query.Node rarg = 4;
   */
  rarg?: Node;

  /**
   * @generated from field: repeated pg_query.Node col_types = 5;
   */
  colTypes: Node[];

  /**
   * @generated from field: repeated pg_query.Node col_typmods = 6;
   */
  colTypmods: Node[];

  /**
   * @generated from field: repeated pg_query.Node col_collations = 7;
   */
  colCollations: Node[];

  /**
   * @generated from field: repeated pg_query.Node group_clauses = 8;
   */
  groupClauses: Node[];
};

/**
 * Describes the message pg_query.SetOperationStmt.
 * Use `create(SetOperationStmtSchema)` to create a new message.
 */
export const SetOperationStmtSchema: GenMessage<SetOperationStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 71);

/**
 * @generated from message pg_query.GrantStmt
 */
export type GrantStmt = Message<"pg_query.GrantStmt"> & {
  /**
   * @generated from field: bool is_grant = 1 [json_name = "is_grant"];
   */
  isGrant: boolean;

  /**
   * @generated from field: pg_query.GrantTargetType targtype = 2;
   */
  targtype: GrantTargetType;

  /**
   * @generated from field: pg_query.ObjectType objtype = 3;
   */
  objtype: ObjectType;

  /**
   * @generated from field: repeated pg_query.Node objects = 4;
   */
  objects: Node[];

  /**
   * @generated from field: repeated pg_query.Node privileges = 5;
   */
  privileges: Node[];

  /**
   * @generated from field: repeated pg_query.Node grantees = 6;
   */
  grantees: Node[];

  /**
   * @generated from field: bool grant_option = 7 [json_name = "grant_option"];
   */
  grantOption: boolean;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 8;
   */
  behavior: DropBehavior;
};

/**
 * Describes the message pg_query.GrantStmt.
 * Use `create(GrantStmtSchema)` to create a new message.
 */
export const GrantStmtSchema: GenMessage<GrantStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 72);

/**
 * @generated from message pg_query.GrantRoleStmt
 */
export type GrantRoleStmt = Message<"pg_query.GrantRoleStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node granted_roles = 1 [json_name = "granted_roles"];
   */
  grantedRoles: Node[];

  /**
   * @generated from field: repeated pg_query.Node grantee_roles = 2 [json_name = "grantee_roles"];
   */
  granteeRoles: Node[];

  /**
   * @generated from field: bool is_grant = 3 [json_name = "is_grant"];
   */
  isGrant: boolean;

  /**
   * @generated from field: bool admin_opt = 4 [json_name = "admin_opt"];
   */
  adminOpt: boolean;

  /**
   * @generated from field: pg_query.RoleSpec grantor = 5;
   */
  grantor?: RoleSpec;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 6;
   */
  behavior: DropBehavior;
};

/**
 * Describes the message pg_query.GrantRoleStmt.
 * Use `create(GrantRoleStmtSchema)` to create a new message.
 */
export const GrantRoleStmtSchema: GenMessage<GrantRoleStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 73);

/**
 * @generated from message pg_query.AlterDefaultPrivilegesStmt
 */
export type AlterDefaultPrivilegesStmt = Message<"pg_query.AlterDefaultPrivilegesStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node options = 1;
   */
  options: Node[];

  /**
   * @generated from field: pg_query.GrantStmt action = 2;
   */
  action?: GrantStmt;
};

/**
 * Describes the message pg_query.AlterDefaultPrivilegesStmt.
 * Use `create(AlterDefaultPrivilegesStmtSchema)` to create a new message.
 */
export const AlterDefaultPrivilegesStmtSchema: GenMessage<AlterDefaultPrivilegesStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 74);

/**
 * @generated from message pg_query.ClosePortalStmt
 */
export type ClosePortalStmt = Message<"pg_query.ClosePortalStmt"> & {
  /**
   * @generated from field: string portalname = 1;
   */
  portalname: string;
};

/**
 * Describes the message pg_query.ClosePortalStmt.
 * Use `create(ClosePortalStmtSchema)` to create a new message.
 */
export const ClosePortalStmtSchema: GenMessage<ClosePortalStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 75);

/**
 * @generated from message pg_query.ClusterStmt
 */
export type ClusterStmt = Message<"pg_query.ClusterStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: string indexname = 2;
   */
  indexname: string;

  /**
   * @generated from field: int32 options = 3;
   */
  options: number;
};

/**
 * Describes the message pg_query.ClusterStmt.
 * Use `create(ClusterStmtSchema)` to create a new message.
 */
export const ClusterStmtSchema: GenMessage<ClusterStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 76);

/**
 * @generated from message pg_query.CopyStmt
 */
export type CopyStmt = Message<"pg_query.CopyStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: pg_query.Node query = 2;
   */
  query?: Node;

  /**
   * @generated from field: repeated pg_query.Node attlist = 3;
   */
  attlist: Node[];

  /**
   * @generated from field: bool is_from = 4 [json_name = "is_from"];
   */
  isFrom: boolean;

  /**
   * @generated from field: bool is_program = 5 [json_name = "is_program"];
   */
  isProgram: boolean;

  /**
   * @generated from field: string filename = 6;
   */
  filename: string;

  /**
   * @generated from field: repeated pg_query.Node options = 7;
   */
  options: Node[];

  /**
   * @generated from field: pg_query.Node where_clause = 8;
   */
  whereClause?: Node;
};

/**
 * Describes the message pg_query.CopyStmt.
 * Use `create(CopyStmtSchema)` to create a new message.
 */
export const CopyStmtSchema: GenMessage<CopyStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 77);

/**
 * @generated from message pg_query.CreateStmt
 */
export type CreateStmt = Message<"pg_query.CreateStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node table_elts = 2;
   */
  tableElts: Node[];

  /**
   * @generated from field: repeated pg_query.Node inh_relations = 3;
   */
  inhRelations: Node[];

  /**
   * @generated from field: pg_query.PartitionBoundSpec partbound = 4;
   */
  partbound?: PartitionBoundSpec;

  /**
   * @generated from field: pg_query.PartitionSpec partspec = 5;
   */
  partspec?: PartitionSpec;

  /**
   * @generated from field: pg_query.TypeName of_typename = 6;
   */
  ofTypename?: TypeName;

  /**
   * @generated from field: repeated pg_query.Node constraints = 7;
   */
  constraints: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 8;
   */
  options: Node[];

  /**
   * @generated from field: pg_query.OnCommitAction oncommit = 9;
   */
  oncommit: OnCommitAction;

  /**
   * @generated from field: string tablespacename = 10;
   */
  tablespacename: string;

  /**
   * @generated from field: string access_method = 11;
   */
  accessMethod: string;

  /**
   * @generated from field: bool if_not_exists = 12 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;
};

/**
 * Describes the message pg_query.CreateStmt.
 * Use `create(CreateStmtSchema)` to create a new message.
 */
export const CreateStmtSchema: GenMessage<CreateStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 78);

/**
 * @generated from message pg_query.DefineStmt
 */
export type DefineStmt = Message<"pg_query.DefineStmt"> & {
  /**
   * @generated from field: pg_query.ObjectType kind = 1;
   */
  kind: ObjectType;

  /**
   * @generated from field: bool oldstyle = 2;
   */
  oldstyle: boolean;

  /**
   * @generated from field: repeated pg_query.Node defnames = 3;
   */
  defnames: Node[];

  /**
   * @generated from field: repeated pg_query.Node args = 4;
   */
  args: Node[];

  /**
   * @generated from field: repeated pg_query.Node definition = 5;
   */
  definition: Node[];

  /**
   * @generated from field: bool if_not_exists = 6 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;

  /**
   * @generated from field: bool replace = 7;
   */
  replace: boolean;
};

/**
 * Describes the message pg_query.DefineStmt.
 * Use `create(DefineStmtSchema)` to create a new message.
 */
export const DefineStmtSchema: GenMessage<DefineStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 79);

/**
 * @generated from message pg_query.DropStmt
 */
export type DropStmt = Message<"pg_query.DropStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node objects = 1;
   */
  objects: Node[];

  /**
   * @generated from field: pg_query.ObjectType remove_type = 2;
   */
  removeType: ObjectType;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 3;
   */
  behavior: DropBehavior;

  /**
   * @generated from field: bool missing_ok = 4 [json_name = "missing_ok"];
   */
  missingOk: boolean;

  /**
   * @generated from field: bool concurrent = 5;
   */
  concurrent: boolean;
};

/**
 * Describes the message pg_query.DropStmt.
 * Use `create(DropStmtSchema)` to create a new message.
 */
export const DropStmtSchema: GenMessage<DropStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 80);

/**
 * @generated from message pg_query.TruncateStmt
 */
export type TruncateStmt = Message<"pg_query.TruncateStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node relations = 1;
   */
  relations: Node[];

  /**
   * @generated from field: bool restart_seqs = 2 [json_name = "restart_seqs"];
   */
  restartSeqs: boolean;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 3;
   */
  behavior: DropBehavior;
};

/**
 * Describes the message pg_query.TruncateStmt.
 * Use `create(TruncateStmtSchema)` to create a new message.
 */
export const TruncateStmtSchema: GenMessage<TruncateStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 81);

/**
 * @generated from message pg_query.CommentStmt
 */
export type CommentStmt = Message<"pg_query.CommentStmt"> & {
  /**
   * @generated from field: pg_query.ObjectType objtype = 1;
   */
  objtype: ObjectType;

  /**
   * @generated from field: pg_query.Node object = 2;
   */
  object?: Node;

  /**
   * @generated from field: string comment = 3;
   */
  comment: string;
};

/**
 * Describes the message pg_query.CommentStmt.
 * Use `create(CommentStmtSchema)` to create a new message.
 */
export const CommentStmtSchema: GenMessage<CommentStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 82);

/**
 * @generated from message pg_query.FetchStmt
 */
export type FetchStmt = Message<"pg_query.FetchStmt"> & {
  /**
   * @generated from field: pg_query.FetchDirection direction = 1;
   */
  direction: FetchDirection;

  /**
   * @generated from field: int64 how_many = 2;
   */
  howMany: bigint;

  /**
   * @generated from field: string portalname = 3;
   */
  portalname: string;

  /**
   * @generated from field: bool ismove = 4;
   */
  ismove: boolean;
};

/**
 * Describes the message pg_query.FetchStmt.
 * Use `create(FetchStmtSchema)` to create a new message.
 */
export const FetchStmtSchema: GenMessage<FetchStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 83);

/**
 * @generated from message pg_query.IndexStmt
 */
export type IndexStmt = Message<"pg_query.IndexStmt"> & {
  /**
   * @generated from field: string idxname = 1;
   */
  idxname: string;

  /**
   * @generated from field: pg_query.RangeVar relation = 2;
   */
  relation?: RangeVar;

  /**
   * @generated from field: string access_method = 3;
   */
  accessMethod: string;

  /**
   * @generated from field: string table_space = 4;
   */
  tableSpace: string;

  /**
   * @generated from field: repeated pg_query.Node index_params = 5;
   */
  indexParams: Node[];

  /**
   * @generated from field: repeated pg_query.Node index_including_params = 6;
   */
  indexIncludingParams: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 7;
   */
  options: Node[];

  /**
   * @generated from field: pg_query.Node where_clause = 8;
   */
  whereClause?: Node;

  /**
   * @generated from field: repeated pg_query.Node exclude_op_names = 9;
   */
  excludeOpNames: Node[];

  /**
   * @generated from field: string idxcomment = 10;
   */
  idxcomment: string;

  /**
   * @generated from field: uint32 index_oid = 11;
   */
  indexOid: number;

  /**
   * @generated from field: uint32 old_node = 12;
   */
  oldNode: number;

  /**
   * @generated from field: uint32 old_create_subid = 13;
   */
  oldCreateSubid: number;

  /**
   * @generated from field: uint32 old_first_relfilenode_subid = 14;
   */
  oldFirstRelfilenodeSubid: number;

  /**
   * @generated from field: bool unique = 15;
   */
  unique: boolean;

  /**
   * @generated from field: bool primary = 16;
   */
  primary: boolean;

  /**
   * @generated from field: bool isconstraint = 17;
   */
  isconstraint: boolean;

  /**
   * @generated from field: bool deferrable = 18;
   */
  deferrable: boolean;

  /**
   * @generated from field: bool initdeferred = 19;
   */
  initdeferred: boolean;

  /**
   * @generated from field: bool transformed = 20;
   */
  transformed: boolean;

  /**
   * @generated from field: bool concurrent = 21;
   */
  concurrent: boolean;

  /**
   * @generated from field: bool if_not_exists = 22 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;

  /**
   * @generated from field: bool reset_default_tblspc = 23 [json_name = "reset_default_tblspc"];
   */
  resetDefaultTblspc: boolean;
};

/**
 * Describes the message pg_query.IndexStmt.
 * Use `create(IndexStmtSchema)` to create a new message.
 */
export const IndexStmtSchema: GenMessage<IndexStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 84);

/**
 * @generated from message pg_query.CreateFunctionStmt
 */
export type CreateFunctionStmt = Message<"pg_query.CreateFunctionStmt"> & {
  /**
   * @generated from field: bool is_procedure = 1 [json_name = "is_procedure"];
   */
  isProcedure: boolean;

  /**
   * @generated from field: bool replace = 2;
   */
  replace: boolean;

  /**
   * @generated from field: repeated pg_query.Node funcname = 3;
   */
  funcname: Node[];

  /**
   * @generated from field: repeated pg_query.Node parameters = 4;
   */
  parameters: Node[];

  /**
   * @generated from field: pg_query.TypeName return_type = 5;
   */
  returnType?: TypeName;

  /**
   * @generated from field: repeated pg_query.Node options = 6;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.CreateFunctionStmt.
 * Use `create(CreateFunctionStmtSchema)` to create a new message.
 */
export const CreateFunctionStmtSchema: GenMessage<CreateFunctionStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 85);

/**
 * @generated from message pg_query.AlterFunctionStmt
 */
export type AlterFunctionStmt = Message<"pg_query.AlterFunctionStmt"> & {
  /**
   * @generated from field: pg_query.ObjectType objtype = 1;
   */
  objtype: ObjectType;

  /**
   * @generated from field: pg_query.ObjectWithArgs func = 2;
   */
  func?: ObjectWithArgs;

  /**
   * @generated from field: repeated pg_query.Node actions = 3;
   */
  actions: Node[];
};

/**
 * Describes the message pg_query.AlterFunctionStmt.
 * Use `create(AlterFunctionStmtSchema)` to create a new message.
 */
export const AlterFunctionStmtSchema: GenMessage<AlterFunctionStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 86);

/**
 * @generated from message pg_query.DoStmt
 */
export type DoStmt = Message<"pg_query.DoStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node args = 1;
   */
  args: Node[];
};

/**
 * Describes the message pg_query.DoStmt.
 * Use `create(DoStmtSchema)` to create a new message.
 */
export const DoStmtSchema: GenMessage<DoStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 87);

/**
 * @generated from message pg_query.RenameStmt
 */
export type RenameStmt = Message<"pg_query.RenameStmt"> & {
  /**
   * @generated from field: pg_query.ObjectType rename_type = 1;
   */
  renameType: ObjectType;

  /**
   * @generated from field: pg_query.ObjectType relation_type = 2;
   */
  relationType: ObjectType;

  /**
   * @generated from field: pg_query.RangeVar relation = 3;
   */
  relation?: RangeVar;

  /**
   * @generated from field: pg_query.Node object = 4;
   */
  object?: Node;

  /**
   * @generated from field: string subname = 5;
   */
  subname: string;

  /**
   * @generated from field: string newname = 6;
   */
  newname: string;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 7;
   */
  behavior: DropBehavior;

  /**
   * @generated from field: bool missing_ok = 8 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * Describes the message pg_query.RenameStmt.
 * Use `create(RenameStmtSchema)` to create a new message.
 */
export const RenameStmtSchema: GenMessage<RenameStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 88);

/**
 * @generated from message pg_query.RuleStmt
 */
export type RuleStmt = Message<"pg_query.RuleStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: string rulename = 2;
   */
  rulename: string;

  /**
   * @generated from field: pg_query.Node where_clause = 3;
   */
  whereClause?: Node;

  /**
   * @generated from field: pg_query.CmdType event = 4;
   */
  event: CmdType;

  /**
   * @generated from field: bool instead = 5;
   */
  instead: boolean;

  /**
   * @generated from field: repeated pg_query.Node actions = 6;
   */
  actions: Node[];

  /**
   * @generated from field: bool replace = 7;
   */
  replace: boolean;
};

/**
 * Describes the message pg_query.RuleStmt.
 * Use `create(RuleStmtSchema)` to create a new message.
 */
export const RuleStmtSchema: GenMessage<RuleStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 89);

/**
 * @generated from message pg_query.NotifyStmt
 */
export type NotifyStmt = Message<"pg_query.NotifyStmt"> & {
  /**
   * @generated from field: string conditionname = 1;
   */
  conditionname: string;

  /**
   * @generated from field: string payload = 2;
   */
  payload: string;
};

/**
 * Describes the message pg_query.NotifyStmt.
 * Use `create(NotifyStmtSchema)` to create a new message.
 */
export const NotifyStmtSchema: GenMessage<NotifyStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 90);

/**
 * @generated from message pg_query.ListenStmt
 */
export type ListenStmt = Message<"pg_query.ListenStmt"> & {
  /**
   * @generated from field: string conditionname = 1;
   */
  conditionname: string;
};

/**
 * Describes the message pg_query.ListenStmt.
 * Use `create(ListenStmtSchema)` to create a new message.
 */
export const ListenStmtSchema: GenMessage<ListenStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 91);

/**
 * @generated from message pg_query.UnlistenStmt
 */
export type UnlistenStmt = Message<"pg_query.UnlistenStmt"> & {
  /**
   * @generated from field: string conditionname = 1;
   */
  conditionname: string;
};

/**
 * Describes the message pg_query.UnlistenStmt.
 * Use `create(UnlistenStmtSchema)` to create a new message.
 */
export const UnlistenStmtSchema: GenMessage<UnlistenStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 92);

/**
 * @generated from message pg_query.TransactionStmt
 */
export type TransactionStmt = Message<"pg_query.TransactionStmt"> & {
  /**
   * @generated from field: pg_query.TransactionStmtKind kind = 1;
   */
  kind: TransactionStmtKind;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];

  /**
   * @generated from field: string savepoint_name = 3 [json_name = "savepoint_name"];
   */
  savepointName: string;

  /**
   * @generated from field: string gid = 4;
   */
  gid: string;

  /**
   * @generated from field: bool chain = 5;
   */
  chain: boolean;
};

/**
 * Describes the message pg_query.TransactionStmt.
 * Use `create(TransactionStmtSchema)` to create a new message.
 */
export const TransactionStmtSchema: GenMessage<TransactionStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 93);

/**
 * @generated from message pg_query.ViewStmt
 */
export type ViewStmt = Message<"pg_query.ViewStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar view = 1;
   */
  view?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node aliases = 2;
   */
  aliases: Node[];

  /**
   * @generated from field: pg_query.Node query = 3;
   */
  query?: Node;

  /**
   * @generated from field: bool replace = 4;
   */
  replace: boolean;

  /**
   * @generated from field: repeated pg_query.Node options = 5;
   */
  options: Node[];

  /**
   * @generated from field: pg_query.ViewCheckOption with_check_option = 6;
   */
  withCheckOption: ViewCheckOption;
};

/**
 * Describes the message pg_query.ViewStmt.
 * Use `create(ViewStmtSchema)` to create a new message.
 */
export const ViewStmtSchema: GenMessage<ViewStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 94);

/**
 * @generated from message pg_query.LoadStmt
 */
export type LoadStmt = Message<"pg_query.LoadStmt"> & {
  /**
   * @generated from field: string filename = 1;
   */
  filename: string;
};

/**
 * Describes the message pg_query.LoadStmt.
 * Use `create(LoadStmtSchema)` to create a new message.
 */
export const LoadStmtSchema: GenMessage<LoadStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 95);

/**
 * @generated from message pg_query.CreateDomainStmt
 */
export type CreateDomainStmt = Message<"pg_query.CreateDomainStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node domainname = 1;
   */
  domainname: Node[];

  /**
   * @generated from field: pg_query.TypeName type_name = 2;
   */
  typeName?: TypeName;

  /**
   * @generated from field: pg_query.CollateClause coll_clause = 3;
   */
  collClause?: CollateClause;

  /**
   * @generated from field: repeated pg_query.Node constraints = 4;
   */
  constraints: Node[];
};

/**
 * Describes the message pg_query.CreateDomainStmt.
 * Use `create(CreateDomainStmtSchema)` to create a new message.
 */
export const CreateDomainStmtSchema: GenMessage<CreateDomainStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 96);

/**
 * @generated from message pg_query.CreatedbStmt
 */
export type CreatedbStmt = Message<"pg_query.CreatedbStmt"> & {
  /**
   * @generated from field: string dbname = 1;
   */
  dbname: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.CreatedbStmt.
 * Use `create(CreatedbStmtSchema)` to create a new message.
 */
export const CreatedbStmtSchema: GenMessage<CreatedbStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 97);

/**
 * @generated from message pg_query.DropdbStmt
 */
export type DropdbStmt = Message<"pg_query.DropdbStmt"> & {
  /**
   * @generated from field: string dbname = 1;
   */
  dbname: string;

  /**
   * @generated from field: bool missing_ok = 2 [json_name = "missing_ok"];
   */
  missingOk: boolean;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.DropdbStmt.
 * Use `create(DropdbStmtSchema)` to create a new message.
 */
export const DropdbStmtSchema: GenMessage<DropdbStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 98);

/**
 * @generated from message pg_query.VacuumStmt
 */
export type VacuumStmt = Message<"pg_query.VacuumStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node options = 1;
   */
  options: Node[];

  /**
   * @generated from field: repeated pg_query.Node rels = 2;
   */
  rels: Node[];

  /**
   * @generated from field: bool is_vacuumcmd = 3 [json_name = "is_vacuumcmd"];
   */
  isVacuumcmd: boolean;
};

/**
 * Describes the message pg_query.VacuumStmt.
 * Use `create(VacuumStmtSchema)` to create a new message.
 */
export const VacuumStmtSchema: GenMessage<VacuumStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 99);

/**
 * @generated from message pg_query.ExplainStmt
 */
export type ExplainStmt = Message<"pg_query.ExplainStmt"> & {
  /**
   * @generated from field: pg_query.Node query = 1;
   */
  query?: Node;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.ExplainStmt.
 * Use `create(ExplainStmtSchema)` to create a new message.
 */
export const ExplainStmtSchema: GenMessage<ExplainStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 100);

/**
 * @generated from message pg_query.CreateTableAsStmt
 */
export type CreateTableAsStmt = Message<"pg_query.CreateTableAsStmt"> & {
  /**
   * @generated from field: pg_query.Node query = 1;
   */
  query?: Node;

  /**
   * @generated from field: pg_query.IntoClause into = 2;
   */
  into?: IntoClause;

  /**
   * @generated from field: pg_query.ObjectType relkind = 3;
   */
  relkind: ObjectType;

  /**
   * @generated from field: bool is_select_into = 4 [json_name = "is_select_into"];
   */
  isSelectInto: boolean;

  /**
   * @generated from field: bool if_not_exists = 5 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;
};

/**
 * Describes the message pg_query.CreateTableAsStmt.
 * Use `create(CreateTableAsStmtSchema)` to create a new message.
 */
export const CreateTableAsStmtSchema: GenMessage<CreateTableAsStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 101);

/**
 * @generated from message pg_query.CreateSeqStmt
 */
export type CreateSeqStmt = Message<"pg_query.CreateSeqStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar sequence = 1;
   */
  sequence?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];

  /**
   * @generated from field: uint32 owner_id = 3;
   */
  ownerId: number;

  /**
   * @generated from field: bool for_identity = 4 [json_name = "for_identity"];
   */
  forIdentity: boolean;

  /**
   * @generated from field: bool if_not_exists = 5 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;
};

/**
 * Describes the message pg_query.CreateSeqStmt.
 * Use `create(CreateSeqStmtSchema)` to create a new message.
 */
export const CreateSeqStmtSchema: GenMessage<CreateSeqStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 102);

/**
 * @generated from message pg_query.AlterSeqStmt
 */
export type AlterSeqStmt = Message<"pg_query.AlterSeqStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar sequence = 1;
   */
  sequence?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];

  /**
   * @generated from field: bool for_identity = 3 [json_name = "for_identity"];
   */
  forIdentity: boolean;

  /**
   * @generated from field: bool missing_ok = 4 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * Describes the message pg_query.AlterSeqStmt.
 * Use `create(AlterSeqStmtSchema)` to create a new message.
 */
export const AlterSeqStmtSchema: GenMessage<AlterSeqStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 103);

/**
 * @generated from message pg_query.VariableSetStmt
 */
export type VariableSetStmt = Message<"pg_query.VariableSetStmt"> & {
  /**
   * @generated from field: pg_query.VariableSetKind kind = 1;
   */
  kind: VariableSetKind;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: repeated pg_query.Node args = 3;
   */
  args: Node[];

  /**
   * @generated from field: bool is_local = 4 [json_name = "is_local"];
   */
  isLocal: boolean;
};

/**
 * Describes the message pg_query.VariableSetStmt.
 * Use `create(VariableSetStmtSchema)` to create a new message.
 */
export const VariableSetStmtSchema: GenMessage<VariableSetStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 104);

/**
 * @generated from message pg_query.VariableShowStmt
 */
export type VariableShowStmt = Message<"pg_query.VariableShowStmt"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message pg_query.VariableShowStmt.
 * Use `create(VariableShowStmtSchema)` to create a new message.
 */
export const VariableShowStmtSchema: GenMessage<VariableShowStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 105);

/**
 * @generated from message pg_query.DiscardStmt
 */
export type DiscardStmt = Message<"pg_query.DiscardStmt"> & {
  /**
   * @generated from field: pg_query.DiscardMode target = 1;
   */
  target: DiscardMode;
};

/**
 * Describes the message pg_query.DiscardStmt.
 * Use `create(DiscardStmtSchema)` to create a new message.
 */
export const DiscardStmtSchema: GenMessage<DiscardStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 106);

/**
 * @generated from message pg_query.CreateTrigStmt
 */
export type CreateTrigStmt = Message<"pg_query.CreateTrigStmt"> & {
  /**
   * @generated from field: string trigname = 1;
   */
  trigname: string;

  /**
   * @generated from field: pg_query.RangeVar relation = 2;
   */
  relation?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node funcname = 3;
   */
  funcname: Node[];

  /**
   * @generated from field: repeated pg_query.Node args = 4;
   */
  args: Node[];

  /**
   * @generated from field: bool row = 5;
   */
  row: boolean;

  /**
   * @generated from field: int32 timing = 6;
   */
  timing: number;

  /**
   * @generated from field: int32 events = 7;
   */
  events: number;

  /**
   * @generated from field: repeated pg_query.Node columns = 8;
   */
  columns: Node[];

  /**
   * @generated from field: pg_query.Node when_clause = 9;
   */
  whenClause?: Node;

  /**
   * @generated from field: bool isconstraint = 10;
   */
  isconstraint: boolean;

  /**
   * @generated from field: repeated pg_query.Node transition_rels = 11;
   */
  transitionRels: Node[];

  /**
   * @generated from field: bool deferrable = 12;
   */
  deferrable: boolean;

  /**
   * @generated from field: bool initdeferred = 13;
   */
  initdeferred: boolean;

  /**
   * @generated from field: pg_query.RangeVar constrrel = 14;
   */
  constrrel?: RangeVar;
};

/**
 * Describes the message pg_query.CreateTrigStmt.
 * Use `create(CreateTrigStmtSchema)` to create a new message.
 */
export const CreateTrigStmtSchema: GenMessage<CreateTrigStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 107);

/**
 * @generated from message pg_query.CreatePLangStmt
 */
export type CreatePLangStmt = Message<"pg_query.CreatePLangStmt"> & {
  /**
   * @generated from field: bool replace = 1;
   */
  replace: boolean;

  /**
   * @generated from field: string plname = 2;
   */
  plname: string;

  /**
   * @generated from field: repeated pg_query.Node plhandler = 3;
   */
  plhandler: Node[];

  /**
   * @generated from field: repeated pg_query.Node plinline = 4;
   */
  plinline: Node[];

  /**
   * @generated from field: repeated pg_query.Node plvalidator = 5;
   */
  plvalidator: Node[];

  /**
   * @generated from field: bool pltrusted = 6;
   */
  pltrusted: boolean;
};

/**
 * Describes the message pg_query.CreatePLangStmt.
 * Use `create(CreatePLangStmtSchema)` to create a new message.
 */
export const CreatePLangStmtSchema: GenMessage<CreatePLangStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 108);

/**
 * @generated from message pg_query.CreateRoleStmt
 */
export type CreateRoleStmt = Message<"pg_query.CreateRoleStmt"> & {
  /**
   * @generated from field: pg_query.RoleStmtType stmt_type = 1 [json_name = "stmt_type"];
   */
  stmtType: RoleStmtType;

  /**
   * @generated from field: string role = 2;
   */
  role: string;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.CreateRoleStmt.
 * Use `create(CreateRoleStmtSchema)` to create a new message.
 */
export const CreateRoleStmtSchema: GenMessage<CreateRoleStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 109);

/**
 * @generated from message pg_query.AlterRoleStmt
 */
export type AlterRoleStmt = Message<"pg_query.AlterRoleStmt"> & {
  /**
   * @generated from field: pg_query.RoleSpec role = 1;
   */
  role?: RoleSpec;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];

  /**
   * @generated from field: int32 action = 3;
   */
  action: number;
};

/**
 * Describes the message pg_query.AlterRoleStmt.
 * Use `create(AlterRoleStmtSchema)` to create a new message.
 */
export const AlterRoleStmtSchema: GenMessage<AlterRoleStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 110);

/**
 * @generated from message pg_query.DropRoleStmt
 */
export type DropRoleStmt = Message<"pg_query.DropRoleStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node roles = 1;
   */
  roles: Node[];

  /**
   * @generated from field: bool missing_ok = 2 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * Describes the message pg_query.DropRoleStmt.
 * Use `create(DropRoleStmtSchema)` to create a new message.
 */
export const DropRoleStmtSchema: GenMessage<DropRoleStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 111);

/**
 * @generated from message pg_query.LockStmt
 */
export type LockStmt = Message<"pg_query.LockStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node relations = 1;
   */
  relations: Node[];

  /**
   * @generated from field: int32 mode = 2;
   */
  mode: number;

  /**
   * @generated from field: bool nowait = 3;
   */
  nowait: boolean;
};

/**
 * Describes the message pg_query.LockStmt.
 * Use `create(LockStmtSchema)` to create a new message.
 */
export const LockStmtSchema: GenMessage<LockStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 112);

/**
 * @generated from message pg_query.ConstraintsSetStmt
 */
export type ConstraintsSetStmt = Message<"pg_query.ConstraintsSetStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node constraints = 1;
   */
  constraints: Node[];

  /**
   * @generated from field: bool deferred = 2;
   */
  deferred: boolean;
};

/**
 * Describes the message pg_query.ConstraintsSetStmt.
 * Use `create(ConstraintsSetStmtSchema)` to create a new message.
 */
export const ConstraintsSetStmtSchema: GenMessage<ConstraintsSetStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 113);

/**
 * @generated from message pg_query.ReindexStmt
 */
export type ReindexStmt = Message<"pg_query.ReindexStmt"> & {
  /**
   * @generated from field: pg_query.ReindexObjectType kind = 1;
   */
  kind: ReindexObjectType;

  /**
   * @generated from field: pg_query.RangeVar relation = 2;
   */
  relation?: RangeVar;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: int32 options = 4;
   */
  options: number;

  /**
   * @generated from field: bool concurrent = 5;
   */
  concurrent: boolean;
};

/**
 * Describes the message pg_query.ReindexStmt.
 * Use `create(ReindexStmtSchema)` to create a new message.
 */
export const ReindexStmtSchema: GenMessage<ReindexStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 114);

/**
 * @generated from message pg_query.CheckPointStmt
 */
export type CheckPointStmt = Message<"pg_query.CheckPointStmt"> & {
};

/**
 * Describes the message pg_query.CheckPointStmt.
 * Use `create(CheckPointStmtSchema)` to create a new message.
 */
export const CheckPointStmtSchema: GenMessage<CheckPointStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 115);

/**
 * @generated from message pg_query.CreateSchemaStmt
 */
export type CreateSchemaStmt = Message<"pg_query.CreateSchemaStmt"> & {
  /**
   * @generated from field: string schemaname = 1;
   */
  schemaname: string;

  /**
   * @generated from field: pg_query.RoleSpec authrole = 2;
   */
  authrole?: RoleSpec;

  /**
   * @generated from field: repeated pg_query.Node schema_elts = 3;
   */
  schemaElts: Node[];

  /**
   * @generated from field: bool if_not_exists = 4 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;
};

/**
 * Describes the message pg_query.CreateSchemaStmt.
 * Use `create(CreateSchemaStmtSchema)` to create a new message.
 */
export const CreateSchemaStmtSchema: GenMessage<CreateSchemaStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 116);

/**
 * @generated from message pg_query.AlterDatabaseStmt
 */
export type AlterDatabaseStmt = Message<"pg_query.AlterDatabaseStmt"> & {
  /**
   * @generated from field: string dbname = 1;
   */
  dbname: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.AlterDatabaseStmt.
 * Use `create(AlterDatabaseStmtSchema)` to create a new message.
 */
export const AlterDatabaseStmtSchema: GenMessage<AlterDatabaseStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 117);

/**
 * @generated from message pg_query.AlterDatabaseSetStmt
 */
export type AlterDatabaseSetStmt = Message<"pg_query.AlterDatabaseSetStmt"> & {
  /**
   * @generated from field: string dbname = 1;
   */
  dbname: string;

  /**
   * @generated from field: pg_query.VariableSetStmt setstmt = 2;
   */
  setstmt?: VariableSetStmt;
};

/**
 * Describes the message pg_query.AlterDatabaseSetStmt.
 * Use `create(AlterDatabaseSetStmtSchema)` to create a new message.
 */
export const AlterDatabaseSetStmtSchema: GenMessage<AlterDatabaseSetStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 118);

/**
 * @generated from message pg_query.AlterRoleSetStmt
 */
export type AlterRoleSetStmt = Message<"pg_query.AlterRoleSetStmt"> & {
  /**
   * @generated from field: pg_query.RoleSpec role = 1;
   */
  role?: RoleSpec;

  /**
   * @generated from field: string database = 2;
   */
  database: string;

  /**
   * @generated from field: pg_query.VariableSetStmt setstmt = 3;
   */
  setstmt?: VariableSetStmt;
};

/**
 * Describes the message pg_query.AlterRoleSetStmt.
 * Use `create(AlterRoleSetStmtSchema)` to create a new message.
 */
export const AlterRoleSetStmtSchema: GenMessage<AlterRoleSetStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 119);

/**
 * @generated from message pg_query.CreateConversionStmt
 */
export type CreateConversionStmt = Message<"pg_query.CreateConversionStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node conversion_name = 1 [json_name = "conversion_name"];
   */
  conversionName: Node[];

  /**
   * @generated from field: string for_encoding_name = 2 [json_name = "for_encoding_name"];
   */
  forEncodingName: string;

  /**
   * @generated from field: string to_encoding_name = 3 [json_name = "to_encoding_name"];
   */
  toEncodingName: string;

  /**
   * @generated from field: repeated pg_query.Node func_name = 4 [json_name = "func_name"];
   */
  funcName: Node[];

  /**
   * @generated from field: bool def = 5;
   */
  def: boolean;
};

/**
 * Describes the message pg_query.CreateConversionStmt.
 * Use `create(CreateConversionStmtSchema)` to create a new message.
 */
export const CreateConversionStmtSchema: GenMessage<CreateConversionStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 120);

/**
 * @generated from message pg_query.CreateCastStmt
 */
export type CreateCastStmt = Message<"pg_query.CreateCastStmt"> & {
  /**
   * @generated from field: pg_query.TypeName sourcetype = 1;
   */
  sourcetype?: TypeName;

  /**
   * @generated from field: pg_query.TypeName targettype = 2;
   */
  targettype?: TypeName;

  /**
   * @generated from field: pg_query.ObjectWithArgs func = 3;
   */
  func?: ObjectWithArgs;

  /**
   * @generated from field: pg_query.CoercionContext context = 4;
   */
  context: CoercionContext;

  /**
   * @generated from field: bool inout = 5;
   */
  inout: boolean;
};

/**
 * Describes the message pg_query.CreateCastStmt.
 * Use `create(CreateCastStmtSchema)` to create a new message.
 */
export const CreateCastStmtSchema: GenMessage<CreateCastStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 121);

/**
 * @generated from message pg_query.CreateOpClassStmt
 */
export type CreateOpClassStmt = Message<"pg_query.CreateOpClassStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node opclassname = 1;
   */
  opclassname: Node[];

  /**
   * @generated from field: repeated pg_query.Node opfamilyname = 2;
   */
  opfamilyname: Node[];

  /**
   * @generated from field: string amname = 3;
   */
  amname: string;

  /**
   * @generated from field: pg_query.TypeName datatype = 4;
   */
  datatype?: TypeName;

  /**
   * @generated from field: repeated pg_query.Node items = 5;
   */
  items: Node[];

  /**
   * @generated from field: bool is_default = 6;
   */
  isDefault: boolean;
};

/**
 * Describes the message pg_query.CreateOpClassStmt.
 * Use `create(CreateOpClassStmtSchema)` to create a new message.
 */
export const CreateOpClassStmtSchema: GenMessage<CreateOpClassStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 122);

/**
 * @generated from message pg_query.CreateOpFamilyStmt
 */
export type CreateOpFamilyStmt = Message<"pg_query.CreateOpFamilyStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node opfamilyname = 1;
   */
  opfamilyname: Node[];

  /**
   * @generated from field: string amname = 2;
   */
  amname: string;
};

/**
 * Describes the message pg_query.CreateOpFamilyStmt.
 * Use `create(CreateOpFamilyStmtSchema)` to create a new message.
 */
export const CreateOpFamilyStmtSchema: GenMessage<CreateOpFamilyStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 123);

/**
 * @generated from message pg_query.AlterOpFamilyStmt
 */
export type AlterOpFamilyStmt = Message<"pg_query.AlterOpFamilyStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node opfamilyname = 1;
   */
  opfamilyname: Node[];

  /**
   * @generated from field: string amname = 2;
   */
  amname: string;

  /**
   * @generated from field: bool is_drop = 3;
   */
  isDrop: boolean;

  /**
   * @generated from field: repeated pg_query.Node items = 4;
   */
  items: Node[];
};

/**
 * Describes the message pg_query.AlterOpFamilyStmt.
 * Use `create(AlterOpFamilyStmtSchema)` to create a new message.
 */
export const AlterOpFamilyStmtSchema: GenMessage<AlterOpFamilyStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 124);

/**
 * @generated from message pg_query.PrepareStmt
 */
export type PrepareStmt = Message<"pg_query.PrepareStmt"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated pg_query.Node argtypes = 2;
   */
  argtypes: Node[];

  /**
   * @generated from field: pg_query.Node query = 3;
   */
  query?: Node;
};

/**
 * Describes the message pg_query.PrepareStmt.
 * Use `create(PrepareStmtSchema)` to create a new message.
 */
export const PrepareStmtSchema: GenMessage<PrepareStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 125);

/**
 * @generated from message pg_query.ExecuteStmt
 */
export type ExecuteStmt = Message<"pg_query.ExecuteStmt"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated pg_query.Node params = 2;
   */
  params: Node[];
};

/**
 * Describes the message pg_query.ExecuteStmt.
 * Use `create(ExecuteStmtSchema)` to create a new message.
 */
export const ExecuteStmtSchema: GenMessage<ExecuteStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 126);

/**
 * @generated from message pg_query.DeallocateStmt
 */
export type DeallocateStmt = Message<"pg_query.DeallocateStmt"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message pg_query.DeallocateStmt.
 * Use `create(DeallocateStmtSchema)` to create a new message.
 */
export const DeallocateStmtSchema: GenMessage<DeallocateStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 127);

/**
 * @generated from message pg_query.DeclareCursorStmt
 */
export type DeclareCursorStmt = Message<"pg_query.DeclareCursorStmt"> & {
  /**
   * @generated from field: string portalname = 1;
   */
  portalname: string;

  /**
   * @generated from field: int32 options = 2;
   */
  options: number;

  /**
   * @generated from field: pg_query.Node query = 3;
   */
  query?: Node;
};

/**
 * Describes the message pg_query.DeclareCursorStmt.
 * Use `create(DeclareCursorStmtSchema)` to create a new message.
 */
export const DeclareCursorStmtSchema: GenMessage<DeclareCursorStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 128);

/**
 * @generated from message pg_query.CreateTableSpaceStmt
 */
export type CreateTableSpaceStmt = Message<"pg_query.CreateTableSpaceStmt"> & {
  /**
   * @generated from field: string tablespacename = 1;
   */
  tablespacename: string;

  /**
   * @generated from field: pg_query.RoleSpec owner = 2;
   */
  owner?: RoleSpec;

  /**
   * @generated from field: string location = 3;
   */
  location: string;

  /**
   * @generated from field: repeated pg_query.Node options = 4;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.CreateTableSpaceStmt.
 * Use `create(CreateTableSpaceStmtSchema)` to create a new message.
 */
export const CreateTableSpaceStmtSchema: GenMessage<CreateTableSpaceStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 129);

/**
 * @generated from message pg_query.DropTableSpaceStmt
 */
export type DropTableSpaceStmt = Message<"pg_query.DropTableSpaceStmt"> & {
  /**
   * @generated from field: string tablespacename = 1;
   */
  tablespacename: string;

  /**
   * @generated from field: bool missing_ok = 2 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * Describes the message pg_query.DropTableSpaceStmt.
 * Use `create(DropTableSpaceStmtSchema)` to create a new message.
 */
export const DropTableSpaceStmtSchema: GenMessage<DropTableSpaceStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 130);

/**
 * @generated from message pg_query.AlterObjectDependsStmt
 */
export type AlterObjectDependsStmt = Message<"pg_query.AlterObjectDependsStmt"> & {
  /**
   * @generated from field: pg_query.ObjectType object_type = 1;
   */
  objectType: ObjectType;

  /**
   * @generated from field: pg_query.RangeVar relation = 2;
   */
  relation?: RangeVar;

  /**
   * @generated from field: pg_query.Node object = 3;
   */
  object?: Node;

  /**
   * @generated from field: pg_query.Node extname = 4;
   */
  extname?: Node;

  /**
   * @generated from field: bool remove = 5;
   */
  remove: boolean;
};

/**
 * Describes the message pg_query.AlterObjectDependsStmt.
 * Use `create(AlterObjectDependsStmtSchema)` to create a new message.
 */
export const AlterObjectDependsStmtSchema: GenMessage<AlterObjectDependsStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 131);

/**
 * @generated from message pg_query.AlterObjectSchemaStmt
 */
export type AlterObjectSchemaStmt = Message<"pg_query.AlterObjectSchemaStmt"> & {
  /**
   * @generated from field: pg_query.ObjectType object_type = 1;
   */
  objectType: ObjectType;

  /**
   * @generated from field: pg_query.RangeVar relation = 2;
   */
  relation?: RangeVar;

  /**
   * @generated from field: pg_query.Node object = 3;
   */
  object?: Node;

  /**
   * @generated from field: string newschema = 4;
   */
  newschema: string;

  /**
   * @generated from field: bool missing_ok = 5 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * Describes the message pg_query.AlterObjectSchemaStmt.
 * Use `create(AlterObjectSchemaStmtSchema)` to create a new message.
 */
export const AlterObjectSchemaStmtSchema: GenMessage<AlterObjectSchemaStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 132);

/**
 * @generated from message pg_query.AlterOwnerStmt
 */
export type AlterOwnerStmt = Message<"pg_query.AlterOwnerStmt"> & {
  /**
   * @generated from field: pg_query.ObjectType object_type = 1;
   */
  objectType: ObjectType;

  /**
   * @generated from field: pg_query.RangeVar relation = 2;
   */
  relation?: RangeVar;

  /**
   * @generated from field: pg_query.Node object = 3;
   */
  object?: Node;

  /**
   * @generated from field: pg_query.RoleSpec newowner = 4;
   */
  newowner?: RoleSpec;
};

/**
 * Describes the message pg_query.AlterOwnerStmt.
 * Use `create(AlterOwnerStmtSchema)` to create a new message.
 */
export const AlterOwnerStmtSchema: GenMessage<AlterOwnerStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 133);

/**
 * @generated from message pg_query.AlterOperatorStmt
 */
export type AlterOperatorStmt = Message<"pg_query.AlterOperatorStmt"> & {
  /**
   * @generated from field: pg_query.ObjectWithArgs opername = 1;
   */
  opername?: ObjectWithArgs;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.AlterOperatorStmt.
 * Use `create(AlterOperatorStmtSchema)` to create a new message.
 */
export const AlterOperatorStmtSchema: GenMessage<AlterOperatorStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 134);

/**
 * @generated from message pg_query.AlterTypeStmt
 */
export type AlterTypeStmt = Message<"pg_query.AlterTypeStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node type_name = 1;
   */
  typeName: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.AlterTypeStmt.
 * Use `create(AlterTypeStmtSchema)` to create a new message.
 */
export const AlterTypeStmtSchema: GenMessage<AlterTypeStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 135);

/**
 * @generated from message pg_query.DropOwnedStmt
 */
export type DropOwnedStmt = Message<"pg_query.DropOwnedStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node roles = 1;
   */
  roles: Node[];

  /**
   * @generated from field: pg_query.DropBehavior behavior = 2;
   */
  behavior: DropBehavior;
};

/**
 * Describes the message pg_query.DropOwnedStmt.
 * Use `create(DropOwnedStmtSchema)` to create a new message.
 */
export const DropOwnedStmtSchema: GenMessage<DropOwnedStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 136);

/**
 * @generated from message pg_query.ReassignOwnedStmt
 */
export type ReassignOwnedStmt = Message<"pg_query.ReassignOwnedStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node roles = 1;
   */
  roles: Node[];

  /**
   * @generated from field: pg_query.RoleSpec newrole = 2;
   */
  newrole?: RoleSpec;
};

/**
 * Describes the message pg_query.ReassignOwnedStmt.
 * Use `create(ReassignOwnedStmtSchema)` to create a new message.
 */
export const ReassignOwnedStmtSchema: GenMessage<ReassignOwnedStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 137);

/**
 * @generated from message pg_query.CompositeTypeStmt
 */
export type CompositeTypeStmt = Message<"pg_query.CompositeTypeStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar typevar = 1;
   */
  typevar?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node coldeflist = 2;
   */
  coldeflist: Node[];
};

/**
 * Describes the message pg_query.CompositeTypeStmt.
 * Use `create(CompositeTypeStmtSchema)` to create a new message.
 */
export const CompositeTypeStmtSchema: GenMessage<CompositeTypeStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 138);

/**
 * @generated from message pg_query.CreateEnumStmt
 */
export type CreateEnumStmt = Message<"pg_query.CreateEnumStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node type_name = 1;
   */
  typeName: Node[];

  /**
   * @generated from field: repeated pg_query.Node vals = 2;
   */
  vals: Node[];
};

/**
 * Describes the message pg_query.CreateEnumStmt.
 * Use `create(CreateEnumStmtSchema)` to create a new message.
 */
export const CreateEnumStmtSchema: GenMessage<CreateEnumStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 139);

/**
 * @generated from message pg_query.CreateRangeStmt
 */
export type CreateRangeStmt = Message<"pg_query.CreateRangeStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node type_name = 1;
   */
  typeName: Node[];

  /**
   * @generated from field: repeated pg_query.Node params = 2;
   */
  params: Node[];
};

/**
 * Describes the message pg_query.CreateRangeStmt.
 * Use `create(CreateRangeStmtSchema)` to create a new message.
 */
export const CreateRangeStmtSchema: GenMessage<CreateRangeStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 140);

/**
 * @generated from message pg_query.AlterEnumStmt
 */
export type AlterEnumStmt = Message<"pg_query.AlterEnumStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node type_name = 1;
   */
  typeName: Node[];

  /**
   * @generated from field: string old_val = 2;
   */
  oldVal: string;

  /**
   * @generated from field: string new_val = 3;
   */
  newVal: string;

  /**
   * @generated from field: string new_val_neighbor = 4;
   */
  newValNeighbor: string;

  /**
   * @generated from field: bool new_val_is_after = 5;
   */
  newValIsAfter: boolean;

  /**
   * @generated from field: bool skip_if_new_val_exists = 6;
   */
  skipIfNewValExists: boolean;
};

/**
 * Describes the message pg_query.AlterEnumStmt.
 * Use `create(AlterEnumStmtSchema)` to create a new message.
 */
export const AlterEnumStmtSchema: GenMessage<AlterEnumStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 141);

/**
 * @generated from message pg_query.AlterTSDictionaryStmt
 */
export type AlterTSDictionaryStmt = Message<"pg_query.AlterTSDictionaryStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node dictname = 1;
   */
  dictname: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.AlterTSDictionaryStmt.
 * Use `create(AlterTSDictionaryStmtSchema)` to create a new message.
 */
export const AlterTSDictionaryStmtSchema: GenMessage<AlterTSDictionaryStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 142);

/**
 * @generated from message pg_query.AlterTSConfigurationStmt
 */
export type AlterTSConfigurationStmt = Message<"pg_query.AlterTSConfigurationStmt"> & {
  /**
   * @generated from field: pg_query.AlterTSConfigType kind = 1;
   */
  kind: AlterTSConfigType;

  /**
   * @generated from field: repeated pg_query.Node cfgname = 2;
   */
  cfgname: Node[];

  /**
   * @generated from field: repeated pg_query.Node tokentype = 3;
   */
  tokentype: Node[];

  /**
   * @generated from field: repeated pg_query.Node dicts = 4;
   */
  dicts: Node[];

  /**
   * @generated from field: bool override = 5;
   */
  override: boolean;

  /**
   * @generated from field: bool replace = 6;
   */
  replace: boolean;

  /**
   * @generated from field: bool missing_ok = 7 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * Describes the message pg_query.AlterTSConfigurationStmt.
 * Use `create(AlterTSConfigurationStmtSchema)` to create a new message.
 */
export const AlterTSConfigurationStmtSchema: GenMessage<AlterTSConfigurationStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 143);

/**
 * @generated from message pg_query.CreateFdwStmt
 */
export type CreateFdwStmt = Message<"pg_query.CreateFdwStmt"> & {
  /**
   * @generated from field: string fdwname = 1;
   */
  fdwname: string;

  /**
   * @generated from field: repeated pg_query.Node func_options = 2 [json_name = "func_options"];
   */
  funcOptions: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.CreateFdwStmt.
 * Use `create(CreateFdwStmtSchema)` to create a new message.
 */
export const CreateFdwStmtSchema: GenMessage<CreateFdwStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 144);

/**
 * @generated from message pg_query.AlterFdwStmt
 */
export type AlterFdwStmt = Message<"pg_query.AlterFdwStmt"> & {
  /**
   * @generated from field: string fdwname = 1;
   */
  fdwname: string;

  /**
   * @generated from field: repeated pg_query.Node func_options = 2 [json_name = "func_options"];
   */
  funcOptions: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.AlterFdwStmt.
 * Use `create(AlterFdwStmtSchema)` to create a new message.
 */
export const AlterFdwStmtSchema: GenMessage<AlterFdwStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 145);

/**
 * @generated from message pg_query.CreateForeignServerStmt
 */
export type CreateForeignServerStmt = Message<"pg_query.CreateForeignServerStmt"> & {
  /**
   * @generated from field: string servername = 1;
   */
  servername: string;

  /**
   * @generated from field: string servertype = 2;
   */
  servertype: string;

  /**
   * @generated from field: string version = 3;
   */
  version: string;

  /**
   * @generated from field: string fdwname = 4;
   */
  fdwname: string;

  /**
   * @generated from field: bool if_not_exists = 5 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;

  /**
   * @generated from field: repeated pg_query.Node options = 6;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.CreateForeignServerStmt.
 * Use `create(CreateForeignServerStmtSchema)` to create a new message.
 */
export const CreateForeignServerStmtSchema: GenMessage<CreateForeignServerStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 146);

/**
 * @generated from message pg_query.AlterForeignServerStmt
 */
export type AlterForeignServerStmt = Message<"pg_query.AlterForeignServerStmt"> & {
  /**
   * @generated from field: string servername = 1;
   */
  servername: string;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options: Node[];

  /**
   * @generated from field: bool has_version = 4 [json_name = "has_version"];
   */
  hasVersion: boolean;
};

/**
 * Describes the message pg_query.AlterForeignServerStmt.
 * Use `create(AlterForeignServerStmtSchema)` to create a new message.
 */
export const AlterForeignServerStmtSchema: GenMessage<AlterForeignServerStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 147);

/**
 * @generated from message pg_query.CreateUserMappingStmt
 */
export type CreateUserMappingStmt = Message<"pg_query.CreateUserMappingStmt"> & {
  /**
   * @generated from field: pg_query.RoleSpec user = 1;
   */
  user?: RoleSpec;

  /**
   * @generated from field: string servername = 2;
   */
  servername: string;

  /**
   * @generated from field: bool if_not_exists = 3 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;

  /**
   * @generated from field: repeated pg_query.Node options = 4;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.CreateUserMappingStmt.
 * Use `create(CreateUserMappingStmtSchema)` to create a new message.
 */
export const CreateUserMappingStmtSchema: GenMessage<CreateUserMappingStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 148);

/**
 * @generated from message pg_query.AlterUserMappingStmt
 */
export type AlterUserMappingStmt = Message<"pg_query.AlterUserMappingStmt"> & {
  /**
   * @generated from field: pg_query.RoleSpec user = 1;
   */
  user?: RoleSpec;

  /**
   * @generated from field: string servername = 2;
   */
  servername: string;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.AlterUserMappingStmt.
 * Use `create(AlterUserMappingStmtSchema)` to create a new message.
 */
export const AlterUserMappingStmtSchema: GenMessage<AlterUserMappingStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 149);

/**
 * @generated from message pg_query.DropUserMappingStmt
 */
export type DropUserMappingStmt = Message<"pg_query.DropUserMappingStmt"> & {
  /**
   * @generated from field: pg_query.RoleSpec user = 1;
   */
  user?: RoleSpec;

  /**
   * @generated from field: string servername = 2;
   */
  servername: string;

  /**
   * @generated from field: bool missing_ok = 3 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * Describes the message pg_query.DropUserMappingStmt.
 * Use `create(DropUserMappingStmtSchema)` to create a new message.
 */
export const DropUserMappingStmtSchema: GenMessage<DropUserMappingStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 150);

/**
 * @generated from message pg_query.AlterTableSpaceOptionsStmt
 */
export type AlterTableSpaceOptionsStmt = Message<"pg_query.AlterTableSpaceOptionsStmt"> & {
  /**
   * @generated from field: string tablespacename = 1;
   */
  tablespacename: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];

  /**
   * @generated from field: bool is_reset = 3;
   */
  isReset: boolean;
};

/**
 * Describes the message pg_query.AlterTableSpaceOptionsStmt.
 * Use `create(AlterTableSpaceOptionsStmtSchema)` to create a new message.
 */
export const AlterTableSpaceOptionsStmtSchema: GenMessage<AlterTableSpaceOptionsStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 151);

/**
 * @generated from message pg_query.AlterTableMoveAllStmt
 */
export type AlterTableMoveAllStmt = Message<"pg_query.AlterTableMoveAllStmt"> & {
  /**
   * @generated from field: string orig_tablespacename = 1 [json_name = "orig_tablespacename"];
   */
  origTablespacename: string;

  /**
   * @generated from field: pg_query.ObjectType objtype = 2;
   */
  objtype: ObjectType;

  /**
   * @generated from field: repeated pg_query.Node roles = 3;
   */
  roles: Node[];

  /**
   * @generated from field: string new_tablespacename = 4 [json_name = "new_tablespacename"];
   */
  newTablespacename: string;

  /**
   * @generated from field: bool nowait = 5;
   */
  nowait: boolean;
};

/**
 * Describes the message pg_query.AlterTableMoveAllStmt.
 * Use `create(AlterTableMoveAllStmtSchema)` to create a new message.
 */
export const AlterTableMoveAllStmtSchema: GenMessage<AlterTableMoveAllStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 152);

/**
 * @generated from message pg_query.SecLabelStmt
 */
export type SecLabelStmt = Message<"pg_query.SecLabelStmt"> & {
  /**
   * @generated from field: pg_query.ObjectType objtype = 1;
   */
  objtype: ObjectType;

  /**
   * @generated from field: pg_query.Node object = 2;
   */
  object?: Node;

  /**
   * @generated from field: string provider = 3;
   */
  provider: string;

  /**
   * @generated from field: string label = 4;
   */
  label: string;
};

/**
 * Describes the message pg_query.SecLabelStmt.
 * Use `create(SecLabelStmtSchema)` to create a new message.
 */
export const SecLabelStmtSchema: GenMessage<SecLabelStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 153);

/**
 * @generated from message pg_query.CreateForeignTableStmt
 */
export type CreateForeignTableStmt = Message<"pg_query.CreateForeignTableStmt"> & {
  /**
   * @generated from field: pg_query.CreateStmt base_stmt = 1 [json_name = "base"];
   */
  baseStmt?: CreateStmt;

  /**
   * @generated from field: string servername = 2;
   */
  servername: string;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.CreateForeignTableStmt.
 * Use `create(CreateForeignTableStmtSchema)` to create a new message.
 */
export const CreateForeignTableStmtSchema: GenMessage<CreateForeignTableStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 154);

/**
 * @generated from message pg_query.ImportForeignSchemaStmt
 */
export type ImportForeignSchemaStmt = Message<"pg_query.ImportForeignSchemaStmt"> & {
  /**
   * @generated from field: string server_name = 1 [json_name = "server_name"];
   */
  serverName: string;

  /**
   * @generated from field: string remote_schema = 2 [json_name = "remote_schema"];
   */
  remoteSchema: string;

  /**
   * @generated from field: string local_schema = 3 [json_name = "local_schema"];
   */
  localSchema: string;

  /**
   * @generated from field: pg_query.ImportForeignSchemaType list_type = 4 [json_name = "list_type"];
   */
  listType: ImportForeignSchemaType;

  /**
   * @generated from field: repeated pg_query.Node table_list = 5 [json_name = "table_list"];
   */
  tableList: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 6;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.ImportForeignSchemaStmt.
 * Use `create(ImportForeignSchemaStmtSchema)` to create a new message.
 */
export const ImportForeignSchemaStmtSchema: GenMessage<ImportForeignSchemaStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 155);

/**
 * @generated from message pg_query.CreateExtensionStmt
 */
export type CreateExtensionStmt = Message<"pg_query.CreateExtensionStmt"> & {
  /**
   * @generated from field: string extname = 1;
   */
  extname: string;

  /**
   * @generated from field: bool if_not_exists = 2 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.CreateExtensionStmt.
 * Use `create(CreateExtensionStmtSchema)` to create a new message.
 */
export const CreateExtensionStmtSchema: GenMessage<CreateExtensionStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 156);

/**
 * @generated from message pg_query.AlterExtensionStmt
 */
export type AlterExtensionStmt = Message<"pg_query.AlterExtensionStmt"> & {
  /**
   * @generated from field: string extname = 1;
   */
  extname: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.AlterExtensionStmt.
 * Use `create(AlterExtensionStmtSchema)` to create a new message.
 */
export const AlterExtensionStmtSchema: GenMessage<AlterExtensionStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 157);

/**
 * @generated from message pg_query.AlterExtensionContentsStmt
 */
export type AlterExtensionContentsStmt = Message<"pg_query.AlterExtensionContentsStmt"> & {
  /**
   * @generated from field: string extname = 1;
   */
  extname: string;

  /**
   * @generated from field: int32 action = 2;
   */
  action: number;

  /**
   * @generated from field: pg_query.ObjectType objtype = 3;
   */
  objtype: ObjectType;

  /**
   * @generated from field: pg_query.Node object = 4;
   */
  object?: Node;
};

/**
 * Describes the message pg_query.AlterExtensionContentsStmt.
 * Use `create(AlterExtensionContentsStmtSchema)` to create a new message.
 */
export const AlterExtensionContentsStmtSchema: GenMessage<AlterExtensionContentsStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 158);

/**
 * @generated from message pg_query.CreateEventTrigStmt
 */
export type CreateEventTrigStmt = Message<"pg_query.CreateEventTrigStmt"> & {
  /**
   * @generated from field: string trigname = 1;
   */
  trigname: string;

  /**
   * @generated from field: string eventname = 2;
   */
  eventname: string;

  /**
   * @generated from field: repeated pg_query.Node whenclause = 3;
   */
  whenclause: Node[];

  /**
   * @generated from field: repeated pg_query.Node funcname = 4;
   */
  funcname: Node[];
};

/**
 * Describes the message pg_query.CreateEventTrigStmt.
 * Use `create(CreateEventTrigStmtSchema)` to create a new message.
 */
export const CreateEventTrigStmtSchema: GenMessage<CreateEventTrigStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 159);

/**
 * @generated from message pg_query.AlterEventTrigStmt
 */
export type AlterEventTrigStmt = Message<"pg_query.AlterEventTrigStmt"> & {
  /**
   * @generated from field: string trigname = 1;
   */
  trigname: string;

  /**
   * @generated from field: string tgenabled = 2;
   */
  tgenabled: string;
};

/**
 * Describes the message pg_query.AlterEventTrigStmt.
 * Use `create(AlterEventTrigStmtSchema)` to create a new message.
 */
export const AlterEventTrigStmtSchema: GenMessage<AlterEventTrigStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 160);

/**
 * @generated from message pg_query.RefreshMatViewStmt
 */
export type RefreshMatViewStmt = Message<"pg_query.RefreshMatViewStmt"> & {
  /**
   * @generated from field: bool concurrent = 1;
   */
  concurrent: boolean;

  /**
   * @generated from field: bool skip_data = 2;
   */
  skipData: boolean;

  /**
   * @generated from field: pg_query.RangeVar relation = 3;
   */
  relation?: RangeVar;
};

/**
 * Describes the message pg_query.RefreshMatViewStmt.
 * Use `create(RefreshMatViewStmtSchema)` to create a new message.
 */
export const RefreshMatViewStmtSchema: GenMessage<RefreshMatViewStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 161);

/**
 * @generated from message pg_query.ReplicaIdentityStmt
 */
export type ReplicaIdentityStmt = Message<"pg_query.ReplicaIdentityStmt"> & {
  /**
   * @generated from field: string identity_type = 1 [json_name = "identity_type"];
   */
  identityType: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message pg_query.ReplicaIdentityStmt.
 * Use `create(ReplicaIdentityStmtSchema)` to create a new message.
 */
export const ReplicaIdentityStmtSchema: GenMessage<ReplicaIdentityStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 162);

/**
 * @generated from message pg_query.AlterSystemStmt
 */
export type AlterSystemStmt = Message<"pg_query.AlterSystemStmt"> & {
  /**
   * @generated from field: pg_query.VariableSetStmt setstmt = 1;
   */
  setstmt?: VariableSetStmt;
};

/**
 * Describes the message pg_query.AlterSystemStmt.
 * Use `create(AlterSystemStmtSchema)` to create a new message.
 */
export const AlterSystemStmtSchema: GenMessage<AlterSystemStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 163);

/**
 * @generated from message pg_query.CreatePolicyStmt
 */
export type CreatePolicyStmt = Message<"pg_query.CreatePolicyStmt"> & {
  /**
   * @generated from field: string policy_name = 1 [json_name = "policy_name"];
   */
  policyName: string;

  /**
   * @generated from field: pg_query.RangeVar table = 2;
   */
  table?: RangeVar;

  /**
   * @generated from field: string cmd_name = 3 [json_name = "cmd_name"];
   */
  cmdName: string;

  /**
   * @generated from field: bool permissive = 4;
   */
  permissive: boolean;

  /**
   * @generated from field: repeated pg_query.Node roles = 5;
   */
  roles: Node[];

  /**
   * @generated from field: pg_query.Node qual = 6;
   */
  qual?: Node;

  /**
   * @generated from field: pg_query.Node with_check = 7 [json_name = "with_check"];
   */
  withCheck?: Node;
};

/**
 * Describes the message pg_query.CreatePolicyStmt.
 * Use `create(CreatePolicyStmtSchema)` to create a new message.
 */
export const CreatePolicyStmtSchema: GenMessage<CreatePolicyStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 164);

/**
 * @generated from message pg_query.AlterPolicyStmt
 */
export type AlterPolicyStmt = Message<"pg_query.AlterPolicyStmt"> & {
  /**
   * @generated from field: string policy_name = 1 [json_name = "policy_name"];
   */
  policyName: string;

  /**
   * @generated from field: pg_query.RangeVar table = 2;
   */
  table?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node roles = 3;
   */
  roles: Node[];

  /**
   * @generated from field: pg_query.Node qual = 4;
   */
  qual?: Node;

  /**
   * @generated from field: pg_query.Node with_check = 5 [json_name = "with_check"];
   */
  withCheck?: Node;
};

/**
 * Describes the message pg_query.AlterPolicyStmt.
 * Use `create(AlterPolicyStmtSchema)` to create a new message.
 */
export const AlterPolicyStmtSchema: GenMessage<AlterPolicyStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 165);

/**
 * @generated from message pg_query.CreateTransformStmt
 */
export type CreateTransformStmt = Message<"pg_query.CreateTransformStmt"> & {
  /**
   * @generated from field: bool replace = 1;
   */
  replace: boolean;

  /**
   * @generated from field: pg_query.TypeName type_name = 2 [json_name = "type_name"];
   */
  typeName?: TypeName;

  /**
   * @generated from field: string lang = 3;
   */
  lang: string;

  /**
   * @generated from field: pg_query.ObjectWithArgs fromsql = 4;
   */
  fromsql?: ObjectWithArgs;

  /**
   * @generated from field: pg_query.ObjectWithArgs tosql = 5;
   */
  tosql?: ObjectWithArgs;
};

/**
 * Describes the message pg_query.CreateTransformStmt.
 * Use `create(CreateTransformStmtSchema)` to create a new message.
 */
export const CreateTransformStmtSchema: GenMessage<CreateTransformStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 166);

/**
 * @generated from message pg_query.CreateAmStmt
 */
export type CreateAmStmt = Message<"pg_query.CreateAmStmt"> & {
  /**
   * @generated from field: string amname = 1;
   */
  amname: string;

  /**
   * @generated from field: repeated pg_query.Node handler_name = 2 [json_name = "handler_name"];
   */
  handlerName: Node[];

  /**
   * @generated from field: string amtype = 3;
   */
  amtype: string;
};

/**
 * Describes the message pg_query.CreateAmStmt.
 * Use `create(CreateAmStmtSchema)` to create a new message.
 */
export const CreateAmStmtSchema: GenMessage<CreateAmStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 167);

/**
 * @generated from message pg_query.CreatePublicationStmt
 */
export type CreatePublicationStmt = Message<"pg_query.CreatePublicationStmt"> & {
  /**
   * @generated from field: string pubname = 1;
   */
  pubname: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];

  /**
   * @generated from field: repeated pg_query.Node tables = 3;
   */
  tables: Node[];

  /**
   * @generated from field: bool for_all_tables = 4 [json_name = "for_all_tables"];
   */
  forAllTables: boolean;
};

/**
 * Describes the message pg_query.CreatePublicationStmt.
 * Use `create(CreatePublicationStmtSchema)` to create a new message.
 */
export const CreatePublicationStmtSchema: GenMessage<CreatePublicationStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 168);

/**
 * @generated from message pg_query.AlterPublicationStmt
 */
export type AlterPublicationStmt = Message<"pg_query.AlterPublicationStmt"> & {
  /**
   * @generated from field: string pubname = 1;
   */
  pubname: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];

  /**
   * @generated from field: repeated pg_query.Node tables = 3;
   */
  tables: Node[];

  /**
   * @generated from field: bool for_all_tables = 4 [json_name = "for_all_tables"];
   */
  forAllTables: boolean;

  /**
   * @generated from field: pg_query.DefElemAction table_action = 5;
   */
  tableAction: DefElemAction;
};

/**
 * Describes the message pg_query.AlterPublicationStmt.
 * Use `create(AlterPublicationStmtSchema)` to create a new message.
 */
export const AlterPublicationStmtSchema: GenMessage<AlterPublicationStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 169);

/**
 * @generated from message pg_query.CreateSubscriptionStmt
 */
export type CreateSubscriptionStmt = Message<"pg_query.CreateSubscriptionStmt"> & {
  /**
   * @generated from field: string subname = 1;
   */
  subname: string;

  /**
   * @generated from field: string conninfo = 2;
   */
  conninfo: string;

  /**
   * @generated from field: repeated pg_query.Node publication = 3;
   */
  publication: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 4;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.CreateSubscriptionStmt.
 * Use `create(CreateSubscriptionStmtSchema)` to create a new message.
 */
export const CreateSubscriptionStmtSchema: GenMessage<CreateSubscriptionStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 170);

/**
 * @generated from message pg_query.AlterSubscriptionStmt
 */
export type AlterSubscriptionStmt = Message<"pg_query.AlterSubscriptionStmt"> & {
  /**
   * @generated from field: pg_query.AlterSubscriptionType kind = 1;
   */
  kind: AlterSubscriptionType;

  /**
   * @generated from field: string subname = 2;
   */
  subname: string;

  /**
   * @generated from field: string conninfo = 3;
   */
  conninfo: string;

  /**
   * @generated from field: repeated pg_query.Node publication = 4;
   */
  publication: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 5;
   */
  options: Node[];
};

/**
 * Describes the message pg_query.AlterSubscriptionStmt.
 * Use `create(AlterSubscriptionStmtSchema)` to create a new message.
 */
export const AlterSubscriptionStmtSchema: GenMessage<AlterSubscriptionStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 171);

/**
 * @generated from message pg_query.DropSubscriptionStmt
 */
export type DropSubscriptionStmt = Message<"pg_query.DropSubscriptionStmt"> & {
  /**
   * @generated from field: string subname = 1;
   */
  subname: string;

  /**
   * @generated from field: bool missing_ok = 2 [json_name = "missing_ok"];
   */
  missingOk: boolean;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 3;
   */
  behavior: DropBehavior;
};

/**
 * Describes the message pg_query.DropSubscriptionStmt.
 * Use `create(DropSubscriptionStmtSchema)` to create a new message.
 */
export const DropSubscriptionStmtSchema: GenMessage<DropSubscriptionStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 172);

/**
 * @generated from message pg_query.CreateStatsStmt
 */
export type CreateStatsStmt = Message<"pg_query.CreateStatsStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node defnames = 1;
   */
  defnames: Node[];

  /**
   * @generated from field: repeated pg_query.Node stat_types = 2 [json_name = "stat_types"];
   */
  statTypes: Node[];

  /**
   * @generated from field: repeated pg_query.Node exprs = 3;
   */
  exprs: Node[];

  /**
   * @generated from field: repeated pg_query.Node relations = 4;
   */
  relations: Node[];

  /**
   * @generated from field: string stxcomment = 5;
   */
  stxcomment: string;

  /**
   * @generated from field: bool if_not_exists = 6 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;
};

/**
 * Describes the message pg_query.CreateStatsStmt.
 * Use `create(CreateStatsStmtSchema)` to create a new message.
 */
export const CreateStatsStmtSchema: GenMessage<CreateStatsStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 173);

/**
 * @generated from message pg_query.AlterCollationStmt
 */
export type AlterCollationStmt = Message<"pg_query.AlterCollationStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node collname = 1;
   */
  collname: Node[];
};

/**
 * Describes the message pg_query.AlterCollationStmt.
 * Use `create(AlterCollationStmtSchema)` to create a new message.
 */
export const AlterCollationStmtSchema: GenMessage<AlterCollationStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 174);

/**
 * @generated from message pg_query.CallStmt
 */
export type CallStmt = Message<"pg_query.CallStmt"> & {
  /**
   * @generated from field: pg_query.FuncCall funccall = 1;
   */
  funccall?: FuncCall;

  /**
   * @generated from field: pg_query.FuncExpr funcexpr = 2;
   */
  funcexpr?: FuncExpr;
};

/**
 * Describes the message pg_query.CallStmt.
 * Use `create(CallStmtSchema)` to create a new message.
 */
export const CallStmtSchema: GenMessage<CallStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 175);

/**
 * @generated from message pg_query.AlterStatsStmt
 */
export type AlterStatsStmt = Message<"pg_query.AlterStatsStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node defnames = 1;
   */
  defnames: Node[];

  /**
   * @generated from field: int32 stxstattarget = 2;
   */
  stxstattarget: number;

  /**
   * @generated from field: bool missing_ok = 3 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * Describes the message pg_query.AlterStatsStmt.
 * Use `create(AlterStatsStmtSchema)` to create a new message.
 */
export const AlterStatsStmtSchema: GenMessage<AlterStatsStmt> = /*@__PURE__*/
  messageDesc(file_pg_query, 176);

/**
 * @generated from message pg_query.A_Expr
 */
export type A_Expr = Message<"pg_query.A_Expr"> & {
  /**
   * @generated from field: pg_query.A_Expr_Kind kind = 1;
   */
  kind: A_Expr_Kind;

  /**
   * @generated from field: repeated pg_query.Node name = 2;
   */
  name: Node[];

  /**
   * @generated from field: pg_query.Node lexpr = 3;
   */
  lexpr?: Node;

  /**
   * @generated from field: pg_query.Node rexpr = 4;
   */
  rexpr?: Node;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * Describes the message pg_query.A_Expr.
 * Use `create(A_ExprSchema)` to create a new message.
 */
export const A_ExprSchema: GenMessage<A_Expr> = /*@__PURE__*/
  messageDesc(file_pg_query, 177);

/**
 * @generated from message pg_query.ColumnRef
 */
export type ColumnRef = Message<"pg_query.ColumnRef"> & {
  /**
   * @generated from field: repeated pg_query.Node fields = 1;
   */
  fields: Node[];

  /**
   * @generated from field: int32 location = 2;
   */
  location: number;
};

/**
 * Describes the message pg_query.ColumnRef.
 * Use `create(ColumnRefSchema)` to create a new message.
 */
export const ColumnRefSchema: GenMessage<ColumnRef> = /*@__PURE__*/
  messageDesc(file_pg_query, 178);

/**
 * @generated from message pg_query.ParamRef
 */
export type ParamRef = Message<"pg_query.ParamRef"> & {
  /**
   * @generated from field: int32 number = 1;
   */
  number: number;

  /**
   * @generated from field: int32 location = 2;
   */
  location: number;
};

/**
 * Describes the message pg_query.ParamRef.
 * Use `create(ParamRefSchema)` to create a new message.
 */
export const ParamRefSchema: GenMessage<ParamRef> = /*@__PURE__*/
  messageDesc(file_pg_query, 179);

/**
 * @generated from message pg_query.A_Const
 */
export type A_Const = Message<"pg_query.A_Const"> & {
  /**
   * @generated from field: pg_query.Node val = 1;
   */
  val?: Node;

  /**
   * @generated from field: int32 location = 2;
   */
  location: number;
};

/**
 * Describes the message pg_query.A_Const.
 * Use `create(A_ConstSchema)` to create a new message.
 */
export const A_ConstSchema: GenMessage<A_Const> = /*@__PURE__*/
  messageDesc(file_pg_query, 180);

/**
 * @generated from message pg_query.FuncCall
 */
export type FuncCall = Message<"pg_query.FuncCall"> & {
  /**
   * @generated from field: repeated pg_query.Node funcname = 1;
   */
  funcname: Node[];

  /**
   * @generated from field: repeated pg_query.Node args = 2;
   */
  args: Node[];

  /**
   * @generated from field: repeated pg_query.Node agg_order = 3 [json_name = "agg_order"];
   */
  aggOrder: Node[];

  /**
   * @generated from field: pg_query.Node agg_filter = 4 [json_name = "agg_filter"];
   */
  aggFilter?: Node;

  /**
   * @generated from field: bool agg_within_group = 5 [json_name = "agg_within_group"];
   */
  aggWithinGroup: boolean;

  /**
   * @generated from field: bool agg_star = 6 [json_name = "agg_star"];
   */
  aggStar: boolean;

  /**
   * @generated from field: bool agg_distinct = 7 [json_name = "agg_distinct"];
   */
  aggDistinct: boolean;

  /**
   * @generated from field: bool func_variadic = 8 [json_name = "func_variadic"];
   */
  funcVariadic: boolean;

  /**
   * @generated from field: pg_query.WindowDef over = 9;
   */
  over?: WindowDef;

  /**
   * @generated from field: int32 location = 10;
   */
  location: number;
};

/**
 * Describes the message pg_query.FuncCall.
 * Use `create(FuncCallSchema)` to create a new message.
 */
export const FuncCallSchema: GenMessage<FuncCall> = /*@__PURE__*/
  messageDesc(file_pg_query, 181);

/**
 * @generated from message pg_query.A_Star
 */
export type A_Star = Message<"pg_query.A_Star"> & {
};

/**
 * Describes the message pg_query.A_Star.
 * Use `create(A_StarSchema)` to create a new message.
 */
export const A_StarSchema: GenMessage<A_Star> = /*@__PURE__*/
  messageDesc(file_pg_query, 182);

/**
 * @generated from message pg_query.A_Indices
 */
export type A_Indices = Message<"pg_query.A_Indices"> & {
  /**
   * @generated from field: bool is_slice = 1 [json_name = "is_slice"];
   */
  isSlice: boolean;

  /**
   * @generated from field: pg_query.Node lidx = 2;
   */
  lidx?: Node;

  /**
   * @generated from field: pg_query.Node uidx = 3;
   */
  uidx?: Node;
};

/**
 * Describes the message pg_query.A_Indices.
 * Use `create(A_IndicesSchema)` to create a new message.
 */
export const A_IndicesSchema: GenMessage<A_Indices> = /*@__PURE__*/
  messageDesc(file_pg_query, 183);

/**
 * @generated from message pg_query.A_Indirection
 */
export type A_Indirection = Message<"pg_query.A_Indirection"> & {
  /**
   * @generated from field: pg_query.Node arg = 1;
   */
  arg?: Node;

  /**
   * @generated from field: repeated pg_query.Node indirection = 2;
   */
  indirection: Node[];
};

/**
 * Describes the message pg_query.A_Indirection.
 * Use `create(A_IndirectionSchema)` to create a new message.
 */
export const A_IndirectionSchema: GenMessage<A_Indirection> = /*@__PURE__*/
  messageDesc(file_pg_query, 184);

/**
 * @generated from message pg_query.A_ArrayExpr
 */
export type A_ArrayExpr = Message<"pg_query.A_ArrayExpr"> & {
  /**
   * @generated from field: repeated pg_query.Node elements = 1;
   */
  elements: Node[];

  /**
   * @generated from field: int32 location = 2;
   */
  location: number;
};

/**
 * Describes the message pg_query.A_ArrayExpr.
 * Use `create(A_ArrayExprSchema)` to create a new message.
 */
export const A_ArrayExprSchema: GenMessage<A_ArrayExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 185);

/**
 * @generated from message pg_query.ResTarget
 */
export type ResTarget = Message<"pg_query.ResTarget"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated pg_query.Node indirection = 2;
   */
  indirection: Node[];

  /**
   * @generated from field: pg_query.Node val = 3;
   */
  val?: Node;

  /**
   * @generated from field: int32 location = 4;
   */
  location: number;
};

/**
 * Describes the message pg_query.ResTarget.
 * Use `create(ResTargetSchema)` to create a new message.
 */
export const ResTargetSchema: GenMessage<ResTarget> = /*@__PURE__*/
  messageDesc(file_pg_query, 186);

/**
 * @generated from message pg_query.MultiAssignRef
 */
export type MultiAssignRef = Message<"pg_query.MultiAssignRef"> & {
  /**
   * @generated from field: pg_query.Node source = 1;
   */
  source?: Node;

  /**
   * @generated from field: int32 colno = 2;
   */
  colno: number;

  /**
   * @generated from field: int32 ncolumns = 3;
   */
  ncolumns: number;
};

/**
 * Describes the message pg_query.MultiAssignRef.
 * Use `create(MultiAssignRefSchema)` to create a new message.
 */
export const MultiAssignRefSchema: GenMessage<MultiAssignRef> = /*@__PURE__*/
  messageDesc(file_pg_query, 187);

/**
 * @generated from message pg_query.TypeCast
 */
export type TypeCast = Message<"pg_query.TypeCast"> & {
  /**
   * @generated from field: pg_query.Node arg = 1;
   */
  arg?: Node;

  /**
   * @generated from field: pg_query.TypeName type_name = 2;
   */
  typeName?: TypeName;

  /**
   * @generated from field: int32 location = 3;
   */
  location: number;
};

/**
 * Describes the message pg_query.TypeCast.
 * Use `create(TypeCastSchema)` to create a new message.
 */
export const TypeCastSchema: GenMessage<TypeCast> = /*@__PURE__*/
  messageDesc(file_pg_query, 188);

/**
 * @generated from message pg_query.CollateClause
 */
export type CollateClause = Message<"pg_query.CollateClause"> & {
  /**
   * @generated from field: pg_query.Node arg = 1;
   */
  arg?: Node;

  /**
   * @generated from field: repeated pg_query.Node collname = 2;
   */
  collname: Node[];

  /**
   * @generated from field: int32 location = 3;
   */
  location: number;
};

/**
 * Describes the message pg_query.CollateClause.
 * Use `create(CollateClauseSchema)` to create a new message.
 */
export const CollateClauseSchema: GenMessage<CollateClause> = /*@__PURE__*/
  messageDesc(file_pg_query, 189);

/**
 * @generated from message pg_query.SortBy
 */
export type SortBy = Message<"pg_query.SortBy"> & {
  /**
   * @generated from field: pg_query.Node node = 1;
   */
  node?: Node;

  /**
   * @generated from field: pg_query.SortByDir sortby_dir = 2 [json_name = "sortby_dir"];
   */
  sortbyDir: SortByDir;

  /**
   * @generated from field: pg_query.SortByNulls sortby_nulls = 3 [json_name = "sortby_nulls"];
   */
  sortbyNulls: SortByNulls;

  /**
   * @generated from field: repeated pg_query.Node use_op = 4;
   */
  useOp: Node[];

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * Describes the message pg_query.SortBy.
 * Use `create(SortBySchema)` to create a new message.
 */
export const SortBySchema: GenMessage<SortBy> = /*@__PURE__*/
  messageDesc(file_pg_query, 190);

/**
 * @generated from message pg_query.WindowDef
 */
export type WindowDef = Message<"pg_query.WindowDef"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string refname = 2;
   */
  refname: string;

  /**
   * @generated from field: repeated pg_query.Node partition_clause = 3;
   */
  partitionClause: Node[];

  /**
   * @generated from field: repeated pg_query.Node order_clause = 4;
   */
  orderClause: Node[];

  /**
   * @generated from field: int32 frame_options = 5;
   */
  frameOptions: number;

  /**
   * @generated from field: pg_query.Node start_offset = 6;
   */
  startOffset?: Node;

  /**
   * @generated from field: pg_query.Node end_offset = 7;
   */
  endOffset?: Node;

  /**
   * @generated from field: int32 location = 8;
   */
  location: number;
};

/**
 * Describes the message pg_query.WindowDef.
 * Use `create(WindowDefSchema)` to create a new message.
 */
export const WindowDefSchema: GenMessage<WindowDef> = /*@__PURE__*/
  messageDesc(file_pg_query, 191);

/**
 * @generated from message pg_query.RangeSubselect
 */
export type RangeSubselect = Message<"pg_query.RangeSubselect"> & {
  /**
   * @generated from field: bool lateral = 1;
   */
  lateral: boolean;

  /**
   * @generated from field: pg_query.Node subquery = 2;
   */
  subquery?: Node;

  /**
   * @generated from field: pg_query.Alias alias = 3;
   */
  alias?: Alias;
};

/**
 * Describes the message pg_query.RangeSubselect.
 * Use `create(RangeSubselectSchema)` to create a new message.
 */
export const RangeSubselectSchema: GenMessage<RangeSubselect> = /*@__PURE__*/
  messageDesc(file_pg_query, 192);

/**
 * @generated from message pg_query.RangeFunction
 */
export type RangeFunction = Message<"pg_query.RangeFunction"> & {
  /**
   * @generated from field: bool lateral = 1;
   */
  lateral: boolean;

  /**
   * @generated from field: bool ordinality = 2;
   */
  ordinality: boolean;

  /**
   * @generated from field: bool is_rowsfrom = 3 [json_name = "is_rowsfrom"];
   */
  isRowsfrom: boolean;

  /**
   * @generated from field: repeated pg_query.Node functions = 4;
   */
  functions: Node[];

  /**
   * @generated from field: pg_query.Alias alias = 5;
   */
  alias?: Alias;

  /**
   * @generated from field: repeated pg_query.Node coldeflist = 6;
   */
  coldeflist: Node[];
};

/**
 * Describes the message pg_query.RangeFunction.
 * Use `create(RangeFunctionSchema)` to create a new message.
 */
export const RangeFunctionSchema: GenMessage<RangeFunction> = /*@__PURE__*/
  messageDesc(file_pg_query, 193);

/**
 * @generated from message pg_query.RangeTableSample
 */
export type RangeTableSample = Message<"pg_query.RangeTableSample"> & {
  /**
   * @generated from field: pg_query.Node relation = 1;
   */
  relation?: Node;

  /**
   * @generated from field: repeated pg_query.Node method = 2;
   */
  method: Node[];

  /**
   * @generated from field: repeated pg_query.Node args = 3;
   */
  args: Node[];

  /**
   * @generated from field: pg_query.Node repeatable = 4;
   */
  repeatable?: Node;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * Describes the message pg_query.RangeTableSample.
 * Use `create(RangeTableSampleSchema)` to create a new message.
 */
export const RangeTableSampleSchema: GenMessage<RangeTableSample> = /*@__PURE__*/
  messageDesc(file_pg_query, 194);

/**
 * @generated from message pg_query.RangeTableFunc
 */
export type RangeTableFunc = Message<"pg_query.RangeTableFunc"> & {
  /**
   * @generated from field: bool lateral = 1;
   */
  lateral: boolean;

  /**
   * @generated from field: pg_query.Node docexpr = 2;
   */
  docexpr?: Node;

  /**
   * @generated from field: pg_query.Node rowexpr = 3;
   */
  rowexpr?: Node;

  /**
   * @generated from field: repeated pg_query.Node namespaces = 4;
   */
  namespaces: Node[];

  /**
   * @generated from field: repeated pg_query.Node columns = 5;
   */
  columns: Node[];

  /**
   * @generated from field: pg_query.Alias alias = 6;
   */
  alias?: Alias;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * Describes the message pg_query.RangeTableFunc.
 * Use `create(RangeTableFuncSchema)` to create a new message.
 */
export const RangeTableFuncSchema: GenMessage<RangeTableFunc> = /*@__PURE__*/
  messageDesc(file_pg_query, 195);

/**
 * @generated from message pg_query.RangeTableFuncCol
 */
export type RangeTableFuncCol = Message<"pg_query.RangeTableFuncCol"> & {
  /**
   * @generated from field: string colname = 1;
   */
  colname: string;

  /**
   * @generated from field: pg_query.TypeName type_name = 2;
   */
  typeName?: TypeName;

  /**
   * @generated from field: bool for_ordinality = 3 [json_name = "for_ordinality"];
   */
  forOrdinality: boolean;

  /**
   * @generated from field: bool is_not_null = 4 [json_name = "is_not_null"];
   */
  isNotNull: boolean;

  /**
   * @generated from field: pg_query.Node colexpr = 5;
   */
  colexpr?: Node;

  /**
   * @generated from field: pg_query.Node coldefexpr = 6;
   */
  coldefexpr?: Node;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * Describes the message pg_query.RangeTableFuncCol.
 * Use `create(RangeTableFuncColSchema)` to create a new message.
 */
export const RangeTableFuncColSchema: GenMessage<RangeTableFuncCol> = /*@__PURE__*/
  messageDesc(file_pg_query, 196);

/**
 * @generated from message pg_query.TypeName
 */
export type TypeName = Message<"pg_query.TypeName"> & {
  /**
   * @generated from field: repeated pg_query.Node names = 1;
   */
  names: Node[];

  /**
   * @generated from field: uint32 type_oid = 2;
   */
  typeOid: number;

  /**
   * @generated from field: bool setof = 3;
   */
  setof: boolean;

  /**
   * @generated from field: bool pct_type = 4 [json_name = "pct_type"];
   */
  pctType: boolean;

  /**
   * @generated from field: repeated pg_query.Node typmods = 5;
   */
  typmods: Node[];

  /**
   * @generated from field: int32 typemod = 6;
   */
  typemod: number;

  /**
   * @generated from field: repeated pg_query.Node array_bounds = 7;
   */
  arrayBounds: Node[];

  /**
   * @generated from field: int32 location = 8;
   */
  location: number;
};

/**
 * Describes the message pg_query.TypeName.
 * Use `create(TypeNameSchema)` to create a new message.
 */
export const TypeNameSchema: GenMessage<TypeName> = /*@__PURE__*/
  messageDesc(file_pg_query, 197);

/**
 * @generated from message pg_query.ColumnDef
 */
export type ColumnDef = Message<"pg_query.ColumnDef"> & {
  /**
   * @generated from field: string colname = 1;
   */
  colname: string;

  /**
   * @generated from field: pg_query.TypeName type_name = 2;
   */
  typeName?: TypeName;

  /**
   * @generated from field: int32 inhcount = 3;
   */
  inhcount: number;

  /**
   * @generated from field: bool is_local = 4 [json_name = "is_local"];
   */
  isLocal: boolean;

  /**
   * @generated from field: bool is_not_null = 5 [json_name = "is_not_null"];
   */
  isNotNull: boolean;

  /**
   * @generated from field: bool is_from_type = 6 [json_name = "is_from_type"];
   */
  isFromType: boolean;

  /**
   * @generated from field: string storage = 7;
   */
  storage: string;

  /**
   * @generated from field: pg_query.Node raw_default = 8 [json_name = "raw_default"];
   */
  rawDefault?: Node;

  /**
   * @generated from field: pg_query.Node cooked_default = 9 [json_name = "cooked_default"];
   */
  cookedDefault?: Node;

  /**
   * @generated from field: string identity = 10;
   */
  identity: string;

  /**
   * @generated from field: pg_query.RangeVar identity_sequence = 11;
   */
  identitySequence?: RangeVar;

  /**
   * @generated from field: string generated = 12;
   */
  generated: string;

  /**
   * @generated from field: pg_query.CollateClause coll_clause = 13;
   */
  collClause?: CollateClause;

  /**
   * @generated from field: uint32 coll_oid = 14;
   */
  collOid: number;

  /**
   * @generated from field: repeated pg_query.Node constraints = 15;
   */
  constraints: Node[];

  /**
   * @generated from field: repeated pg_query.Node fdwoptions = 16;
   */
  fdwoptions: Node[];

  /**
   * @generated from field: int32 location = 17;
   */
  location: number;
};

/**
 * Describes the message pg_query.ColumnDef.
 * Use `create(ColumnDefSchema)` to create a new message.
 */
export const ColumnDefSchema: GenMessage<ColumnDef> = /*@__PURE__*/
  messageDesc(file_pg_query, 198);

/**
 * @generated from message pg_query.IndexElem
 */
export type IndexElem = Message<"pg_query.IndexElem"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: Node;

  /**
   * @generated from field: string indexcolname = 3;
   */
  indexcolname: string;

  /**
   * @generated from field: repeated pg_query.Node collation = 4;
   */
  collation: Node[];

  /**
   * @generated from field: repeated pg_query.Node opclass = 5;
   */
  opclass: Node[];

  /**
   * @generated from field: repeated pg_query.Node opclassopts = 6;
   */
  opclassopts: Node[];

  /**
   * @generated from field: pg_query.SortByDir ordering = 7;
   */
  ordering: SortByDir;

  /**
   * @generated from field: pg_query.SortByNulls nulls_ordering = 8 [json_name = "nulls_ordering"];
   */
  nullsOrdering: SortByNulls;
};

/**
 * Describes the message pg_query.IndexElem.
 * Use `create(IndexElemSchema)` to create a new message.
 */
export const IndexElemSchema: GenMessage<IndexElem> = /*@__PURE__*/
  messageDesc(file_pg_query, 199);

/**
 * @generated from message pg_query.Constraint
 */
export type Constraint = Message<"pg_query.Constraint"> & {
  /**
   * @generated from field: pg_query.ConstrType contype = 1;
   */
  contype: ConstrType;

  /**
   * @generated from field: string conname = 2;
   */
  conname: string;

  /**
   * @generated from field: bool deferrable = 3;
   */
  deferrable: boolean;

  /**
   * @generated from field: bool initdeferred = 4;
   */
  initdeferred: boolean;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;

  /**
   * @generated from field: bool is_no_inherit = 6 [json_name = "is_no_inherit"];
   */
  isNoInherit: boolean;

  /**
   * @generated from field: pg_query.Node raw_expr = 7 [json_name = "raw_expr"];
   */
  rawExpr?: Node;

  /**
   * @generated from field: string cooked_expr = 8 [json_name = "cooked_expr"];
   */
  cookedExpr: string;

  /**
   * @generated from field: string generated_when = 9 [json_name = "generated_when"];
   */
  generatedWhen: string;

  /**
   * @generated from field: repeated pg_query.Node keys = 10;
   */
  keys: Node[];

  /**
   * @generated from field: repeated pg_query.Node including = 11;
   */
  including: Node[];

  /**
   * @generated from field: repeated pg_query.Node exclusions = 12;
   */
  exclusions: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 13;
   */
  options: Node[];

  /**
   * @generated from field: string indexname = 14;
   */
  indexname: string;

  /**
   * @generated from field: string indexspace = 15;
   */
  indexspace: string;

  /**
   * @generated from field: bool reset_default_tblspc = 16 [json_name = "reset_default_tblspc"];
   */
  resetDefaultTblspc: boolean;

  /**
   * @generated from field: string access_method = 17 [json_name = "access_method"];
   */
  accessMethod: string;

  /**
   * @generated from field: pg_query.Node where_clause = 18 [json_name = "where_clause"];
   */
  whereClause?: Node;

  /**
   * @generated from field: pg_query.RangeVar pktable = 19;
   */
  pktable?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node fk_attrs = 20 [json_name = "fk_attrs"];
   */
  fkAttrs: Node[];

  /**
   * @generated from field: repeated pg_query.Node pk_attrs = 21 [json_name = "pk_attrs"];
   */
  pkAttrs: Node[];

  /**
   * @generated from field: string fk_matchtype = 22 [json_name = "fk_matchtype"];
   */
  fkMatchtype: string;

  /**
   * @generated from field: string fk_upd_action = 23 [json_name = "fk_upd_action"];
   */
  fkUpdAction: string;

  /**
   * @generated from field: string fk_del_action = 24 [json_name = "fk_del_action"];
   */
  fkDelAction: string;

  /**
   * @generated from field: repeated pg_query.Node old_conpfeqop = 25 [json_name = "old_conpfeqop"];
   */
  oldConpfeqop: Node[];

  /**
   * @generated from field: uint32 old_pktable_oid = 26 [json_name = "old_pktable_oid"];
   */
  oldPktableOid: number;

  /**
   * @generated from field: bool skip_validation = 27 [json_name = "skip_validation"];
   */
  skipValidation: boolean;

  /**
   * @generated from field: bool initially_valid = 28 [json_name = "initially_valid"];
   */
  initiallyValid: boolean;
};

/**
 * Describes the message pg_query.Constraint.
 * Use `create(ConstraintSchema)` to create a new message.
 */
export const ConstraintSchema: GenMessage<Constraint> = /*@__PURE__*/
  messageDesc(file_pg_query, 200);

/**
 * @generated from message pg_query.DefElem
 */
export type DefElem = Message<"pg_query.DefElem"> & {
  /**
   * @generated from field: string defnamespace = 1;
   */
  defnamespace: string;

  /**
   * @generated from field: string defname = 2;
   */
  defname: string;

  /**
   * @generated from field: pg_query.Node arg = 3;
   */
  arg?: Node;

  /**
   * @generated from field: pg_query.DefElemAction defaction = 4;
   */
  defaction: DefElemAction;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * Describes the message pg_query.DefElem.
 * Use `create(DefElemSchema)` to create a new message.
 */
export const DefElemSchema: GenMessage<DefElem> = /*@__PURE__*/
  messageDesc(file_pg_query, 201);

/**
 * @generated from message pg_query.RangeTblEntry
 */
export type RangeTblEntry = Message<"pg_query.RangeTblEntry"> & {
  /**
   * @generated from field: pg_query.RTEKind rtekind = 1;
   */
  rtekind: RTEKind;

  /**
   * @generated from field: uint32 relid = 2;
   */
  relid: number;

  /**
   * @generated from field: string relkind = 3;
   */
  relkind: string;

  /**
   * @generated from field: int32 rellockmode = 4;
   */
  rellockmode: number;

  /**
   * @generated from field: pg_query.TableSampleClause tablesample = 5;
   */
  tablesample?: TableSampleClause;

  /**
   * @generated from field: pg_query.Query subquery = 6;
   */
  subquery?: Query;

  /**
   * @generated from field: bool security_barrier = 7 [json_name = "security_barrier"];
   */
  securityBarrier: boolean;

  /**
   * @generated from field: pg_query.JoinType jointype = 8;
   */
  jointype: JoinType;

  /**
   * @generated from field: int32 joinmergedcols = 9;
   */
  joinmergedcols: number;

  /**
   * @generated from field: repeated pg_query.Node joinaliasvars = 10;
   */
  joinaliasvars: Node[];

  /**
   * @generated from field: repeated pg_query.Node joinleftcols = 11;
   */
  joinleftcols: Node[];

  /**
   * @generated from field: repeated pg_query.Node joinrightcols = 12;
   */
  joinrightcols: Node[];

  /**
   * @generated from field: repeated pg_query.Node functions = 13;
   */
  functions: Node[];

  /**
   * @generated from field: bool funcordinality = 14;
   */
  funcordinality: boolean;

  /**
   * @generated from field: pg_query.TableFunc tablefunc = 15;
   */
  tablefunc?: TableFunc;

  /**
   * @generated from field: repeated pg_query.Node values_lists = 16 [json_name = "values_lists"];
   */
  valuesLists: Node[];

  /**
   * @generated from field: string ctename = 17;
   */
  ctename: string;

  /**
   * @generated from field: uint32 ctelevelsup = 18;
   */
  ctelevelsup: number;

  /**
   * @generated from field: bool self_reference = 19 [json_name = "self_reference"];
   */
  selfReference: boolean;

  /**
   * @generated from field: repeated pg_query.Node coltypes = 20;
   */
  coltypes: Node[];

  /**
   * @generated from field: repeated pg_query.Node coltypmods = 21;
   */
  coltypmods: Node[];

  /**
   * @generated from field: repeated pg_query.Node colcollations = 22;
   */
  colcollations: Node[];

  /**
   * @generated from field: string enrname = 23;
   */
  enrname: string;

  /**
   * @generated from field: double enrtuples = 24;
   */
  enrtuples: number;

  /**
   * @generated from field: pg_query.Alias alias = 25;
   */
  alias?: Alias;

  /**
   * @generated from field: pg_query.Alias eref = 26;
   */
  eref?: Alias;

  /**
   * @generated from field: bool lateral = 27;
   */
  lateral: boolean;

  /**
   * @generated from field: bool inh = 28;
   */
  inh: boolean;

  /**
   * @generated from field: bool in_from_cl = 29;
   */
  inFromCl: boolean;

  /**
   * @generated from field: uint32 required_perms = 30;
   */
  requiredPerms: number;

  /**
   * @generated from field: uint32 check_as_user = 31;
   */
  checkAsUser: number;

  /**
   * @generated from field: repeated uint64 selected_cols = 32;
   */
  selectedCols: bigint[];

  /**
   * @generated from field: repeated uint64 inserted_cols = 33;
   */
  insertedCols: bigint[];

  /**
   * @generated from field: repeated uint64 updated_cols = 34;
   */
  updatedCols: bigint[];

  /**
   * @generated from field: repeated uint64 extra_updated_cols = 35;
   */
  extraUpdatedCols: bigint[];

  /**
   * @generated from field: repeated pg_query.Node security_quals = 36;
   */
  securityQuals: Node[];
};

/**
 * Describes the message pg_query.RangeTblEntry.
 * Use `create(RangeTblEntrySchema)` to create a new message.
 */
export const RangeTblEntrySchema: GenMessage<RangeTblEntry> = /*@__PURE__*/
  messageDesc(file_pg_query, 202);

/**
 * @generated from message pg_query.RangeTblFunction
 */
export type RangeTblFunction = Message<"pg_query.RangeTblFunction"> & {
  /**
   * @generated from field: pg_query.Node funcexpr = 1;
   */
  funcexpr?: Node;

  /**
   * @generated from field: int32 funccolcount = 2;
   */
  funccolcount: number;

  /**
   * @generated from field: repeated pg_query.Node funccolnames = 3;
   */
  funccolnames: Node[];

  /**
   * @generated from field: repeated pg_query.Node funccoltypes = 4;
   */
  funccoltypes: Node[];

  /**
   * @generated from field: repeated pg_query.Node funccoltypmods = 5;
   */
  funccoltypmods: Node[];

  /**
   * @generated from field: repeated pg_query.Node funccolcollations = 6;
   */
  funccolcollations: Node[];

  /**
   * @generated from field: repeated uint64 funcparams = 7;
   */
  funcparams: bigint[];
};

/**
 * Describes the message pg_query.RangeTblFunction.
 * Use `create(RangeTblFunctionSchema)` to create a new message.
 */
export const RangeTblFunctionSchema: GenMessage<RangeTblFunction> = /*@__PURE__*/
  messageDesc(file_pg_query, 203);

/**
 * @generated from message pg_query.TableSampleClause
 */
export type TableSampleClause = Message<"pg_query.TableSampleClause"> & {
  /**
   * @generated from field: uint32 tsmhandler = 1;
   */
  tsmhandler: number;

  /**
   * @generated from field: repeated pg_query.Node args = 2;
   */
  args: Node[];

  /**
   * @generated from field: pg_query.Node repeatable = 3;
   */
  repeatable?: Node;
};

/**
 * Describes the message pg_query.TableSampleClause.
 * Use `create(TableSampleClauseSchema)` to create a new message.
 */
export const TableSampleClauseSchema: GenMessage<TableSampleClause> = /*@__PURE__*/
  messageDesc(file_pg_query, 204);

/**
 * @generated from message pg_query.WithCheckOption
 */
export type WithCheckOption = Message<"pg_query.WithCheckOption"> & {
  /**
   * @generated from field: pg_query.WCOKind kind = 1;
   */
  kind: WCOKind;

  /**
   * @generated from field: string relname = 2;
   */
  relname: string;

  /**
   * @generated from field: string polname = 3;
   */
  polname: string;

  /**
   * @generated from field: pg_query.Node qual = 4;
   */
  qual?: Node;

  /**
   * @generated from field: bool cascaded = 5;
   */
  cascaded: boolean;
};

/**
 * Describes the message pg_query.WithCheckOption.
 * Use `create(WithCheckOptionSchema)` to create a new message.
 */
export const WithCheckOptionSchema: GenMessage<WithCheckOption> = /*@__PURE__*/
  messageDesc(file_pg_query, 205);

/**
 * @generated from message pg_query.SortGroupClause
 */
export type SortGroupClause = Message<"pg_query.SortGroupClause"> & {
  /**
   * @generated from field: uint32 tle_sort_group_ref = 1;
   */
  tleSortGroupRef: number;

  /**
   * @generated from field: uint32 eqop = 2;
   */
  eqop: number;

  /**
   * @generated from field: uint32 sortop = 3;
   */
  sortop: number;

  /**
   * @generated from field: bool nulls_first = 4 [json_name = "nulls_first"];
   */
  nullsFirst: boolean;

  /**
   * @generated from field: bool hashable = 5;
   */
  hashable: boolean;
};

/**
 * Describes the message pg_query.SortGroupClause.
 * Use `create(SortGroupClauseSchema)` to create a new message.
 */
export const SortGroupClauseSchema: GenMessage<SortGroupClause> = /*@__PURE__*/
  messageDesc(file_pg_query, 206);

/**
 * @generated from message pg_query.GroupingSet
 */
export type GroupingSet = Message<"pg_query.GroupingSet"> & {
  /**
   * @generated from field: pg_query.GroupingSetKind kind = 1;
   */
  kind: GroupingSetKind;

  /**
   * @generated from field: repeated pg_query.Node content = 2;
   */
  content: Node[];

  /**
   * @generated from field: int32 location = 3;
   */
  location: number;
};

/**
 * Describes the message pg_query.GroupingSet.
 * Use `create(GroupingSetSchema)` to create a new message.
 */
export const GroupingSetSchema: GenMessage<GroupingSet> = /*@__PURE__*/
  messageDesc(file_pg_query, 207);

/**
 * @generated from message pg_query.WindowClause
 */
export type WindowClause = Message<"pg_query.WindowClause"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string refname = 2;
   */
  refname: string;

  /**
   * @generated from field: repeated pg_query.Node partition_clause = 3;
   */
  partitionClause: Node[];

  /**
   * @generated from field: repeated pg_query.Node order_clause = 4;
   */
  orderClause: Node[];

  /**
   * @generated from field: int32 frame_options = 5;
   */
  frameOptions: number;

  /**
   * @generated from field: pg_query.Node start_offset = 6;
   */
  startOffset?: Node;

  /**
   * @generated from field: pg_query.Node end_offset = 7;
   */
  endOffset?: Node;

  /**
   * @generated from field: uint32 start_in_range_func = 8;
   */
  startInRangeFunc: number;

  /**
   * @generated from field: uint32 end_in_range_func = 9;
   */
  endInRangeFunc: number;

  /**
   * @generated from field: uint32 in_range_coll = 10;
   */
  inRangeColl: number;

  /**
   * @generated from field: bool in_range_asc = 11;
   */
  inRangeAsc: boolean;

  /**
   * @generated from field: bool in_range_nulls_first = 12;
   */
  inRangeNullsFirst: boolean;

  /**
   * @generated from field: uint32 winref = 13;
   */
  winref: number;

  /**
   * @generated from field: bool copied_order = 14;
   */
  copiedOrder: boolean;
};

/**
 * Describes the message pg_query.WindowClause.
 * Use `create(WindowClauseSchema)` to create a new message.
 */
export const WindowClauseSchema: GenMessage<WindowClause> = /*@__PURE__*/
  messageDesc(file_pg_query, 208);

/**
 * @generated from message pg_query.ObjectWithArgs
 */
export type ObjectWithArgs = Message<"pg_query.ObjectWithArgs"> & {
  /**
   * @generated from field: repeated pg_query.Node objname = 1;
   */
  objname: Node[];

  /**
   * @generated from field: repeated pg_query.Node objargs = 2;
   */
  objargs: Node[];

  /**
   * @generated from field: bool args_unspecified = 3 [json_name = "args_unspecified"];
   */
  argsUnspecified: boolean;
};

/**
 * Describes the message pg_query.ObjectWithArgs.
 * Use `create(ObjectWithArgsSchema)` to create a new message.
 */
export const ObjectWithArgsSchema: GenMessage<ObjectWithArgs> = /*@__PURE__*/
  messageDesc(file_pg_query, 209);

/**
 * @generated from message pg_query.AccessPriv
 */
export type AccessPriv = Message<"pg_query.AccessPriv"> & {
  /**
   * @generated from field: string priv_name = 1 [json_name = "priv_name"];
   */
  privName: string;

  /**
   * @generated from field: repeated pg_query.Node cols = 2;
   */
  cols: Node[];
};

/**
 * Describes the message pg_query.AccessPriv.
 * Use `create(AccessPrivSchema)` to create a new message.
 */
export const AccessPrivSchema: GenMessage<AccessPriv> = /*@__PURE__*/
  messageDesc(file_pg_query, 210);

/**
 * @generated from message pg_query.CreateOpClassItem
 */
export type CreateOpClassItem = Message<"pg_query.CreateOpClassItem"> & {
  /**
   * @generated from field: int32 itemtype = 1;
   */
  itemtype: number;

  /**
   * @generated from field: pg_query.ObjectWithArgs name = 2;
   */
  name?: ObjectWithArgs;

  /**
   * @generated from field: int32 number = 3;
   */
  number: number;

  /**
   * @generated from field: repeated pg_query.Node order_family = 4 [json_name = "order_family"];
   */
  orderFamily: Node[];

  /**
   * @generated from field: repeated pg_query.Node class_args = 5 [json_name = "class_args"];
   */
  classArgs: Node[];

  /**
   * @generated from field: pg_query.TypeName storedtype = 6;
   */
  storedtype?: TypeName;
};

/**
 * Describes the message pg_query.CreateOpClassItem.
 * Use `create(CreateOpClassItemSchema)` to create a new message.
 */
export const CreateOpClassItemSchema: GenMessage<CreateOpClassItem> = /*@__PURE__*/
  messageDesc(file_pg_query, 211);

/**
 * @generated from message pg_query.TableLikeClause
 */
export type TableLikeClause = Message<"pg_query.TableLikeClause"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: uint32 options = 2;
   */
  options: number;

  /**
   * @generated from field: uint32 relation_oid = 3;
   */
  relationOid: number;
};

/**
 * Describes the message pg_query.TableLikeClause.
 * Use `create(TableLikeClauseSchema)` to create a new message.
 */
export const TableLikeClauseSchema: GenMessage<TableLikeClause> = /*@__PURE__*/
  messageDesc(file_pg_query, 212);

/**
 * @generated from message pg_query.FunctionParameter
 */
export type FunctionParameter = Message<"pg_query.FunctionParameter"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: pg_query.TypeName arg_type = 2;
   */
  argType?: TypeName;

  /**
   * @generated from field: pg_query.FunctionParameterMode mode = 3;
   */
  mode: FunctionParameterMode;

  /**
   * @generated from field: pg_query.Node defexpr = 4;
   */
  defexpr?: Node;
};

/**
 * Describes the message pg_query.FunctionParameter.
 * Use `create(FunctionParameterSchema)` to create a new message.
 */
export const FunctionParameterSchema: GenMessage<FunctionParameter> = /*@__PURE__*/
  messageDesc(file_pg_query, 213);

/**
 * @generated from message pg_query.LockingClause
 */
export type LockingClause = Message<"pg_query.LockingClause"> & {
  /**
   * @generated from field: repeated pg_query.Node locked_rels = 1;
   */
  lockedRels: Node[];

  /**
   * @generated from field: pg_query.LockClauseStrength strength = 2;
   */
  strength: LockClauseStrength;

  /**
   * @generated from field: pg_query.LockWaitPolicy wait_policy = 3;
   */
  waitPolicy: LockWaitPolicy;
};

/**
 * Describes the message pg_query.LockingClause.
 * Use `create(LockingClauseSchema)` to create a new message.
 */
export const LockingClauseSchema: GenMessage<LockingClause> = /*@__PURE__*/
  messageDesc(file_pg_query, 214);

/**
 * @generated from message pg_query.RowMarkClause
 */
export type RowMarkClause = Message<"pg_query.RowMarkClause"> & {
  /**
   * @generated from field: uint32 rti = 1;
   */
  rti: number;

  /**
   * @generated from field: pg_query.LockClauseStrength strength = 2;
   */
  strength: LockClauseStrength;

  /**
   * @generated from field: pg_query.LockWaitPolicy wait_policy = 3;
   */
  waitPolicy: LockWaitPolicy;

  /**
   * @generated from field: bool pushed_down = 4;
   */
  pushedDown: boolean;
};

/**
 * Describes the message pg_query.RowMarkClause.
 * Use `create(RowMarkClauseSchema)` to create a new message.
 */
export const RowMarkClauseSchema: GenMessage<RowMarkClause> = /*@__PURE__*/
  messageDesc(file_pg_query, 215);

/**
 * @generated from message pg_query.XmlSerialize
 */
export type XmlSerialize = Message<"pg_query.XmlSerialize"> & {
  /**
   * @generated from field: pg_query.XmlOptionType xmloption = 1;
   */
  xmloption: XmlOptionType;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: Node;

  /**
   * @generated from field: pg_query.TypeName type_name = 3;
   */
  typeName?: TypeName;

  /**
   * @generated from field: int32 location = 4;
   */
  location: number;
};

/**
 * Describes the message pg_query.XmlSerialize.
 * Use `create(XmlSerializeSchema)` to create a new message.
 */
export const XmlSerializeSchema: GenMessage<XmlSerialize> = /*@__PURE__*/
  messageDesc(file_pg_query, 216);

/**
 * @generated from message pg_query.WithClause
 */
export type WithClause = Message<"pg_query.WithClause"> & {
  /**
   * @generated from field: repeated pg_query.Node ctes = 1;
   */
  ctes: Node[];

  /**
   * @generated from field: bool recursive = 2;
   */
  recursive: boolean;

  /**
   * @generated from field: int32 location = 3;
   */
  location: number;
};

/**
 * Describes the message pg_query.WithClause.
 * Use `create(WithClauseSchema)` to create a new message.
 */
export const WithClauseSchema: GenMessage<WithClause> = /*@__PURE__*/
  messageDesc(file_pg_query, 217);

/**
 * @generated from message pg_query.InferClause
 */
export type InferClause = Message<"pg_query.InferClause"> & {
  /**
   * @generated from field: repeated pg_query.Node index_elems = 1;
   */
  indexElems: Node[];

  /**
   * @generated from field: pg_query.Node where_clause = 2;
   */
  whereClause?: Node;

  /**
   * @generated from field: string conname = 3;
   */
  conname: string;

  /**
   * @generated from field: int32 location = 4;
   */
  location: number;
};

/**
 * Describes the message pg_query.InferClause.
 * Use `create(InferClauseSchema)` to create a new message.
 */
export const InferClauseSchema: GenMessage<InferClause> = /*@__PURE__*/
  messageDesc(file_pg_query, 218);

/**
 * @generated from message pg_query.OnConflictClause
 */
export type OnConflictClause = Message<"pg_query.OnConflictClause"> & {
  /**
   * @generated from field: pg_query.OnConflictAction action = 1;
   */
  action: OnConflictAction;

  /**
   * @generated from field: pg_query.InferClause infer = 2;
   */
  infer?: InferClause;

  /**
   * @generated from field: repeated pg_query.Node target_list = 3;
   */
  targetList: Node[];

  /**
   * @generated from field: pg_query.Node where_clause = 4;
   */
  whereClause?: Node;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * Describes the message pg_query.OnConflictClause.
 * Use `create(OnConflictClauseSchema)` to create a new message.
 */
export const OnConflictClauseSchema: GenMessage<OnConflictClause> = /*@__PURE__*/
  messageDesc(file_pg_query, 219);

/**
 * @generated from message pg_query.CommonTableExpr
 */
export type CommonTableExpr = Message<"pg_query.CommonTableExpr"> & {
  /**
   * @generated from field: string ctename = 1;
   */
  ctename: string;

  /**
   * @generated from field: repeated pg_query.Node aliascolnames = 2;
   */
  aliascolnames: Node[];

  /**
   * @generated from field: pg_query.CTEMaterialize ctematerialized = 3;
   */
  ctematerialized: CTEMaterialize;

  /**
   * @generated from field: pg_query.Node ctequery = 4;
   */
  ctequery?: Node;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;

  /**
   * @generated from field: bool cterecursive = 6;
   */
  cterecursive: boolean;

  /**
   * @generated from field: int32 cterefcount = 7;
   */
  cterefcount: number;

  /**
   * @generated from field: repeated pg_query.Node ctecolnames = 8;
   */
  ctecolnames: Node[];

  /**
   * @generated from field: repeated pg_query.Node ctecoltypes = 9;
   */
  ctecoltypes: Node[];

  /**
   * @generated from field: repeated pg_query.Node ctecoltypmods = 10;
   */
  ctecoltypmods: Node[];

  /**
   * @generated from field: repeated pg_query.Node ctecolcollations = 11;
   */
  ctecolcollations: Node[];
};

/**
 * Describes the message pg_query.CommonTableExpr.
 * Use `create(CommonTableExprSchema)` to create a new message.
 */
export const CommonTableExprSchema: GenMessage<CommonTableExpr> = /*@__PURE__*/
  messageDesc(file_pg_query, 220);

/**
 * @generated from message pg_query.RoleSpec
 */
export type RoleSpec = Message<"pg_query.RoleSpec"> & {
  /**
   * @generated from field: pg_query.RoleSpecType roletype = 1;
   */
  roletype: RoleSpecType;

  /**
   * @generated from field: string rolename = 2;
   */
  rolename: string;

  /**
   * @generated from field: int32 location = 3;
   */
  location: number;
};

/**
 * Describes the message pg_query.RoleSpec.
 * Use `create(RoleSpecSchema)` to create a new message.
 */
export const RoleSpecSchema: GenMessage<RoleSpec> = /*@__PURE__*/
  messageDesc(file_pg_query, 221);

/**
 * @generated from message pg_query.TriggerTransition
 */
export type TriggerTransition = Message<"pg_query.TriggerTransition"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: bool is_new = 2;
   */
  isNew: boolean;

  /**
   * @generated from field: bool is_table = 3;
   */
  isTable: boolean;
};

/**
 * Describes the message pg_query.TriggerTransition.
 * Use `create(TriggerTransitionSchema)` to create a new message.
 */
export const TriggerTransitionSchema: GenMessage<TriggerTransition> = /*@__PURE__*/
  messageDesc(file_pg_query, 222);

/**
 * @generated from message pg_query.PartitionElem
 */
export type PartitionElem = Message<"pg_query.PartitionElem"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: Node;

  /**
   * @generated from field: repeated pg_query.Node collation = 3;
   */
  collation: Node[];

  /**
   * @generated from field: repeated pg_query.Node opclass = 4;
   */
  opclass: Node[];

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * Describes the message pg_query.PartitionElem.
 * Use `create(PartitionElemSchema)` to create a new message.
 */
export const PartitionElemSchema: GenMessage<PartitionElem> = /*@__PURE__*/
  messageDesc(file_pg_query, 223);

/**
 * @generated from message pg_query.PartitionSpec
 */
export type PartitionSpec = Message<"pg_query.PartitionSpec"> & {
  /**
   * @generated from field: string strategy = 1;
   */
  strategy: string;

  /**
   * @generated from field: repeated pg_query.Node part_params = 2;
   */
  partParams: Node[];

  /**
   * @generated from field: int32 location = 3;
   */
  location: number;
};

/**
 * Describes the message pg_query.PartitionSpec.
 * Use `create(PartitionSpecSchema)` to create a new message.
 */
export const PartitionSpecSchema: GenMessage<PartitionSpec> = /*@__PURE__*/
  messageDesc(file_pg_query, 224);

/**
 * @generated from message pg_query.PartitionBoundSpec
 */
export type PartitionBoundSpec = Message<"pg_query.PartitionBoundSpec"> & {
  /**
   * @generated from field: string strategy = 1;
   */
  strategy: string;

  /**
   * @generated from field: bool is_default = 2 [json_name = "is_default"];
   */
  isDefault: boolean;

  /**
   * @generated from field: int32 modulus = 3;
   */
  modulus: number;

  /**
   * @generated from field: int32 remainder = 4;
   */
  remainder: number;

  /**
   * @generated from field: repeated pg_query.Node listdatums = 5;
   */
  listdatums: Node[];

  /**
   * @generated from field: repeated pg_query.Node lowerdatums = 6;
   */
  lowerdatums: Node[];

  /**
   * @generated from field: repeated pg_query.Node upperdatums = 7;
   */
  upperdatums: Node[];

  /**
   * @generated from field: int32 location = 8;
   */
  location: number;
};

/**
 * Describes the message pg_query.PartitionBoundSpec.
 * Use `create(PartitionBoundSpecSchema)` to create a new message.
 */
export const PartitionBoundSpecSchema: GenMessage<PartitionBoundSpec> = /*@__PURE__*/
  messageDesc(file_pg_query, 225);

/**
 * @generated from message pg_query.PartitionRangeDatum
 */
export type PartitionRangeDatum = Message<"pg_query.PartitionRangeDatum"> & {
  /**
   * @generated from field: pg_query.PartitionRangeDatumKind kind = 1;
   */
  kind: PartitionRangeDatumKind;

  /**
   * @generated from field: pg_query.Node value = 2;
   */
  value?: Node;

  /**
   * @generated from field: int32 location = 3;
   */
  location: number;
};

/**
 * Describes the message pg_query.PartitionRangeDatum.
 * Use `create(PartitionRangeDatumSchema)` to create a new message.
 */
export const PartitionRangeDatumSchema: GenMessage<PartitionRangeDatum> = /*@__PURE__*/
  messageDesc(file_pg_query, 226);

/**
 * @generated from message pg_query.PartitionCmd
 */
export type PartitionCmd = Message<"pg_query.PartitionCmd"> & {
  /**
   * @generated from field: pg_query.RangeVar name = 1;
   */
  name?: RangeVar;

  /**
   * @generated from field: pg_query.PartitionBoundSpec bound = 2;
   */
  bound?: PartitionBoundSpec;
};

/**
 * Describes the message pg_query.PartitionCmd.
 * Use `create(PartitionCmdSchema)` to create a new message.
 */
export const PartitionCmdSchema: GenMessage<PartitionCmd> = /*@__PURE__*/
  messageDesc(file_pg_query, 227);

/**
 * @generated from message pg_query.VacuumRelation
 */
export type VacuumRelation = Message<"pg_query.VacuumRelation"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: uint32 oid = 2;
   */
  oid: number;

  /**
   * @generated from field: repeated pg_query.Node va_cols = 3 [json_name = "va_cols"];
   */
  vaCols: Node[];
};

/**
 * Describes the message pg_query.VacuumRelation.
 * Use `create(VacuumRelationSchema)` to create a new message.
 */
export const VacuumRelationSchema: GenMessage<VacuumRelation> = /*@__PURE__*/
  messageDesc(file_pg_query, 228);

/**
 * @generated from message pg_query.InlineCodeBlock
 */
export type InlineCodeBlock = Message<"pg_query.InlineCodeBlock"> & {
  /**
   * @generated from field: string source_text = 1 [json_name = "source_text"];
   */
  sourceText: string;

  /**
   * @generated from field: uint32 lang_oid = 2;
   */
  langOid: number;

  /**
   * @generated from field: bool lang_is_trusted = 3;
   */
  langIsTrusted: boolean;

  /**
   * @generated from field: bool atomic = 4;
   */
  atomic: boolean;
};

/**
 * Describes the message pg_query.InlineCodeBlock.
 * Use `create(InlineCodeBlockSchema)` to create a new message.
 */
export const InlineCodeBlockSchema: GenMessage<InlineCodeBlock> = /*@__PURE__*/
  messageDesc(file_pg_query, 229);

/**
 * @generated from message pg_query.CallContext
 */
export type CallContext = Message<"pg_query.CallContext"> & {
  /**
   * @generated from field: bool atomic = 1;
   */
  atomic: boolean;
};

/**
 * Describes the message pg_query.CallContext.
 * Use `create(CallContextSchema)` to create a new message.
 */
export const CallContextSchema: GenMessage<CallContext> = /*@__PURE__*/
  messageDesc(file_pg_query, 230);

/**
 * @generated from message pg_query.ScanToken
 */
export type ScanToken = Message<"pg_query.ScanToken"> & {
  /**
   * @generated from field: int32 start = 1;
   */
  start: number;

  /**
   * @generated from field: int32 end = 2;
   */
  end: number;

  /**
   * @generated from field: pg_query.Token token = 4;
   */
  token: Token;

  /**
   * @generated from field: pg_query.KeywordKind keyword_kind = 5;
   */
  keywordKind: KeywordKind;
};

/**
 * Describes the message pg_query.ScanToken.
 * Use `create(ScanTokenSchema)` to create a new message.
 */
export const ScanTokenSchema: GenMessage<ScanToken> = /*@__PURE__*/
  messageDesc(file_pg_query, 231);

/**
 * @generated from enum pg_query.OverridingKind
 */
export enum OverridingKind {
  /**
   * @generated from enum value: OVERRIDING_KIND_UNDEFINED = 0;
   */
  OVERRIDING_KIND_UNDEFINED = 0,

  /**
   * @generated from enum value: OVERRIDING_NOT_SET = 1;
   */
  OVERRIDING_NOT_SET = 1,

  /**
   * @generated from enum value: OVERRIDING_USER_VALUE = 2;
   */
  OVERRIDING_USER_VALUE = 2,

  /**
   * @generated from enum value: OVERRIDING_SYSTEM_VALUE = 3;
   */
  OVERRIDING_SYSTEM_VALUE = 3,
}

/**
 * Describes the enum pg_query.OverridingKind.
 */
export const OverridingKindSchema: GenEnum<OverridingKind> = /*@__PURE__*/
  enumDesc(file_pg_query, 0);

/**
 * @generated from enum pg_query.QuerySource
 */
export enum QuerySource {
  /**
   * @generated from enum value: QUERY_SOURCE_UNDEFINED = 0;
   */
  QUERY_SOURCE_UNDEFINED = 0,

  /**
   * @generated from enum value: QSRC_ORIGINAL = 1;
   */
  QSRC_ORIGINAL = 1,

  /**
   * @generated from enum value: QSRC_PARSER = 2;
   */
  QSRC_PARSER = 2,

  /**
   * @generated from enum value: QSRC_INSTEAD_RULE = 3;
   */
  QSRC_INSTEAD_RULE = 3,

  /**
   * @generated from enum value: QSRC_QUAL_INSTEAD_RULE = 4;
   */
  QSRC_QUAL_INSTEAD_RULE = 4,

  /**
   * @generated from enum value: QSRC_NON_INSTEAD_RULE = 5;
   */
  QSRC_NON_INSTEAD_RULE = 5,
}

/**
 * Describes the enum pg_query.QuerySource.
 */
export const QuerySourceSchema: GenEnum<QuerySource> = /*@__PURE__*/
  enumDesc(file_pg_query, 1);

/**
 * @generated from enum pg_query.SortByDir
 */
export enum SortByDir {
  /**
   * @generated from enum value: SORT_BY_DIR_UNDEFINED = 0;
   */
  SORT_BY_DIR_UNDEFINED = 0,

  /**
   * @generated from enum value: SORTBY_DEFAULT = 1;
   */
  SORTBY_DEFAULT = 1,

  /**
   * @generated from enum value: SORTBY_ASC = 2;
   */
  SORTBY_ASC = 2,

  /**
   * @generated from enum value: SORTBY_DESC = 3;
   */
  SORTBY_DESC = 3,

  /**
   * @generated from enum value: SORTBY_USING = 4;
   */
  SORTBY_USING = 4,
}

/**
 * Describes the enum pg_query.SortByDir.
 */
export const SortByDirSchema: GenEnum<SortByDir> = /*@__PURE__*/
  enumDesc(file_pg_query, 2);

/**
 * @generated from enum pg_query.SortByNulls
 */
export enum SortByNulls {
  /**
   * @generated from enum value: SORT_BY_NULLS_UNDEFINED = 0;
   */
  SORT_BY_NULLS_UNDEFINED = 0,

  /**
   * @generated from enum value: SORTBY_NULLS_DEFAULT = 1;
   */
  SORTBY_NULLS_DEFAULT = 1,

  /**
   * @generated from enum value: SORTBY_NULLS_FIRST = 2;
   */
  SORTBY_NULLS_FIRST = 2,

  /**
   * @generated from enum value: SORTBY_NULLS_LAST = 3;
   */
  SORTBY_NULLS_LAST = 3,
}

/**
 * Describes the enum pg_query.SortByNulls.
 */
export const SortByNullsSchema: GenEnum<SortByNulls> = /*@__PURE__*/
  enumDesc(file_pg_query, 3);

/**
 * @generated from enum pg_query.A_Expr_Kind
 */
export enum A_Expr_Kind {
  /**
   * @generated from enum value: A_EXPR_KIND_UNDEFINED = 0;
   */
  A_EXPR_KIND_UNDEFINED = 0,

  /**
   * @generated from enum value: AEXPR_OP = 1;
   */
  AEXPR_OP = 1,

  /**
   * @generated from enum value: AEXPR_OP_ANY = 2;
   */
  AEXPR_OP_ANY = 2,

  /**
   * @generated from enum value: AEXPR_OP_ALL = 3;
   */
  AEXPR_OP_ALL = 3,

  /**
   * @generated from enum value: AEXPR_DISTINCT = 4;
   */
  AEXPR_DISTINCT = 4,

  /**
   * @generated from enum value: AEXPR_NOT_DISTINCT = 5;
   */
  AEXPR_NOT_DISTINCT = 5,

  /**
   * @generated from enum value: AEXPR_NULLIF = 6;
   */
  AEXPR_NULLIF = 6,

  /**
   * @generated from enum value: AEXPR_OF = 7;
   */
  AEXPR_OF = 7,

  /**
   * @generated from enum value: AEXPR_IN = 8;
   */
  AEXPR_IN = 8,

  /**
   * @generated from enum value: AEXPR_LIKE = 9;
   */
  AEXPR_LIKE = 9,

  /**
   * @generated from enum value: AEXPR_ILIKE = 10;
   */
  AEXPR_ILIKE = 10,

  /**
   * @generated from enum value: AEXPR_SIMILAR = 11;
   */
  AEXPR_SIMILAR = 11,

  /**
   * @generated from enum value: AEXPR_BETWEEN = 12;
   */
  AEXPR_BETWEEN = 12,

  /**
   * @generated from enum value: AEXPR_NOT_BETWEEN = 13;
   */
  AEXPR_NOT_BETWEEN = 13,

  /**
   * @generated from enum value: AEXPR_BETWEEN_SYM = 14;
   */
  AEXPR_BETWEEN_SYM = 14,

  /**
   * @generated from enum value: AEXPR_NOT_BETWEEN_SYM = 15;
   */
  AEXPR_NOT_BETWEEN_SYM = 15,

  /**
   * @generated from enum value: AEXPR_PAREN = 16;
   */
  AEXPR_PAREN = 16,
}

/**
 * Describes the enum pg_query.A_Expr_Kind.
 */
export const A_Expr_KindSchema: GenEnum<A_Expr_Kind> = /*@__PURE__*/
  enumDesc(file_pg_query, 4);

/**
 * @generated from enum pg_query.RoleSpecType
 */
export enum RoleSpecType {
  /**
   * @generated from enum value: ROLE_SPEC_TYPE_UNDEFINED = 0;
   */
  ROLE_SPEC_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: ROLESPEC_CSTRING = 1;
   */
  ROLESPEC_CSTRING = 1,

  /**
   * @generated from enum value: ROLESPEC_CURRENT_USER = 2;
   */
  ROLESPEC_CURRENT_USER = 2,

  /**
   * @generated from enum value: ROLESPEC_SESSION_USER = 3;
   */
  ROLESPEC_SESSION_USER = 3,

  /**
   * @generated from enum value: ROLESPEC_PUBLIC = 4;
   */
  ROLESPEC_PUBLIC = 4,
}

/**
 * Describes the enum pg_query.RoleSpecType.
 */
export const RoleSpecTypeSchema: GenEnum<RoleSpecType> = /*@__PURE__*/
  enumDesc(file_pg_query, 5);

/**
 * @generated from enum pg_query.TableLikeOption
 */
export enum TableLikeOption {
  /**
   * @generated from enum value: TABLE_LIKE_OPTION_UNDEFINED = 0;
   */
  TABLE_LIKE_OPTION_UNDEFINED = 0,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_COMMENTS = 1;
   */
  CREATE_TABLE_LIKE_COMMENTS = 1,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_CONSTRAINTS = 2;
   */
  CREATE_TABLE_LIKE_CONSTRAINTS = 2,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_DEFAULTS = 3;
   */
  CREATE_TABLE_LIKE_DEFAULTS = 3,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_GENERATED = 4;
   */
  CREATE_TABLE_LIKE_GENERATED = 4,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_IDENTITY = 5;
   */
  CREATE_TABLE_LIKE_IDENTITY = 5,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_INDEXES = 6;
   */
  CREATE_TABLE_LIKE_INDEXES = 6,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_STATISTICS = 7;
   */
  CREATE_TABLE_LIKE_STATISTICS = 7,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_STORAGE = 8;
   */
  CREATE_TABLE_LIKE_STORAGE = 8,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_ALL = 9;
   */
  CREATE_TABLE_LIKE_ALL = 9,
}

/**
 * Describes the enum pg_query.TableLikeOption.
 */
export const TableLikeOptionSchema: GenEnum<TableLikeOption> = /*@__PURE__*/
  enumDesc(file_pg_query, 6);

/**
 * @generated from enum pg_query.DefElemAction
 */
export enum DefElemAction {
  /**
   * @generated from enum value: DEF_ELEM_ACTION_UNDEFINED = 0;
   */
  DEF_ELEM_ACTION_UNDEFINED = 0,

  /**
   * @generated from enum value: DEFELEM_UNSPEC = 1;
   */
  DEFELEM_UNSPEC = 1,

  /**
   * @generated from enum value: DEFELEM_SET = 2;
   */
  DEFELEM_SET = 2,

  /**
   * @generated from enum value: DEFELEM_ADD = 3;
   */
  DEFELEM_ADD = 3,

  /**
   * @generated from enum value: DEFELEM_DROP = 4;
   */
  DEFELEM_DROP = 4,
}

/**
 * Describes the enum pg_query.DefElemAction.
 */
export const DefElemActionSchema: GenEnum<DefElemAction> = /*@__PURE__*/
  enumDesc(file_pg_query, 7);

/**
 * @generated from enum pg_query.PartitionRangeDatumKind
 */
export enum PartitionRangeDatumKind {
  /**
   * @generated from enum value: PARTITION_RANGE_DATUM_KIND_UNDEFINED = 0;
   */
  PARTITION_RANGE_DATUM_KIND_UNDEFINED = 0,

  /**
   * @generated from enum value: PARTITION_RANGE_DATUM_MINVALUE = 1;
   */
  PARTITION_RANGE_DATUM_MINVALUE = 1,

  /**
   * @generated from enum value: PARTITION_RANGE_DATUM_VALUE = 2;
   */
  PARTITION_RANGE_DATUM_VALUE = 2,

  /**
   * @generated from enum value: PARTITION_RANGE_DATUM_MAXVALUE = 3;
   */
  PARTITION_RANGE_DATUM_MAXVALUE = 3,
}

/**
 * Describes the enum pg_query.PartitionRangeDatumKind.
 */
export const PartitionRangeDatumKindSchema: GenEnum<PartitionRangeDatumKind> = /*@__PURE__*/
  enumDesc(file_pg_query, 8);

/**
 * @generated from enum pg_query.RTEKind
 */
export enum RTEKind {
  /**
   * @generated from enum value: RTEKIND_UNDEFINED = 0;
   */
  RTEKIND_UNDEFINED = 0,

  /**
   * @generated from enum value: RTE_RELATION = 1;
   */
  RTE_RELATION = 1,

  /**
   * @generated from enum value: RTE_SUBQUERY = 2;
   */
  RTE_SUBQUERY = 2,

  /**
   * @generated from enum value: RTE_JOIN = 3;
   */
  RTE_JOIN = 3,

  /**
   * @generated from enum value: RTE_FUNCTION = 4;
   */
  RTE_FUNCTION = 4,

  /**
   * @generated from enum value: RTE_TABLEFUNC = 5;
   */
  RTE_TABLEFUNC = 5,

  /**
   * @generated from enum value: RTE_VALUES = 6;
   */
  RTE_VALUES = 6,

  /**
   * @generated from enum value: RTE_CTE = 7;
   */
  RTE_CTE = 7,

  /**
   * @generated from enum value: RTE_NAMEDTUPLESTORE = 8;
   */
  RTE_NAMEDTUPLESTORE = 8,

  /**
   * @generated from enum value: RTE_RESULT = 9;
   */
  RTE_RESULT = 9,
}

/**
 * Describes the enum pg_query.RTEKind.
 */
export const RTEKindSchema: GenEnum<RTEKind> = /*@__PURE__*/
  enumDesc(file_pg_query, 9);

/**
 * @generated from enum pg_query.WCOKind
 */
export enum WCOKind {
  /**
   * @generated from enum value: WCOKIND_UNDEFINED = 0;
   */
  WCOKIND_UNDEFINED = 0,

  /**
   * @generated from enum value: WCO_VIEW_CHECK = 1;
   */
  WCO_VIEW_CHECK = 1,

  /**
   * @generated from enum value: WCO_RLS_INSERT_CHECK = 2;
   */
  WCO_RLS_INSERT_CHECK = 2,

  /**
   * @generated from enum value: WCO_RLS_UPDATE_CHECK = 3;
   */
  WCO_RLS_UPDATE_CHECK = 3,

  /**
   * @generated from enum value: WCO_RLS_CONFLICT_CHECK = 4;
   */
  WCO_RLS_CONFLICT_CHECK = 4,
}

/**
 * Describes the enum pg_query.WCOKind.
 */
export const WCOKindSchema: GenEnum<WCOKind> = /*@__PURE__*/
  enumDesc(file_pg_query, 10);

/**
 * @generated from enum pg_query.GroupingSetKind
 */
export enum GroupingSetKind {
  /**
   * @generated from enum value: GROUPING_SET_KIND_UNDEFINED = 0;
   */
  GROUPING_SET_KIND_UNDEFINED = 0,

  /**
   * @generated from enum value: GROUPING_SET_EMPTY = 1;
   */
  GROUPING_SET_EMPTY = 1,

  /**
   * @generated from enum value: GROUPING_SET_SIMPLE = 2;
   */
  GROUPING_SET_SIMPLE = 2,

  /**
   * @generated from enum value: GROUPING_SET_ROLLUP = 3;
   */
  GROUPING_SET_ROLLUP = 3,

  /**
   * @generated from enum value: GROUPING_SET_CUBE = 4;
   */
  GROUPING_SET_CUBE = 4,

  /**
   * @generated from enum value: GROUPING_SET_SETS = 5;
   */
  GROUPING_SET_SETS = 5,
}

/**
 * Describes the enum pg_query.GroupingSetKind.
 */
export const GroupingSetKindSchema: GenEnum<GroupingSetKind> = /*@__PURE__*/
  enumDesc(file_pg_query, 11);

/**
 * @generated from enum pg_query.CTEMaterialize
 */
export enum CTEMaterialize {
  /**
   * @generated from enum value: CTEMATERIALIZE_UNDEFINED = 0;
   */
  CTEMATERIALIZE_UNDEFINED = 0,

  /**
   * @generated from enum value: CTEMaterializeDefault = 1;
   */
  CTEMaterializeDefault = 1,

  /**
   * @generated from enum value: CTEMaterializeAlways = 2;
   */
  CTEMaterializeAlways = 2,

  /**
   * @generated from enum value: CTEMaterializeNever = 3;
   */
  CTEMaterializeNever = 3,
}

/**
 * Describes the enum pg_query.CTEMaterialize.
 */
export const CTEMaterializeSchema: GenEnum<CTEMaterialize> = /*@__PURE__*/
  enumDesc(file_pg_query, 12);

/**
 * @generated from enum pg_query.SetOperation
 */
export enum SetOperation {
  /**
   * @generated from enum value: SET_OPERATION_UNDEFINED = 0;
   */
  SET_OPERATION_UNDEFINED = 0,

  /**
   * @generated from enum value: SETOP_NONE = 1;
   */
  SETOP_NONE = 1,

  /**
   * @generated from enum value: SETOP_UNION = 2;
   */
  SETOP_UNION = 2,

  /**
   * @generated from enum value: SETOP_INTERSECT = 3;
   */
  SETOP_INTERSECT = 3,

  /**
   * @generated from enum value: SETOP_EXCEPT = 4;
   */
  SETOP_EXCEPT = 4,
}

/**
 * Describes the enum pg_query.SetOperation.
 */
export const SetOperationSchema: GenEnum<SetOperation> = /*@__PURE__*/
  enumDesc(file_pg_query, 13);

/**
 * @generated from enum pg_query.ObjectType
 */
export enum ObjectType {
  /**
   * @generated from enum value: OBJECT_TYPE_UNDEFINED = 0;
   */
  OBJECT_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: OBJECT_ACCESS_METHOD = 1;
   */
  OBJECT_ACCESS_METHOD = 1,

  /**
   * @generated from enum value: OBJECT_AGGREGATE = 2;
   */
  OBJECT_AGGREGATE = 2,

  /**
   * @generated from enum value: OBJECT_AMOP = 3;
   */
  OBJECT_AMOP = 3,

  /**
   * @generated from enum value: OBJECT_AMPROC = 4;
   */
  OBJECT_AMPROC = 4,

  /**
   * @generated from enum value: OBJECT_ATTRIBUTE = 5;
   */
  OBJECT_ATTRIBUTE = 5,

  /**
   * @generated from enum value: OBJECT_CAST = 6;
   */
  OBJECT_CAST = 6,

  /**
   * @generated from enum value: OBJECT_COLUMN = 7;
   */
  OBJECT_COLUMN = 7,

  /**
   * @generated from enum value: OBJECT_COLLATION = 8;
   */
  OBJECT_COLLATION = 8,

  /**
   * @generated from enum value: OBJECT_CONVERSION = 9;
   */
  OBJECT_CONVERSION = 9,

  /**
   * @generated from enum value: OBJECT_DATABASE = 10;
   */
  OBJECT_DATABASE = 10,

  /**
   * @generated from enum value: OBJECT_DEFAULT = 11;
   */
  OBJECT_DEFAULT = 11,

  /**
   * @generated from enum value: OBJECT_DEFACL = 12;
   */
  OBJECT_DEFACL = 12,

  /**
   * @generated from enum value: OBJECT_DOMAIN = 13;
   */
  OBJECT_DOMAIN = 13,

  /**
   * @generated from enum value: OBJECT_DOMCONSTRAINT = 14;
   */
  OBJECT_DOMCONSTRAINT = 14,

  /**
   * @generated from enum value: OBJECT_EVENT_TRIGGER = 15;
   */
  OBJECT_EVENT_TRIGGER = 15,

  /**
   * @generated from enum value: OBJECT_EXTENSION = 16;
   */
  OBJECT_EXTENSION = 16,

  /**
   * @generated from enum value: OBJECT_FDW = 17;
   */
  OBJECT_FDW = 17,

  /**
   * @generated from enum value: OBJECT_FOREIGN_SERVER = 18;
   */
  OBJECT_FOREIGN_SERVER = 18,

  /**
   * @generated from enum value: OBJECT_FOREIGN_TABLE = 19;
   */
  OBJECT_FOREIGN_TABLE = 19,

  /**
   * @generated from enum value: OBJECT_FUNCTION = 20;
   */
  OBJECT_FUNCTION = 20,

  /**
   * @generated from enum value: OBJECT_INDEX = 21;
   */
  OBJECT_INDEX = 21,

  /**
   * @generated from enum value: OBJECT_LANGUAGE = 22;
   */
  OBJECT_LANGUAGE = 22,

  /**
   * @generated from enum value: OBJECT_LARGEOBJECT = 23;
   */
  OBJECT_LARGEOBJECT = 23,

  /**
   * @generated from enum value: OBJECT_MATVIEW = 24;
   */
  OBJECT_MATVIEW = 24,

  /**
   * @generated from enum value: OBJECT_OPCLASS = 25;
   */
  OBJECT_OPCLASS = 25,

  /**
   * @generated from enum value: OBJECT_OPERATOR = 26;
   */
  OBJECT_OPERATOR = 26,

  /**
   * @generated from enum value: OBJECT_OPFAMILY = 27;
   */
  OBJECT_OPFAMILY = 27,

  /**
   * @generated from enum value: OBJECT_POLICY = 28;
   */
  OBJECT_POLICY = 28,

  /**
   * @generated from enum value: OBJECT_PROCEDURE = 29;
   */
  OBJECT_PROCEDURE = 29,

  /**
   * @generated from enum value: OBJECT_PUBLICATION = 30;
   */
  OBJECT_PUBLICATION = 30,

  /**
   * @generated from enum value: OBJECT_PUBLICATION_REL = 31;
   */
  OBJECT_PUBLICATION_REL = 31,

  /**
   * @generated from enum value: OBJECT_ROLE = 32;
   */
  OBJECT_ROLE = 32,

  /**
   * @generated from enum value: OBJECT_ROUTINE = 33;
   */
  OBJECT_ROUTINE = 33,

  /**
   * @generated from enum value: OBJECT_RULE = 34;
   */
  OBJECT_RULE = 34,

  /**
   * @generated from enum value: OBJECT_SCHEMA = 35;
   */
  OBJECT_SCHEMA = 35,

  /**
   * @generated from enum value: OBJECT_SEQUENCE = 36;
   */
  OBJECT_SEQUENCE = 36,

  /**
   * @generated from enum value: OBJECT_SUBSCRIPTION = 37;
   */
  OBJECT_SUBSCRIPTION = 37,

  /**
   * @generated from enum value: OBJECT_STATISTIC_EXT = 38;
   */
  OBJECT_STATISTIC_EXT = 38,

  /**
   * @generated from enum value: OBJECT_TABCONSTRAINT = 39;
   */
  OBJECT_TABCONSTRAINT = 39,

  /**
   * @generated from enum value: OBJECT_TABLE = 40;
   */
  OBJECT_TABLE = 40,

  /**
   * @generated from enum value: OBJECT_TABLESPACE = 41;
   */
  OBJECT_TABLESPACE = 41,

  /**
   * @generated from enum value: OBJECT_TRANSFORM = 42;
   */
  OBJECT_TRANSFORM = 42,

  /**
   * @generated from enum value: OBJECT_TRIGGER = 43;
   */
  OBJECT_TRIGGER = 43,

  /**
   * @generated from enum value: OBJECT_TSCONFIGURATION = 44;
   */
  OBJECT_TSCONFIGURATION = 44,

  /**
   * @generated from enum value: OBJECT_TSDICTIONARY = 45;
   */
  OBJECT_TSDICTIONARY = 45,

  /**
   * @generated from enum value: OBJECT_TSPARSER = 46;
   */
  OBJECT_TSPARSER = 46,

  /**
   * @generated from enum value: OBJECT_TSTEMPLATE = 47;
   */
  OBJECT_TSTEMPLATE = 47,

  /**
   * @generated from enum value: OBJECT_TYPE = 48;
   */
  OBJECT_TYPE = 48,

  /**
   * @generated from enum value: OBJECT_USER_MAPPING = 49;
   */
  OBJECT_USER_MAPPING = 49,

  /**
   * @generated from enum value: OBJECT_VIEW = 50;
   */
  OBJECT_VIEW = 50,
}

/**
 * Describes the enum pg_query.ObjectType.
 */
export const ObjectTypeSchema: GenEnum<ObjectType> = /*@__PURE__*/
  enumDesc(file_pg_query, 14);

/**
 * @generated from enum pg_query.DropBehavior
 */
export enum DropBehavior {
  /**
   * @generated from enum value: DROP_BEHAVIOR_UNDEFINED = 0;
   */
  DROP_BEHAVIOR_UNDEFINED = 0,

  /**
   * @generated from enum value: DROP_RESTRICT = 1;
   */
  DROP_RESTRICT = 1,

  /**
   * @generated from enum value: DROP_CASCADE = 2;
   */
  DROP_CASCADE = 2,
}

/**
 * Describes the enum pg_query.DropBehavior.
 */
export const DropBehaviorSchema: GenEnum<DropBehavior> = /*@__PURE__*/
  enumDesc(file_pg_query, 15);

/**
 * @generated from enum pg_query.AlterTableType
 */
export enum AlterTableType {
  /**
   * @generated from enum value: ALTER_TABLE_TYPE_UNDEFINED = 0;
   */
  ALTER_TABLE_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: AT_AddColumn = 1;
   */
  AT_AddColumn = 1,

  /**
   * @generated from enum value: AT_AddColumnRecurse = 2;
   */
  AT_AddColumnRecurse = 2,

  /**
   * @generated from enum value: AT_AddColumnToView = 3;
   */
  AT_AddColumnToView = 3,

  /**
   * @generated from enum value: AT_ColumnDefault = 4;
   */
  AT_ColumnDefault = 4,

  /**
   * @generated from enum value: AT_CookedColumnDefault = 5;
   */
  AT_CookedColumnDefault = 5,

  /**
   * @generated from enum value: AT_DropNotNull = 6;
   */
  AT_DropNotNull = 6,

  /**
   * @generated from enum value: AT_SetNotNull = 7;
   */
  AT_SetNotNull = 7,

  /**
   * @generated from enum value: AT_DropExpression = 8;
   */
  AT_DropExpression = 8,

  /**
   * @generated from enum value: AT_CheckNotNull = 9;
   */
  AT_CheckNotNull = 9,

  /**
   * @generated from enum value: AT_SetStatistics = 10;
   */
  AT_SetStatistics = 10,

  /**
   * @generated from enum value: AT_SetOptions = 11;
   */
  AT_SetOptions = 11,

  /**
   * @generated from enum value: AT_ResetOptions = 12;
   */
  AT_ResetOptions = 12,

  /**
   * @generated from enum value: AT_SetStorage = 13;
   */
  AT_SetStorage = 13,

  /**
   * @generated from enum value: AT_DropColumn = 14;
   */
  AT_DropColumn = 14,

  /**
   * @generated from enum value: AT_DropColumnRecurse = 15;
   */
  AT_DropColumnRecurse = 15,

  /**
   * @generated from enum value: AT_AddIndex = 16;
   */
  AT_AddIndex = 16,

  /**
   * @generated from enum value: AT_ReAddIndex = 17;
   */
  AT_ReAddIndex = 17,

  /**
   * @generated from enum value: AT_AddConstraint = 18;
   */
  AT_AddConstraint = 18,

  /**
   * @generated from enum value: AT_AddConstraintRecurse = 19;
   */
  AT_AddConstraintRecurse = 19,

  /**
   * @generated from enum value: AT_ReAddConstraint = 20;
   */
  AT_ReAddConstraint = 20,

  /**
   * @generated from enum value: AT_ReAddDomainConstraint = 21;
   */
  AT_ReAddDomainConstraint = 21,

  /**
   * @generated from enum value: AT_AlterConstraint = 22;
   */
  AT_AlterConstraint = 22,

  /**
   * @generated from enum value: AT_ValidateConstraint = 23;
   */
  AT_ValidateConstraint = 23,

  /**
   * @generated from enum value: AT_ValidateConstraintRecurse = 24;
   */
  AT_ValidateConstraintRecurse = 24,

  /**
   * @generated from enum value: AT_AddIndexConstraint = 25;
   */
  AT_AddIndexConstraint = 25,

  /**
   * @generated from enum value: AT_DropConstraint = 26;
   */
  AT_DropConstraint = 26,

  /**
   * @generated from enum value: AT_DropConstraintRecurse = 27;
   */
  AT_DropConstraintRecurse = 27,

  /**
   * @generated from enum value: AT_ReAddComment = 28;
   */
  AT_ReAddComment = 28,

  /**
   * @generated from enum value: AT_AlterColumnType = 29;
   */
  AT_AlterColumnType = 29,

  /**
   * @generated from enum value: AT_AlterColumnGenericOptions = 30;
   */
  AT_AlterColumnGenericOptions = 30,

  /**
   * @generated from enum value: AT_ChangeOwner = 31;
   */
  AT_ChangeOwner = 31,

  /**
   * @generated from enum value: AT_ClusterOn = 32;
   */
  AT_ClusterOn = 32,

  /**
   * @generated from enum value: AT_DropCluster = 33;
   */
  AT_DropCluster = 33,

  /**
   * @generated from enum value: AT_SetLogged = 34;
   */
  AT_SetLogged = 34,

  /**
   * @generated from enum value: AT_SetUnLogged = 35;
   */
  AT_SetUnLogged = 35,

  /**
   * @generated from enum value: AT_DropOids = 36;
   */
  AT_DropOids = 36,

  /**
   * @generated from enum value: AT_SetTableSpace = 37;
   */
  AT_SetTableSpace = 37,

  /**
   * @generated from enum value: AT_SetRelOptions = 38;
   */
  AT_SetRelOptions = 38,

  /**
   * @generated from enum value: AT_ResetRelOptions = 39;
   */
  AT_ResetRelOptions = 39,

  /**
   * @generated from enum value: AT_ReplaceRelOptions = 40;
   */
  AT_ReplaceRelOptions = 40,

  /**
   * @generated from enum value: AT_EnableTrig = 41;
   */
  AT_EnableTrig = 41,

  /**
   * @generated from enum value: AT_EnableAlwaysTrig = 42;
   */
  AT_EnableAlwaysTrig = 42,

  /**
   * @generated from enum value: AT_EnableReplicaTrig = 43;
   */
  AT_EnableReplicaTrig = 43,

  /**
   * @generated from enum value: AT_DisableTrig = 44;
   */
  AT_DisableTrig = 44,

  /**
   * @generated from enum value: AT_EnableTrigAll = 45;
   */
  AT_EnableTrigAll = 45,

  /**
   * @generated from enum value: AT_DisableTrigAll = 46;
   */
  AT_DisableTrigAll = 46,

  /**
   * @generated from enum value: AT_EnableTrigUser = 47;
   */
  AT_EnableTrigUser = 47,

  /**
   * @generated from enum value: AT_DisableTrigUser = 48;
   */
  AT_DisableTrigUser = 48,

  /**
   * @generated from enum value: AT_EnableRule = 49;
   */
  AT_EnableRule = 49,

  /**
   * @generated from enum value: AT_EnableAlwaysRule = 50;
   */
  AT_EnableAlwaysRule = 50,

  /**
   * @generated from enum value: AT_EnableReplicaRule = 51;
   */
  AT_EnableReplicaRule = 51,

  /**
   * @generated from enum value: AT_DisableRule = 52;
   */
  AT_DisableRule = 52,

  /**
   * @generated from enum value: AT_AddInherit = 53;
   */
  AT_AddInherit = 53,

  /**
   * @generated from enum value: AT_DropInherit = 54;
   */
  AT_DropInherit = 54,

  /**
   * @generated from enum value: AT_AddOf = 55;
   */
  AT_AddOf = 55,

  /**
   * @generated from enum value: AT_DropOf = 56;
   */
  AT_DropOf = 56,

  /**
   * @generated from enum value: AT_ReplicaIdentity = 57;
   */
  AT_ReplicaIdentity = 57,

  /**
   * @generated from enum value: AT_EnableRowSecurity = 58;
   */
  AT_EnableRowSecurity = 58,

  /**
   * @generated from enum value: AT_DisableRowSecurity = 59;
   */
  AT_DisableRowSecurity = 59,

  /**
   * @generated from enum value: AT_ForceRowSecurity = 60;
   */
  AT_ForceRowSecurity = 60,

  /**
   * @generated from enum value: AT_NoForceRowSecurity = 61;
   */
  AT_NoForceRowSecurity = 61,

  /**
   * @generated from enum value: AT_GenericOptions = 62;
   */
  AT_GenericOptions = 62,

  /**
   * @generated from enum value: AT_AttachPartition = 63;
   */
  AT_AttachPartition = 63,

  /**
   * @generated from enum value: AT_DetachPartition = 64;
   */
  AT_DetachPartition = 64,

  /**
   * @generated from enum value: AT_AddIdentity = 65;
   */
  AT_AddIdentity = 65,

  /**
   * @generated from enum value: AT_SetIdentity = 66;
   */
  AT_SetIdentity = 66,

  /**
   * @generated from enum value: AT_DropIdentity = 67;
   */
  AT_DropIdentity = 67,
}

/**
 * Describes the enum pg_query.AlterTableType.
 */
export const AlterTableTypeSchema: GenEnum<AlterTableType> = /*@__PURE__*/
  enumDesc(file_pg_query, 16);

/**
 * @generated from enum pg_query.GrantTargetType
 */
export enum GrantTargetType {
  /**
   * @generated from enum value: GRANT_TARGET_TYPE_UNDEFINED = 0;
   */
  GRANT_TARGET_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: ACL_TARGET_OBJECT = 1;
   */
  ACL_TARGET_OBJECT = 1,

  /**
   * @generated from enum value: ACL_TARGET_ALL_IN_SCHEMA = 2;
   */
  ACL_TARGET_ALL_IN_SCHEMA = 2,

  /**
   * @generated from enum value: ACL_TARGET_DEFAULTS = 3;
   */
  ACL_TARGET_DEFAULTS = 3,
}

/**
 * Describes the enum pg_query.GrantTargetType.
 */
export const GrantTargetTypeSchema: GenEnum<GrantTargetType> = /*@__PURE__*/
  enumDesc(file_pg_query, 17);

/**
 * @generated from enum pg_query.VariableSetKind
 */
export enum VariableSetKind {
  /**
   * @generated from enum value: VARIABLE_SET_KIND_UNDEFINED = 0;
   */
  VARIABLE_SET_KIND_UNDEFINED = 0,

  /**
   * @generated from enum value: VAR_SET_VALUE = 1;
   */
  VAR_SET_VALUE = 1,

  /**
   * @generated from enum value: VAR_SET_DEFAULT = 2;
   */
  VAR_SET_DEFAULT = 2,

  /**
   * @generated from enum value: VAR_SET_CURRENT = 3;
   */
  VAR_SET_CURRENT = 3,

  /**
   * @generated from enum value: VAR_SET_MULTI = 4;
   */
  VAR_SET_MULTI = 4,

  /**
   * @generated from enum value: VAR_RESET = 5;
   */
  VAR_RESET = 5,

  /**
   * @generated from enum value: VAR_RESET_ALL = 6;
   */
  VAR_RESET_ALL = 6,
}

/**
 * Describes the enum pg_query.VariableSetKind.
 */
export const VariableSetKindSchema: GenEnum<VariableSetKind> = /*@__PURE__*/
  enumDesc(file_pg_query, 18);

/**
 * @generated from enum pg_query.ConstrType
 */
export enum ConstrType {
  /**
   * @generated from enum value: CONSTR_TYPE_UNDEFINED = 0;
   */
  CONSTR_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: CONSTR_NULL = 1;
   */
  CONSTR_NULL = 1,

  /**
   * @generated from enum value: CONSTR_NOTNULL = 2;
   */
  CONSTR_NOTNULL = 2,

  /**
   * @generated from enum value: CONSTR_DEFAULT = 3;
   */
  CONSTR_DEFAULT = 3,

  /**
   * @generated from enum value: CONSTR_IDENTITY = 4;
   */
  CONSTR_IDENTITY = 4,

  /**
   * @generated from enum value: CONSTR_GENERATED = 5;
   */
  CONSTR_GENERATED = 5,

  /**
   * @generated from enum value: CONSTR_CHECK = 6;
   */
  CONSTR_CHECK = 6,

  /**
   * @generated from enum value: CONSTR_PRIMARY = 7;
   */
  CONSTR_PRIMARY = 7,

  /**
   * @generated from enum value: CONSTR_UNIQUE = 8;
   */
  CONSTR_UNIQUE = 8,

  /**
   * @generated from enum value: CONSTR_EXCLUSION = 9;
   */
  CONSTR_EXCLUSION = 9,

  /**
   * @generated from enum value: CONSTR_FOREIGN = 10;
   */
  CONSTR_FOREIGN = 10,

  /**
   * @generated from enum value: CONSTR_ATTR_DEFERRABLE = 11;
   */
  CONSTR_ATTR_DEFERRABLE = 11,

  /**
   * @generated from enum value: CONSTR_ATTR_NOT_DEFERRABLE = 12;
   */
  CONSTR_ATTR_NOT_DEFERRABLE = 12,

  /**
   * @generated from enum value: CONSTR_ATTR_DEFERRED = 13;
   */
  CONSTR_ATTR_DEFERRED = 13,

  /**
   * @generated from enum value: CONSTR_ATTR_IMMEDIATE = 14;
   */
  CONSTR_ATTR_IMMEDIATE = 14,
}

/**
 * Describes the enum pg_query.ConstrType.
 */
export const ConstrTypeSchema: GenEnum<ConstrType> = /*@__PURE__*/
  enumDesc(file_pg_query, 19);

/**
 * @generated from enum pg_query.ImportForeignSchemaType
 */
export enum ImportForeignSchemaType {
  /**
   * @generated from enum value: IMPORT_FOREIGN_SCHEMA_TYPE_UNDEFINED = 0;
   */
  IMPORT_FOREIGN_SCHEMA_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: FDW_IMPORT_SCHEMA_ALL = 1;
   */
  FDW_IMPORT_SCHEMA_ALL = 1,

  /**
   * @generated from enum value: FDW_IMPORT_SCHEMA_LIMIT_TO = 2;
   */
  FDW_IMPORT_SCHEMA_LIMIT_TO = 2,

  /**
   * @generated from enum value: FDW_IMPORT_SCHEMA_EXCEPT = 3;
   */
  FDW_IMPORT_SCHEMA_EXCEPT = 3,
}

/**
 * Describes the enum pg_query.ImportForeignSchemaType.
 */
export const ImportForeignSchemaTypeSchema: GenEnum<ImportForeignSchemaType> = /*@__PURE__*/
  enumDesc(file_pg_query, 20);

/**
 * @generated from enum pg_query.RoleStmtType
 */
export enum RoleStmtType {
  /**
   * @generated from enum value: ROLE_STMT_TYPE_UNDEFINED = 0;
   */
  ROLE_STMT_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: ROLESTMT_ROLE = 1;
   */
  ROLESTMT_ROLE = 1,

  /**
   * @generated from enum value: ROLESTMT_USER = 2;
   */
  ROLESTMT_USER = 2,

  /**
   * @generated from enum value: ROLESTMT_GROUP = 3;
   */
  ROLESTMT_GROUP = 3,
}

/**
 * Describes the enum pg_query.RoleStmtType.
 */
export const RoleStmtTypeSchema: GenEnum<RoleStmtType> = /*@__PURE__*/
  enumDesc(file_pg_query, 21);

/**
 * @generated from enum pg_query.FetchDirection
 */
export enum FetchDirection {
  /**
   * @generated from enum value: FETCH_DIRECTION_UNDEFINED = 0;
   */
  FETCH_DIRECTION_UNDEFINED = 0,

  /**
   * @generated from enum value: FETCH_FORWARD = 1;
   */
  FETCH_FORWARD = 1,

  /**
   * @generated from enum value: FETCH_BACKWARD = 2;
   */
  FETCH_BACKWARD = 2,

  /**
   * @generated from enum value: FETCH_ABSOLUTE = 3;
   */
  FETCH_ABSOLUTE = 3,

  /**
   * @generated from enum value: FETCH_RELATIVE = 4;
   */
  FETCH_RELATIVE = 4,
}

/**
 * Describes the enum pg_query.FetchDirection.
 */
export const FetchDirectionSchema: GenEnum<FetchDirection> = /*@__PURE__*/
  enumDesc(file_pg_query, 22);

/**
 * @generated from enum pg_query.FunctionParameterMode
 */
export enum FunctionParameterMode {
  /**
   * @generated from enum value: FUNCTION_PARAMETER_MODE_UNDEFINED = 0;
   */
  FUNCTION_PARAMETER_MODE_UNDEFINED = 0,

  /**
   * @generated from enum value: FUNC_PARAM_IN = 1;
   */
  FUNC_PARAM_IN = 1,

  /**
   * @generated from enum value: FUNC_PARAM_OUT = 2;
   */
  FUNC_PARAM_OUT = 2,

  /**
   * @generated from enum value: FUNC_PARAM_INOUT = 3;
   */
  FUNC_PARAM_INOUT = 3,

  /**
   * @generated from enum value: FUNC_PARAM_VARIADIC = 4;
   */
  FUNC_PARAM_VARIADIC = 4,

  /**
   * @generated from enum value: FUNC_PARAM_TABLE = 5;
   */
  FUNC_PARAM_TABLE = 5,
}

/**
 * Describes the enum pg_query.FunctionParameterMode.
 */
export const FunctionParameterModeSchema: GenEnum<FunctionParameterMode> = /*@__PURE__*/
  enumDesc(file_pg_query, 23);

/**
 * @generated from enum pg_query.TransactionStmtKind
 */
export enum TransactionStmtKind {
  /**
   * @generated from enum value: TRANSACTION_STMT_KIND_UNDEFINED = 0;
   */
  TRANSACTION_STMT_KIND_UNDEFINED = 0,

  /**
   * @generated from enum value: TRANS_STMT_BEGIN = 1;
   */
  TRANS_STMT_BEGIN = 1,

  /**
   * @generated from enum value: TRANS_STMT_START = 2;
   */
  TRANS_STMT_START = 2,

  /**
   * @generated from enum value: TRANS_STMT_COMMIT = 3;
   */
  TRANS_STMT_COMMIT = 3,

  /**
   * @generated from enum value: TRANS_STMT_ROLLBACK = 4;
   */
  TRANS_STMT_ROLLBACK = 4,

  /**
   * @generated from enum value: TRANS_STMT_SAVEPOINT = 5;
   */
  TRANS_STMT_SAVEPOINT = 5,

  /**
   * @generated from enum value: TRANS_STMT_RELEASE = 6;
   */
  TRANS_STMT_RELEASE = 6,

  /**
   * @generated from enum value: TRANS_STMT_ROLLBACK_TO = 7;
   */
  TRANS_STMT_ROLLBACK_TO = 7,

  /**
   * @generated from enum value: TRANS_STMT_PREPARE = 8;
   */
  TRANS_STMT_PREPARE = 8,

  /**
   * @generated from enum value: TRANS_STMT_COMMIT_PREPARED = 9;
   */
  TRANS_STMT_COMMIT_PREPARED = 9,

  /**
   * @generated from enum value: TRANS_STMT_ROLLBACK_PREPARED = 10;
   */
  TRANS_STMT_ROLLBACK_PREPARED = 10,
}

/**
 * Describes the enum pg_query.TransactionStmtKind.
 */
export const TransactionStmtKindSchema: GenEnum<TransactionStmtKind> = /*@__PURE__*/
  enumDesc(file_pg_query, 24);

/**
 * @generated from enum pg_query.ViewCheckOption
 */
export enum ViewCheckOption {
  /**
   * @generated from enum value: VIEW_CHECK_OPTION_UNDEFINED = 0;
   */
  VIEW_CHECK_OPTION_UNDEFINED = 0,

  /**
   * @generated from enum value: NO_CHECK_OPTION = 1;
   */
  NO_CHECK_OPTION = 1,

  /**
   * @generated from enum value: LOCAL_CHECK_OPTION = 2;
   */
  LOCAL_CHECK_OPTION = 2,

  /**
   * @generated from enum value: CASCADED_CHECK_OPTION = 3;
   */
  CASCADED_CHECK_OPTION = 3,
}

/**
 * Describes the enum pg_query.ViewCheckOption.
 */
export const ViewCheckOptionSchema: GenEnum<ViewCheckOption> = /*@__PURE__*/
  enumDesc(file_pg_query, 25);

/**
 * @generated from enum pg_query.ClusterOption
 */
export enum ClusterOption {
  /**
   * @generated from enum value: CLUSTER_OPTION_UNDEFINED = 0;
   */
  CLUSTER_OPTION_UNDEFINED = 0,

  /**
   * @generated from enum value: CLUOPT_RECHECK = 1;
   */
  CLUOPT_RECHECK = 1,

  /**
   * @generated from enum value: CLUOPT_VERBOSE = 2;
   */
  CLUOPT_VERBOSE = 2,
}

/**
 * Describes the enum pg_query.ClusterOption.
 */
export const ClusterOptionSchema: GenEnum<ClusterOption> = /*@__PURE__*/
  enumDesc(file_pg_query, 26);

/**
 * @generated from enum pg_query.DiscardMode
 */
export enum DiscardMode {
  /**
   * @generated from enum value: DISCARD_MODE_UNDEFINED = 0;
   */
  DISCARD_MODE_UNDEFINED = 0,

  /**
   * @generated from enum value: DISCARD_ALL = 1;
   */
  DISCARD_ALL = 1,

  /**
   * @generated from enum value: DISCARD_PLANS = 2;
   */
  DISCARD_PLANS = 2,

  /**
   * @generated from enum value: DISCARD_SEQUENCES = 3;
   */
  DISCARD_SEQUENCES = 3,

  /**
   * @generated from enum value: DISCARD_TEMP = 4;
   */
  DISCARD_TEMP = 4,
}

/**
 * Describes the enum pg_query.DiscardMode.
 */
export const DiscardModeSchema: GenEnum<DiscardMode> = /*@__PURE__*/
  enumDesc(file_pg_query, 27);

/**
 * @generated from enum pg_query.ReindexObjectType
 */
export enum ReindexObjectType {
  /**
   * @generated from enum value: REINDEX_OBJECT_TYPE_UNDEFINED = 0;
   */
  REINDEX_OBJECT_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: REINDEX_OBJECT_INDEX = 1;
   */
  REINDEX_OBJECT_INDEX = 1,

  /**
   * @generated from enum value: REINDEX_OBJECT_TABLE = 2;
   */
  REINDEX_OBJECT_TABLE = 2,

  /**
   * @generated from enum value: REINDEX_OBJECT_SCHEMA = 3;
   */
  REINDEX_OBJECT_SCHEMA = 3,

  /**
   * @generated from enum value: REINDEX_OBJECT_SYSTEM = 4;
   */
  REINDEX_OBJECT_SYSTEM = 4,

  /**
   * @generated from enum value: REINDEX_OBJECT_DATABASE = 5;
   */
  REINDEX_OBJECT_DATABASE = 5,
}

/**
 * Describes the enum pg_query.ReindexObjectType.
 */
export const ReindexObjectTypeSchema: GenEnum<ReindexObjectType> = /*@__PURE__*/
  enumDesc(file_pg_query, 28);

/**
 * @generated from enum pg_query.AlterTSConfigType
 */
export enum AlterTSConfigType {
  /**
   * @generated from enum value: ALTER_TSCONFIG_TYPE_UNDEFINED = 0;
   */
  ALTER_TSCONFIG_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: ALTER_TSCONFIG_ADD_MAPPING = 1;
   */
  ALTER_TSCONFIG_ADD_MAPPING = 1,

  /**
   * @generated from enum value: ALTER_TSCONFIG_ALTER_MAPPING_FOR_TOKEN = 2;
   */
  ALTER_TSCONFIG_ALTER_MAPPING_FOR_TOKEN = 2,

  /**
   * @generated from enum value: ALTER_TSCONFIG_REPLACE_DICT = 3;
   */
  ALTER_TSCONFIG_REPLACE_DICT = 3,

  /**
   * @generated from enum value: ALTER_TSCONFIG_REPLACE_DICT_FOR_TOKEN = 4;
   */
  ALTER_TSCONFIG_REPLACE_DICT_FOR_TOKEN = 4,

  /**
   * @generated from enum value: ALTER_TSCONFIG_DROP_MAPPING = 5;
   */
  ALTER_TSCONFIG_DROP_MAPPING = 5,
}

/**
 * Describes the enum pg_query.AlterTSConfigType.
 */
export const AlterTSConfigTypeSchema: GenEnum<AlterTSConfigType> = /*@__PURE__*/
  enumDesc(file_pg_query, 29);

/**
 * @generated from enum pg_query.AlterSubscriptionType
 */
export enum AlterSubscriptionType {
  /**
   * @generated from enum value: ALTER_SUBSCRIPTION_TYPE_UNDEFINED = 0;
   */
  ALTER_SUBSCRIPTION_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: ALTER_SUBSCRIPTION_OPTIONS = 1;
   */
  ALTER_SUBSCRIPTION_OPTIONS = 1,

  /**
   * @generated from enum value: ALTER_SUBSCRIPTION_CONNECTION = 2;
   */
  ALTER_SUBSCRIPTION_CONNECTION = 2,

  /**
   * @generated from enum value: ALTER_SUBSCRIPTION_PUBLICATION = 3;
   */
  ALTER_SUBSCRIPTION_PUBLICATION = 3,

  /**
   * @generated from enum value: ALTER_SUBSCRIPTION_REFRESH = 4;
   */
  ALTER_SUBSCRIPTION_REFRESH = 4,

  /**
   * @generated from enum value: ALTER_SUBSCRIPTION_ENABLED = 5;
   */
  ALTER_SUBSCRIPTION_ENABLED = 5,
}

/**
 * Describes the enum pg_query.AlterSubscriptionType.
 */
export const AlterSubscriptionTypeSchema: GenEnum<AlterSubscriptionType> = /*@__PURE__*/
  enumDesc(file_pg_query, 30);

/**
 * @generated from enum pg_query.OnCommitAction
 */
export enum OnCommitAction {
  /**
   * @generated from enum value: ON_COMMIT_ACTION_UNDEFINED = 0;
   */
  ON_COMMIT_ACTION_UNDEFINED = 0,

  /**
   * @generated from enum value: ONCOMMIT_NOOP = 1;
   */
  ONCOMMIT_NOOP = 1,

  /**
   * @generated from enum value: ONCOMMIT_PRESERVE_ROWS = 2;
   */
  ONCOMMIT_PRESERVE_ROWS = 2,

  /**
   * @generated from enum value: ONCOMMIT_DELETE_ROWS = 3;
   */
  ONCOMMIT_DELETE_ROWS = 3,

  /**
   * @generated from enum value: ONCOMMIT_DROP = 4;
   */
  ONCOMMIT_DROP = 4,
}

/**
 * Describes the enum pg_query.OnCommitAction.
 */
export const OnCommitActionSchema: GenEnum<OnCommitAction> = /*@__PURE__*/
  enumDesc(file_pg_query, 31);

/**
 * @generated from enum pg_query.ParamKind
 */
export enum ParamKind {
  /**
   * @generated from enum value: PARAM_KIND_UNDEFINED = 0;
   */
  PARAM_KIND_UNDEFINED = 0,

  /**
   * @generated from enum value: PARAM_EXTERN = 1;
   */
  PARAM_EXTERN = 1,

  /**
   * @generated from enum value: PARAM_EXEC = 2;
   */
  PARAM_EXEC = 2,

  /**
   * @generated from enum value: PARAM_SUBLINK = 3;
   */
  PARAM_SUBLINK = 3,

  /**
   * @generated from enum value: PARAM_MULTIEXPR = 4;
   */
  PARAM_MULTIEXPR = 4,
}

/**
 * Describes the enum pg_query.ParamKind.
 */
export const ParamKindSchema: GenEnum<ParamKind> = /*@__PURE__*/
  enumDesc(file_pg_query, 32);

/**
 * @generated from enum pg_query.CoercionContext
 */
export enum CoercionContext {
  /**
   * @generated from enum value: COERCION_CONTEXT_UNDEFINED = 0;
   */
  COERCION_CONTEXT_UNDEFINED = 0,

  /**
   * @generated from enum value: COERCION_IMPLICIT = 1;
   */
  COERCION_IMPLICIT = 1,

  /**
   * @generated from enum value: COERCION_ASSIGNMENT = 2;
   */
  COERCION_ASSIGNMENT = 2,

  /**
   * @generated from enum value: COERCION_EXPLICIT = 3;
   */
  COERCION_EXPLICIT = 3,
}

/**
 * Describes the enum pg_query.CoercionContext.
 */
export const CoercionContextSchema: GenEnum<CoercionContext> = /*@__PURE__*/
  enumDesc(file_pg_query, 33);

/**
 * @generated from enum pg_query.CoercionForm
 */
export enum CoercionForm {
  /**
   * @generated from enum value: COERCION_FORM_UNDEFINED = 0;
   */
  COERCION_FORM_UNDEFINED = 0,

  /**
   * @generated from enum value: COERCE_EXPLICIT_CALL = 1;
   */
  COERCE_EXPLICIT_CALL = 1,

  /**
   * @generated from enum value: COERCE_EXPLICIT_CAST = 2;
   */
  COERCE_EXPLICIT_CAST = 2,

  /**
   * @generated from enum value: COERCE_IMPLICIT_CAST = 3;
   */
  COERCE_IMPLICIT_CAST = 3,
}

/**
 * Describes the enum pg_query.CoercionForm.
 */
export const CoercionFormSchema: GenEnum<CoercionForm> = /*@__PURE__*/
  enumDesc(file_pg_query, 34);

/**
 * @generated from enum pg_query.BoolExprType
 */
export enum BoolExprType {
  /**
   * @generated from enum value: BOOL_EXPR_TYPE_UNDEFINED = 0;
   */
  BOOL_EXPR_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: AND_EXPR = 1;
   */
  AND_EXPR = 1,

  /**
   * @generated from enum value: OR_EXPR = 2;
   */
  OR_EXPR = 2,

  /**
   * @generated from enum value: NOT_EXPR = 3;
   */
  NOT_EXPR = 3,
}

/**
 * Describes the enum pg_query.BoolExprType.
 */
export const BoolExprTypeSchema: GenEnum<BoolExprType> = /*@__PURE__*/
  enumDesc(file_pg_query, 35);

/**
 * @generated from enum pg_query.SubLinkType
 */
export enum SubLinkType {
  /**
   * @generated from enum value: SUB_LINK_TYPE_UNDEFINED = 0;
   */
  SUB_LINK_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: EXISTS_SUBLINK = 1;
   */
  EXISTS_SUBLINK = 1,

  /**
   * @generated from enum value: ALL_SUBLINK = 2;
   */
  ALL_SUBLINK = 2,

  /**
   * @generated from enum value: ANY_SUBLINK = 3;
   */
  ANY_SUBLINK = 3,

  /**
   * @generated from enum value: ROWCOMPARE_SUBLINK = 4;
   */
  ROWCOMPARE_SUBLINK = 4,

  /**
   * @generated from enum value: EXPR_SUBLINK = 5;
   */
  EXPR_SUBLINK = 5,

  /**
   * @generated from enum value: MULTIEXPR_SUBLINK = 6;
   */
  MULTIEXPR_SUBLINK = 6,

  /**
   * @generated from enum value: ARRAY_SUBLINK = 7;
   */
  ARRAY_SUBLINK = 7,

  /**
   * @generated from enum value: CTE_SUBLINK = 8;
   */
  CTE_SUBLINK = 8,
}

/**
 * Describes the enum pg_query.SubLinkType.
 */
export const SubLinkTypeSchema: GenEnum<SubLinkType> = /*@__PURE__*/
  enumDesc(file_pg_query, 36);

/**
 * @generated from enum pg_query.RowCompareType
 */
export enum RowCompareType {
  /**
   * @generated from enum value: ROW_COMPARE_TYPE_UNDEFINED = 0;
   */
  ROW_COMPARE_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: ROWCOMPARE_LT = 1;
   */
  ROWCOMPARE_LT = 1,

  /**
   * @generated from enum value: ROWCOMPARE_LE = 2;
   */
  ROWCOMPARE_LE = 2,

  /**
   * @generated from enum value: ROWCOMPARE_EQ = 3;
   */
  ROWCOMPARE_EQ = 3,

  /**
   * @generated from enum value: ROWCOMPARE_GE = 4;
   */
  ROWCOMPARE_GE = 4,

  /**
   * @generated from enum value: ROWCOMPARE_GT = 5;
   */
  ROWCOMPARE_GT = 5,

  /**
   * @generated from enum value: ROWCOMPARE_NE = 6;
   */
  ROWCOMPARE_NE = 6,
}

/**
 * Describes the enum pg_query.RowCompareType.
 */
export const RowCompareTypeSchema: GenEnum<RowCompareType> = /*@__PURE__*/
  enumDesc(file_pg_query, 37);

/**
 * @generated from enum pg_query.MinMaxOp
 */
export enum MinMaxOp {
  /**
   * @generated from enum value: MIN_MAX_OP_UNDEFINED = 0;
   */
  MIN_MAX_OP_UNDEFINED = 0,

  /**
   * @generated from enum value: IS_GREATEST = 1;
   */
  IS_GREATEST = 1,

  /**
   * @generated from enum value: IS_LEAST = 2;
   */
  IS_LEAST = 2,
}

/**
 * Describes the enum pg_query.MinMaxOp.
 */
export const MinMaxOpSchema: GenEnum<MinMaxOp> = /*@__PURE__*/
  enumDesc(file_pg_query, 38);

/**
 * @generated from enum pg_query.SQLValueFunctionOp
 */
export enum SQLValueFunctionOp {
  /**
   * @generated from enum value: SQLVALUE_FUNCTION_OP_UNDEFINED = 0;
   */
  SQLVALUE_FUNCTION_OP_UNDEFINED = 0,

  /**
   * @generated from enum value: SVFOP_CURRENT_DATE = 1;
   */
  SVFOP_CURRENT_DATE = 1,

  /**
   * @generated from enum value: SVFOP_CURRENT_TIME = 2;
   */
  SVFOP_CURRENT_TIME = 2,

  /**
   * @generated from enum value: SVFOP_CURRENT_TIME_N = 3;
   */
  SVFOP_CURRENT_TIME_N = 3,

  /**
   * @generated from enum value: SVFOP_CURRENT_TIMESTAMP = 4;
   */
  SVFOP_CURRENT_TIMESTAMP = 4,

  /**
   * @generated from enum value: SVFOP_CURRENT_TIMESTAMP_N = 5;
   */
  SVFOP_CURRENT_TIMESTAMP_N = 5,

  /**
   * @generated from enum value: SVFOP_LOCALTIME = 6;
   */
  SVFOP_LOCALTIME = 6,

  /**
   * @generated from enum value: SVFOP_LOCALTIME_N = 7;
   */
  SVFOP_LOCALTIME_N = 7,

  /**
   * @generated from enum value: SVFOP_LOCALTIMESTAMP = 8;
   */
  SVFOP_LOCALTIMESTAMP = 8,

  /**
   * @generated from enum value: SVFOP_LOCALTIMESTAMP_N = 9;
   */
  SVFOP_LOCALTIMESTAMP_N = 9,

  /**
   * @generated from enum value: SVFOP_CURRENT_ROLE = 10;
   */
  SVFOP_CURRENT_ROLE = 10,

  /**
   * @generated from enum value: SVFOP_CURRENT_USER = 11;
   */
  SVFOP_CURRENT_USER = 11,

  /**
   * @generated from enum value: SVFOP_USER = 12;
   */
  SVFOP_USER = 12,

  /**
   * @generated from enum value: SVFOP_SESSION_USER = 13;
   */
  SVFOP_SESSION_USER = 13,

  /**
   * @generated from enum value: SVFOP_CURRENT_CATALOG = 14;
   */
  SVFOP_CURRENT_CATALOG = 14,

  /**
   * @generated from enum value: SVFOP_CURRENT_SCHEMA = 15;
   */
  SVFOP_CURRENT_SCHEMA = 15,
}

/**
 * Describes the enum pg_query.SQLValueFunctionOp.
 */
export const SQLValueFunctionOpSchema: GenEnum<SQLValueFunctionOp> = /*@__PURE__*/
  enumDesc(file_pg_query, 39);

/**
 * @generated from enum pg_query.XmlExprOp
 */
export enum XmlExprOp {
  /**
   * @generated from enum value: XML_EXPR_OP_UNDEFINED = 0;
   */
  XML_EXPR_OP_UNDEFINED = 0,

  /**
   * @generated from enum value: IS_XMLCONCAT = 1;
   */
  IS_XMLCONCAT = 1,

  /**
   * @generated from enum value: IS_XMLELEMENT = 2;
   */
  IS_XMLELEMENT = 2,

  /**
   * @generated from enum value: IS_XMLFOREST = 3;
   */
  IS_XMLFOREST = 3,

  /**
   * @generated from enum value: IS_XMLPARSE = 4;
   */
  IS_XMLPARSE = 4,

  /**
   * @generated from enum value: IS_XMLPI = 5;
   */
  IS_XMLPI = 5,

  /**
   * @generated from enum value: IS_XMLROOT = 6;
   */
  IS_XMLROOT = 6,

  /**
   * @generated from enum value: IS_XMLSERIALIZE = 7;
   */
  IS_XMLSERIALIZE = 7,

  /**
   * @generated from enum value: IS_DOCUMENT = 8;
   */
  IS_DOCUMENT = 8,
}

/**
 * Describes the enum pg_query.XmlExprOp.
 */
export const XmlExprOpSchema: GenEnum<XmlExprOp> = /*@__PURE__*/
  enumDesc(file_pg_query, 40);

/**
 * @generated from enum pg_query.XmlOptionType
 */
export enum XmlOptionType {
  /**
   * @generated from enum value: XML_OPTION_TYPE_UNDEFINED = 0;
   */
  XML_OPTION_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: XMLOPTION_DOCUMENT = 1;
   */
  XMLOPTION_DOCUMENT = 1,

  /**
   * @generated from enum value: XMLOPTION_CONTENT = 2;
   */
  XMLOPTION_CONTENT = 2,
}

/**
 * Describes the enum pg_query.XmlOptionType.
 */
export const XmlOptionTypeSchema: GenEnum<XmlOptionType> = /*@__PURE__*/
  enumDesc(file_pg_query, 41);

/**
 * @generated from enum pg_query.NullTestType
 */
export enum NullTestType {
  /**
   * @generated from enum value: NULL_TEST_TYPE_UNDEFINED = 0;
   */
  NULL_TEST_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: IS_NULL = 1;
   */
  IS_NULL = 1,

  /**
   * @generated from enum value: IS_NOT_NULL = 2;
   */
  IS_NOT_NULL = 2,
}

/**
 * Describes the enum pg_query.NullTestType.
 */
export const NullTestTypeSchema: GenEnum<NullTestType> = /*@__PURE__*/
  enumDesc(file_pg_query, 42);

/**
 * @generated from enum pg_query.BoolTestType
 */
export enum BoolTestType {
  /**
   * @generated from enum value: BOOL_TEST_TYPE_UNDEFINED = 0;
   */
  BOOL_TEST_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: IS_TRUE = 1;
   */
  IS_TRUE = 1,

  /**
   * @generated from enum value: IS_NOT_TRUE = 2;
   */
  IS_NOT_TRUE = 2,

  /**
   * @generated from enum value: IS_FALSE = 3;
   */
  IS_FALSE = 3,

  /**
   * @generated from enum value: IS_NOT_FALSE = 4;
   */
  IS_NOT_FALSE = 4,

  /**
   * @generated from enum value: IS_UNKNOWN = 5;
   */
  IS_UNKNOWN = 5,

  /**
   * @generated from enum value: IS_NOT_UNKNOWN = 6;
   */
  IS_NOT_UNKNOWN = 6,
}

/**
 * Describes the enum pg_query.BoolTestType.
 */
export const BoolTestTypeSchema: GenEnum<BoolTestType> = /*@__PURE__*/
  enumDesc(file_pg_query, 43);

/**
 * @generated from enum pg_query.CmdType
 */
export enum CmdType {
  /**
   * @generated from enum value: CMD_TYPE_UNDEFINED = 0;
   */
  CMD_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: CMD_UNKNOWN = 1;
   */
  CMD_UNKNOWN = 1,

  /**
   * @generated from enum value: CMD_SELECT = 2;
   */
  CMD_SELECT = 2,

  /**
   * @generated from enum value: CMD_UPDATE = 3;
   */
  CMD_UPDATE = 3,

  /**
   * @generated from enum value: CMD_INSERT = 4;
   */
  CMD_INSERT = 4,

  /**
   * @generated from enum value: CMD_DELETE = 5;
   */
  CMD_DELETE = 5,

  /**
   * @generated from enum value: CMD_UTILITY = 6;
   */
  CMD_UTILITY = 6,

  /**
   * @generated from enum value: CMD_NOTHING = 7;
   */
  CMD_NOTHING = 7,
}

/**
 * Describes the enum pg_query.CmdType.
 */
export const CmdTypeSchema: GenEnum<CmdType> = /*@__PURE__*/
  enumDesc(file_pg_query, 44);

/**
 * @generated from enum pg_query.JoinType
 */
export enum JoinType {
  /**
   * @generated from enum value: JOIN_TYPE_UNDEFINED = 0;
   */
  JOIN_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: JOIN_INNER = 1;
   */
  JOIN_INNER = 1,

  /**
   * @generated from enum value: JOIN_LEFT = 2;
   */
  JOIN_LEFT = 2,

  /**
   * @generated from enum value: JOIN_FULL = 3;
   */
  JOIN_FULL = 3,

  /**
   * @generated from enum value: JOIN_RIGHT = 4;
   */
  JOIN_RIGHT = 4,

  /**
   * @generated from enum value: JOIN_SEMI = 5;
   */
  JOIN_SEMI = 5,

  /**
   * @generated from enum value: JOIN_ANTI = 6;
   */
  JOIN_ANTI = 6,

  /**
   * @generated from enum value: JOIN_UNIQUE_OUTER = 7;
   */
  JOIN_UNIQUE_OUTER = 7,

  /**
   * @generated from enum value: JOIN_UNIQUE_INNER = 8;
   */
  JOIN_UNIQUE_INNER = 8,
}

/**
 * Describes the enum pg_query.JoinType.
 */
export const JoinTypeSchema: GenEnum<JoinType> = /*@__PURE__*/
  enumDesc(file_pg_query, 45);

/**
 * @generated from enum pg_query.AggStrategy
 */
export enum AggStrategy {
  /**
   * @generated from enum value: AGG_STRATEGY_UNDEFINED = 0;
   */
  AGG_STRATEGY_UNDEFINED = 0,

  /**
   * @generated from enum value: AGG_PLAIN = 1;
   */
  AGG_PLAIN = 1,

  /**
   * @generated from enum value: AGG_SORTED = 2;
   */
  AGG_SORTED = 2,

  /**
   * @generated from enum value: AGG_HASHED = 3;
   */
  AGG_HASHED = 3,

  /**
   * @generated from enum value: AGG_MIXED = 4;
   */
  AGG_MIXED = 4,
}

/**
 * Describes the enum pg_query.AggStrategy.
 */
export const AggStrategySchema: GenEnum<AggStrategy> = /*@__PURE__*/
  enumDesc(file_pg_query, 46);

/**
 * @generated from enum pg_query.AggSplit
 */
export enum AggSplit {
  /**
   * @generated from enum value: AGG_SPLIT_UNDEFINED = 0;
   */
  AGG_SPLIT_UNDEFINED = 0,

  /**
   * @generated from enum value: AGGSPLIT_SIMPLE = 1;
   */
  AGGSPLIT_SIMPLE = 1,

  /**
   * @generated from enum value: AGGSPLIT_INITIAL_SERIAL = 2;
   */
  AGGSPLIT_INITIAL_SERIAL = 2,

  /**
   * @generated from enum value: AGGSPLIT_FINAL_DESERIAL = 3;
   */
  AGGSPLIT_FINAL_DESERIAL = 3,
}

/**
 * Describes the enum pg_query.AggSplit.
 */
export const AggSplitSchema: GenEnum<AggSplit> = /*@__PURE__*/
  enumDesc(file_pg_query, 47);

/**
 * @generated from enum pg_query.SetOpCmd
 */
export enum SetOpCmd {
  /**
   * @generated from enum value: SET_OP_CMD_UNDEFINED = 0;
   */
  SET_OP_CMD_UNDEFINED = 0,

  /**
   * @generated from enum value: SETOPCMD_INTERSECT = 1;
   */
  SETOPCMD_INTERSECT = 1,

  /**
   * @generated from enum value: SETOPCMD_INTERSECT_ALL = 2;
   */
  SETOPCMD_INTERSECT_ALL = 2,

  /**
   * @generated from enum value: SETOPCMD_EXCEPT = 3;
   */
  SETOPCMD_EXCEPT = 3,

  /**
   * @generated from enum value: SETOPCMD_EXCEPT_ALL = 4;
   */
  SETOPCMD_EXCEPT_ALL = 4,
}

/**
 * Describes the enum pg_query.SetOpCmd.
 */
export const SetOpCmdSchema: GenEnum<SetOpCmd> = /*@__PURE__*/
  enumDesc(file_pg_query, 48);

/**
 * @generated from enum pg_query.SetOpStrategy
 */
export enum SetOpStrategy {
  /**
   * @generated from enum value: SET_OP_STRATEGY_UNDEFINED = 0;
   */
  SET_OP_STRATEGY_UNDEFINED = 0,

  /**
   * @generated from enum value: SETOP_SORTED = 1;
   */
  SETOP_SORTED = 1,

  /**
   * @generated from enum value: SETOP_HASHED = 2;
   */
  SETOP_HASHED = 2,
}

/**
 * Describes the enum pg_query.SetOpStrategy.
 */
export const SetOpStrategySchema: GenEnum<SetOpStrategy> = /*@__PURE__*/
  enumDesc(file_pg_query, 49);

/**
 * @generated from enum pg_query.OnConflictAction
 */
export enum OnConflictAction {
  /**
   * @generated from enum value: ON_CONFLICT_ACTION_UNDEFINED = 0;
   */
  ON_CONFLICT_ACTION_UNDEFINED = 0,

  /**
   * @generated from enum value: ONCONFLICT_NONE = 1;
   */
  ONCONFLICT_NONE = 1,

  /**
   * @generated from enum value: ONCONFLICT_NOTHING = 2;
   */
  ONCONFLICT_NOTHING = 2,

  /**
   * @generated from enum value: ONCONFLICT_UPDATE = 3;
   */
  ONCONFLICT_UPDATE = 3,
}

/**
 * Describes the enum pg_query.OnConflictAction.
 */
export const OnConflictActionSchema: GenEnum<OnConflictAction> = /*@__PURE__*/
  enumDesc(file_pg_query, 50);

/**
 * @generated from enum pg_query.LimitOption
 */
export enum LimitOption {
  /**
   * @generated from enum value: LIMIT_OPTION_UNDEFINED = 0;
   */
  UNDEFINED = 0,

  /**
   * @generated from enum value: LIMIT_OPTION_DEFAULT = 1;
   */
  DEFAULT = 1,

  /**
   * @generated from enum value: LIMIT_OPTION_COUNT = 2;
   */
  COUNT = 2,

  /**
   * @generated from enum value: LIMIT_OPTION_WITH_TIES = 3;
   */
  WITH_TIES = 3,
}

/**
 * Describes the enum pg_query.LimitOption.
 */
export const LimitOptionSchema: GenEnum<LimitOption> = /*@__PURE__*/
  enumDesc(file_pg_query, 51);

/**
 * @generated from enum pg_query.LockClauseStrength
 */
export enum LockClauseStrength {
  /**
   * @generated from enum value: LOCK_CLAUSE_STRENGTH_UNDEFINED = 0;
   */
  LOCK_CLAUSE_STRENGTH_UNDEFINED = 0,

  /**
   * @generated from enum value: LCS_NONE = 1;
   */
  LCS_NONE = 1,

  /**
   * @generated from enum value: LCS_FORKEYSHARE = 2;
   */
  LCS_FORKEYSHARE = 2,

  /**
   * @generated from enum value: LCS_FORSHARE = 3;
   */
  LCS_FORSHARE = 3,

  /**
   * @generated from enum value: LCS_FORNOKEYUPDATE = 4;
   */
  LCS_FORNOKEYUPDATE = 4,

  /**
   * @generated from enum value: LCS_FORUPDATE = 5;
   */
  LCS_FORUPDATE = 5,
}

/**
 * Describes the enum pg_query.LockClauseStrength.
 */
export const LockClauseStrengthSchema: GenEnum<LockClauseStrength> = /*@__PURE__*/
  enumDesc(file_pg_query, 52);

/**
 * @generated from enum pg_query.LockWaitPolicy
 */
export enum LockWaitPolicy {
  /**
   * @generated from enum value: LOCK_WAIT_POLICY_UNDEFINED = 0;
   */
  LOCK_WAIT_POLICY_UNDEFINED = 0,

  /**
   * @generated from enum value: LockWaitBlock = 1;
   */
  LockWaitBlock = 1,

  /**
   * @generated from enum value: LockWaitSkip = 2;
   */
  LockWaitSkip = 2,

  /**
   * @generated from enum value: LockWaitError = 3;
   */
  LockWaitError = 3,
}

/**
 * Describes the enum pg_query.LockWaitPolicy.
 */
export const LockWaitPolicySchema: GenEnum<LockWaitPolicy> = /*@__PURE__*/
  enumDesc(file_pg_query, 53);

/**
 * @generated from enum pg_query.LockTupleMode
 */
export enum LockTupleMode {
  /**
   * @generated from enum value: LOCK_TUPLE_MODE_UNDEFINED = 0;
   */
  LOCK_TUPLE_MODE_UNDEFINED = 0,

  /**
   * @generated from enum value: LockTupleKeyShare = 1;
   */
  LockTupleKeyShare = 1,

  /**
   * @generated from enum value: LockTupleShare = 2;
   */
  LockTupleShare = 2,

  /**
   * @generated from enum value: LockTupleNoKeyExclusive = 3;
   */
  LockTupleNoKeyExclusive = 3,

  /**
   * @generated from enum value: LockTupleExclusive = 4;
   */
  LockTupleExclusive = 4,
}

/**
 * Describes the enum pg_query.LockTupleMode.
 */
export const LockTupleModeSchema: GenEnum<LockTupleMode> = /*@__PURE__*/
  enumDesc(file_pg_query, 54);

/**
 * @generated from enum pg_query.KeywordKind
 */
export enum KeywordKind {
  /**
   * @generated from enum value: NO_KEYWORD = 0;
   */
  NO_KEYWORD = 0,

  /**
   * @generated from enum value: UNRESERVED_KEYWORD = 1;
   */
  UNRESERVED_KEYWORD = 1,

  /**
   * @generated from enum value: COL_NAME_KEYWORD = 2;
   */
  COL_NAME_KEYWORD = 2,

  /**
   * @generated from enum value: TYPE_FUNC_NAME_KEYWORD = 3;
   */
  TYPE_FUNC_NAME_KEYWORD = 3,

  /**
   * @generated from enum value: RESERVED_KEYWORD = 4;
   */
  RESERVED_KEYWORD = 4,
}

/**
 * Describes the enum pg_query.KeywordKind.
 */
export const KeywordKindSchema: GenEnum<KeywordKind> = /*@__PURE__*/
  enumDesc(file_pg_query, 55);

/**
 * @generated from enum pg_query.Token
 */
export enum Token {
  /**
   * @generated from enum value: NUL = 0;
   */
  NUL = 0,

  /**
   * Single-character tokens that are returned 1:1 (identical with "self" list in scan.l)
   * Either supporting syntax, or single-character operators (some can be both)
   * Also see https://www.postgresql.org/docs/12/sql-syntax-lexical.html#SQL-SYNTAX-SPECIAL-CHARS
   *
   * "%"
   *
   * @generated from enum value: ASCII_37 = 37;
   */
  ASCII_37 = 37,

  /**
   * "("
   *
   * @generated from enum value: ASCII_40 = 40;
   */
  ASCII_40 = 40,

  /**
   * ")"
   *
   * @generated from enum value: ASCII_41 = 41;
   */
  ASCII_41 = 41,

  /**
   * "*"
   *
   * @generated from enum value: ASCII_42 = 42;
   */
  ASCII_42 = 42,

  /**
   * "+"
   *
   * @generated from enum value: ASCII_43 = 43;
   */
  ASCII_43 = 43,

  /**
   * ","
   *
   * @generated from enum value: ASCII_44 = 44;
   */
  ASCII_44 = 44,

  /**
   * "-"
   *
   * @generated from enum value: ASCII_45 = 45;
   */
  ASCII_45 = 45,

  /**
   * "."
   *
   * @generated from enum value: ASCII_46 = 46;
   */
  ASCII_46 = 46,

  /**
   * "/"
   *
   * @generated from enum value: ASCII_47 = 47;
   */
  ASCII_47 = 47,

  /**
   * ":"
   *
   * @generated from enum value: ASCII_58 = 58;
   */
  ASCII_58 = 58,

  /**
   * ";"
   *
   * @generated from enum value: ASCII_59 = 59;
   */
  ASCII_59 = 59,

  /**
   * "<"
   *
   * @generated from enum value: ASCII_60 = 60;
   */
  ASCII_60 = 60,

  /**
   * "="
   *
   * @generated from enum value: ASCII_61 = 61;
   */
  ASCII_61 = 61,

  /**
   * ">"
   *
   * @generated from enum value: ASCII_62 = 62;
   */
  ASCII_62 = 62,

  /**
   * "?"
   *
   * @generated from enum value: ASCII_63 = 63;
   */
  ASCII_63 = 63,

  /**
   * "["
   *
   * @generated from enum value: ASCII_91 = 91;
   */
  ASCII_91 = 91,

  /**
   * "\"
   *
   * @generated from enum value: ASCII_92 = 92;
   */
  ASCII_92 = 92,

  /**
   * "]"
   *
   * @generated from enum value: ASCII_93 = 93;
   */
  ASCII_93 = 93,

  /**
   * "^"
   *
   * @generated from enum value: ASCII_94 = 94;
   */
  ASCII_94 = 94,

  /**
   * Named tokens in scan.l
   *
   * @generated from enum value: IDENT = 258;
   */
  IDENT = 258,

  /**
   * @generated from enum value: UIDENT = 259;
   */
  UIDENT = 259,

  /**
   * @generated from enum value: FCONST = 260;
   */
  FCONST = 260,

  /**
   * @generated from enum value: SCONST = 261;
   */
  SCONST = 261,

  /**
   * @generated from enum value: USCONST = 262;
   */
  USCONST = 262,

  /**
   * @generated from enum value: BCONST = 263;
   */
  BCONST = 263,

  /**
   * @generated from enum value: XCONST = 264;
   */
  XCONST = 264,

  /**
   * @generated from enum value: Op = 265;
   */
  Op = 265,

  /**
   * @generated from enum value: ICONST = 266;
   */
  ICONST = 266,

  /**
   * @generated from enum value: PARAM = 267;
   */
  PARAM = 267,

  /**
   * @generated from enum value: TYPECAST = 268;
   */
  TYPECAST = 268,

  /**
   * @generated from enum value: DOT_DOT = 269;
   */
  DOT_DOT = 269,

  /**
   * @generated from enum value: COLON_EQUALS = 270;
   */
  COLON_EQUALS = 270,

  /**
   * @generated from enum value: EQUALS_GREATER = 271;
   */
  EQUALS_GREATER = 271,

  /**
   * @generated from enum value: LESS_EQUALS = 272;
   */
  LESS_EQUALS = 272,

  /**
   * @generated from enum value: GREATER_EQUALS = 273;
   */
  GREATER_EQUALS = 273,

  /**
   * @generated from enum value: NOT_EQUALS = 274;
   */
  NOT_EQUALS = 274,

  /**
   * @generated from enum value: SQL_COMMENT = 275;
   */
  SQL_COMMENT = 275,

  /**
   * @generated from enum value: C_COMMENT = 276;
   */
  C_COMMENT = 276,

  /**
   * @generated from enum value: ABORT_P = 277;
   */
  ABORT_P = 277,

  /**
   * @generated from enum value: ABSOLUTE_P = 278;
   */
  ABSOLUTE_P = 278,

  /**
   * @generated from enum value: ACCESS = 279;
   */
  ACCESS = 279,

  /**
   * @generated from enum value: ACTION = 280;
   */
  ACTION = 280,

  /**
   * @generated from enum value: ADD_P = 281;
   */
  ADD_P = 281,

  /**
   * @generated from enum value: ADMIN = 282;
   */
  ADMIN = 282,

  /**
   * @generated from enum value: AFTER = 283;
   */
  AFTER = 283,

  /**
   * @generated from enum value: AGGREGATE = 284;
   */
  AGGREGATE = 284,

  /**
   * @generated from enum value: ALL = 285;
   */
  ALL = 285,

  /**
   * @generated from enum value: ALSO = 286;
   */
  ALSO = 286,

  /**
   * @generated from enum value: ALTER = 287;
   */
  ALTER = 287,

  /**
   * @generated from enum value: ALWAYS = 288;
   */
  ALWAYS = 288,

  /**
   * @generated from enum value: ANALYSE = 289;
   */
  ANALYSE = 289,

  /**
   * @generated from enum value: ANALYZE = 290;
   */
  ANALYZE = 290,

  /**
   * @generated from enum value: AND = 291;
   */
  AND = 291,

  /**
   * @generated from enum value: ANY = 292;
   */
  ANY = 292,

  /**
   * @generated from enum value: ARRAY = 293;
   */
  ARRAY = 293,

  /**
   * @generated from enum value: AS = 294;
   */
  AS = 294,

  /**
   * @generated from enum value: ASC = 295;
   */
  ASC = 295,

  /**
   * @generated from enum value: ASSERTION = 296;
   */
  ASSERTION = 296,

  /**
   * @generated from enum value: ASSIGNMENT = 297;
   */
  ASSIGNMENT = 297,

  /**
   * @generated from enum value: ASYMMETRIC = 298;
   */
  ASYMMETRIC = 298,

  /**
   * @generated from enum value: AT = 299;
   */
  AT = 299,

  /**
   * @generated from enum value: ATTACH = 300;
   */
  ATTACH = 300,

  /**
   * @generated from enum value: ATTRIBUTE = 301;
   */
  ATTRIBUTE = 301,

  /**
   * @generated from enum value: AUTHORIZATION = 302;
   */
  AUTHORIZATION = 302,

  /**
   * @generated from enum value: BACKWARD = 303;
   */
  BACKWARD = 303,

  /**
   * @generated from enum value: BEFORE = 304;
   */
  BEFORE = 304,

  /**
   * @generated from enum value: BEGIN_P = 305;
   */
  BEGIN_P = 305,

  /**
   * @generated from enum value: BETWEEN = 306;
   */
  BETWEEN = 306,

  /**
   * @generated from enum value: BIGINT = 307;
   */
  BIGINT = 307,

  /**
   * @generated from enum value: BINARY = 308;
   */
  BINARY = 308,

  /**
   * @generated from enum value: BIT = 309;
   */
  BIT = 309,

  /**
   * @generated from enum value: BOOLEAN_P = 310;
   */
  BOOLEAN_P = 310,

  /**
   * @generated from enum value: BOTH = 311;
   */
  BOTH = 311,

  /**
   * @generated from enum value: BY = 312;
   */
  BY = 312,

  /**
   * @generated from enum value: CACHE = 313;
   */
  CACHE = 313,

  /**
   * @generated from enum value: CALL = 314;
   */
  CALL = 314,

  /**
   * @generated from enum value: CALLED = 315;
   */
  CALLED = 315,

  /**
   * @generated from enum value: CASCADE = 316;
   */
  CASCADE = 316,

  /**
   * @generated from enum value: CASCADED = 317;
   */
  CASCADED = 317,

  /**
   * @generated from enum value: CASE = 318;
   */
  CASE = 318,

  /**
   * @generated from enum value: CAST = 319;
   */
  CAST = 319,

  /**
   * @generated from enum value: CATALOG_P = 320;
   */
  CATALOG_P = 320,

  /**
   * @generated from enum value: CHAIN = 321;
   */
  CHAIN = 321,

  /**
   * @generated from enum value: CHAR_P = 322;
   */
  CHAR_P = 322,

  /**
   * @generated from enum value: CHARACTER = 323;
   */
  CHARACTER = 323,

  /**
   * @generated from enum value: CHARACTERISTICS = 324;
   */
  CHARACTERISTICS = 324,

  /**
   * @generated from enum value: CHECK = 325;
   */
  CHECK = 325,

  /**
   * @generated from enum value: CHECKPOINT = 326;
   */
  CHECKPOINT = 326,

  /**
   * @generated from enum value: CLASS = 327;
   */
  CLASS = 327,

  /**
   * @generated from enum value: CLOSE = 328;
   */
  CLOSE = 328,

  /**
   * @generated from enum value: CLUSTER = 329;
   */
  CLUSTER = 329,

  /**
   * @generated from enum value: COALESCE = 330;
   */
  COALESCE = 330,

  /**
   * @generated from enum value: COLLATE = 331;
   */
  COLLATE = 331,

  /**
   * @generated from enum value: COLLATION = 332;
   */
  COLLATION = 332,

  /**
   * @generated from enum value: COLUMN = 333;
   */
  COLUMN = 333,

  /**
   * @generated from enum value: COLUMNS = 334;
   */
  COLUMNS = 334,

  /**
   * @generated from enum value: COMMENT = 335;
   */
  COMMENT = 335,

  /**
   * @generated from enum value: COMMENTS = 336;
   */
  COMMENTS = 336,

  /**
   * @generated from enum value: COMMIT = 337;
   */
  COMMIT = 337,

  /**
   * @generated from enum value: COMMITTED = 338;
   */
  COMMITTED = 338,

  /**
   * @generated from enum value: CONCURRENTLY = 339;
   */
  CONCURRENTLY = 339,

  /**
   * @generated from enum value: CONFIGURATION = 340;
   */
  CONFIGURATION = 340,

  /**
   * @generated from enum value: CONFLICT = 341;
   */
  CONFLICT = 341,

  /**
   * @generated from enum value: CONNECTION = 342;
   */
  CONNECTION = 342,

  /**
   * @generated from enum value: CONSTRAINT = 343;
   */
  CONSTRAINT = 343,

  /**
   * @generated from enum value: CONSTRAINTS = 344;
   */
  CONSTRAINTS = 344,

  /**
   * @generated from enum value: CONTENT_P = 345;
   */
  CONTENT_P = 345,

  /**
   * @generated from enum value: CONTINUE_P = 346;
   */
  CONTINUE_P = 346,

  /**
   * @generated from enum value: CONVERSION_P = 347;
   */
  CONVERSION_P = 347,

  /**
   * @generated from enum value: COPY = 348;
   */
  COPY = 348,

  /**
   * @generated from enum value: COST = 349;
   */
  COST = 349,

  /**
   * @generated from enum value: CREATE = 350;
   */
  CREATE = 350,

  /**
   * @generated from enum value: CROSS = 351;
   */
  CROSS = 351,

  /**
   * @generated from enum value: CSV = 352;
   */
  CSV = 352,

  /**
   * @generated from enum value: CUBE = 353;
   */
  CUBE = 353,

  /**
   * @generated from enum value: CURRENT_P = 354;
   */
  CURRENT_P = 354,

  /**
   * @generated from enum value: CURRENT_CATALOG = 355;
   */
  CURRENT_CATALOG = 355,

  /**
   * @generated from enum value: CURRENT_DATE = 356;
   */
  CURRENT_DATE = 356,

  /**
   * @generated from enum value: CURRENT_ROLE = 357;
   */
  CURRENT_ROLE = 357,

  /**
   * @generated from enum value: CURRENT_SCHEMA = 358;
   */
  CURRENT_SCHEMA = 358,

  /**
   * @generated from enum value: CURRENT_TIME = 359;
   */
  CURRENT_TIME = 359,

  /**
   * @generated from enum value: CURRENT_TIMESTAMP = 360;
   */
  CURRENT_TIMESTAMP = 360,

  /**
   * @generated from enum value: CURRENT_USER = 361;
   */
  CURRENT_USER = 361,

  /**
   * @generated from enum value: CURSOR = 362;
   */
  CURSOR = 362,

  /**
   * @generated from enum value: CYCLE = 363;
   */
  CYCLE = 363,

  /**
   * @generated from enum value: DATA_P = 364;
   */
  DATA_P = 364,

  /**
   * @generated from enum value: DATABASE = 365;
   */
  DATABASE = 365,

  /**
   * @generated from enum value: DAY_P = 366;
   */
  DAY_P = 366,

  /**
   * @generated from enum value: DEALLOCATE = 367;
   */
  DEALLOCATE = 367,

  /**
   * @generated from enum value: DEC = 368;
   */
  DEC = 368,

  /**
   * @generated from enum value: DECIMAL_P = 369;
   */
  DECIMAL_P = 369,

  /**
   * @generated from enum value: DECLARE = 370;
   */
  DECLARE = 370,

  /**
   * @generated from enum value: DEFAULT = 371;
   */
  DEFAULT = 371,

  /**
   * @generated from enum value: DEFAULTS = 372;
   */
  DEFAULTS = 372,

  /**
   * @generated from enum value: DEFERRABLE = 373;
   */
  DEFERRABLE = 373,

  /**
   * @generated from enum value: DEFERRED = 374;
   */
  DEFERRED = 374,

  /**
   * @generated from enum value: DEFINER = 375;
   */
  DEFINER = 375,

  /**
   * @generated from enum value: DELETE_P = 376;
   */
  DELETE_P = 376,

  /**
   * @generated from enum value: DELIMITER = 377;
   */
  DELIMITER = 377,

  /**
   * @generated from enum value: DELIMITERS = 378;
   */
  DELIMITERS = 378,

  /**
   * @generated from enum value: DEPENDS = 379;
   */
  DEPENDS = 379,

  /**
   * @generated from enum value: DESC = 380;
   */
  DESC = 380,

  /**
   * @generated from enum value: DETACH = 381;
   */
  DETACH = 381,

  /**
   * @generated from enum value: DICTIONARY = 382;
   */
  DICTIONARY = 382,

  /**
   * @generated from enum value: DISABLE_P = 383;
   */
  DISABLE_P = 383,

  /**
   * @generated from enum value: DISCARD = 384;
   */
  DISCARD = 384,

  /**
   * @generated from enum value: DISTINCT = 385;
   */
  DISTINCT = 385,

  /**
   * @generated from enum value: DO = 386;
   */
  DO = 386,

  /**
   * @generated from enum value: DOCUMENT_P = 387;
   */
  DOCUMENT_P = 387,

  /**
   * @generated from enum value: DOMAIN_P = 388;
   */
  DOMAIN_P = 388,

  /**
   * @generated from enum value: DOUBLE_P = 389;
   */
  DOUBLE_P = 389,

  /**
   * @generated from enum value: DROP = 390;
   */
  DROP = 390,

  /**
   * @generated from enum value: EACH = 391;
   */
  EACH = 391,

  /**
   * @generated from enum value: ELSE = 392;
   */
  ELSE = 392,

  /**
   * @generated from enum value: ENABLE_P = 393;
   */
  ENABLE_P = 393,

  /**
   * @generated from enum value: ENCODING = 394;
   */
  ENCODING = 394,

  /**
   * @generated from enum value: ENCRYPTED = 395;
   */
  ENCRYPTED = 395,

  /**
   * @generated from enum value: END_P = 396;
   */
  END_P = 396,

  /**
   * @generated from enum value: ENUM_P = 397;
   */
  ENUM_P = 397,

  /**
   * @generated from enum value: ESCAPE = 398;
   */
  ESCAPE = 398,

  /**
   * @generated from enum value: EVENT = 399;
   */
  EVENT = 399,

  /**
   * @generated from enum value: EXCEPT = 400;
   */
  EXCEPT = 400,

  /**
   * @generated from enum value: EXCLUDE = 401;
   */
  EXCLUDE = 401,

  /**
   * @generated from enum value: EXCLUDING = 402;
   */
  EXCLUDING = 402,

  /**
   * @generated from enum value: EXCLUSIVE = 403;
   */
  EXCLUSIVE = 403,

  /**
   * @generated from enum value: EXECUTE = 404;
   */
  EXECUTE = 404,

  /**
   * @generated from enum value: EXISTS = 405;
   */
  EXISTS = 405,

  /**
   * @generated from enum value: EXPLAIN = 406;
   */
  EXPLAIN = 406,

  /**
   * @generated from enum value: EXPRESSION = 407;
   */
  EXPRESSION = 407,

  /**
   * @generated from enum value: EXTENSION = 408;
   */
  EXTENSION = 408,

  /**
   * @generated from enum value: EXTERNAL = 409;
   */
  EXTERNAL = 409,

  /**
   * @generated from enum value: EXTRACT = 410;
   */
  EXTRACT = 410,

  /**
   * @generated from enum value: FALSE_P = 411;
   */
  FALSE_P = 411,

  /**
   * @generated from enum value: FAMILY = 412;
   */
  FAMILY = 412,

  /**
   * @generated from enum value: FETCH = 413;
   */
  FETCH = 413,

  /**
   * @generated from enum value: FILTER = 414;
   */
  FILTER = 414,

  /**
   * @generated from enum value: FIRST_P = 415;
   */
  FIRST_P = 415,

  /**
   * @generated from enum value: FLOAT_P = 416;
   */
  FLOAT_P = 416,

  /**
   * @generated from enum value: FOLLOWING = 417;
   */
  FOLLOWING = 417,

  /**
   * @generated from enum value: FOR = 418;
   */
  FOR = 418,

  /**
   * @generated from enum value: FORCE = 419;
   */
  FORCE = 419,

  /**
   * @generated from enum value: FOREIGN = 420;
   */
  FOREIGN = 420,

  /**
   * @generated from enum value: FORWARD = 421;
   */
  FORWARD = 421,

  /**
   * @generated from enum value: FREEZE = 422;
   */
  FREEZE = 422,

  /**
   * @generated from enum value: FROM = 423;
   */
  FROM = 423,

  /**
   * @generated from enum value: FULL = 424;
   */
  FULL = 424,

  /**
   * @generated from enum value: FUNCTION = 425;
   */
  FUNCTION = 425,

  /**
   * @generated from enum value: FUNCTIONS = 426;
   */
  FUNCTIONS = 426,

  /**
   * @generated from enum value: GENERATED = 427;
   */
  GENERATED = 427,

  /**
   * @generated from enum value: GLOBAL = 428;
   */
  GLOBAL = 428,

  /**
   * @generated from enum value: GRANT = 429;
   */
  GRANT = 429,

  /**
   * @generated from enum value: GRANTED = 430;
   */
  GRANTED = 430,

  /**
   * @generated from enum value: GREATEST = 431;
   */
  GREATEST = 431,

  /**
   * @generated from enum value: GROUP_P = 432;
   */
  GROUP_P = 432,

  /**
   * @generated from enum value: GROUPING = 433;
   */
  GROUPING = 433,

  /**
   * @generated from enum value: GROUPS = 434;
   */
  GROUPS = 434,

  /**
   * @generated from enum value: HANDLER = 435;
   */
  HANDLER = 435,

  /**
   * @generated from enum value: HAVING = 436;
   */
  HAVING = 436,

  /**
   * @generated from enum value: HEADER_P = 437;
   */
  HEADER_P = 437,

  /**
   * @generated from enum value: HOLD = 438;
   */
  HOLD = 438,

  /**
   * @generated from enum value: HOUR_P = 439;
   */
  HOUR_P = 439,

  /**
   * @generated from enum value: IDENTITY_P = 440;
   */
  IDENTITY_P = 440,

  /**
   * @generated from enum value: IF_P = 441;
   */
  IF_P = 441,

  /**
   * @generated from enum value: ILIKE = 442;
   */
  ILIKE = 442,

  /**
   * @generated from enum value: IMMEDIATE = 443;
   */
  IMMEDIATE = 443,

  /**
   * @generated from enum value: IMMUTABLE = 444;
   */
  IMMUTABLE = 444,

  /**
   * @generated from enum value: IMPLICIT_P = 445;
   */
  IMPLICIT_P = 445,

  /**
   * @generated from enum value: IMPORT_P = 446;
   */
  IMPORT_P = 446,

  /**
   * @generated from enum value: IN_P = 447;
   */
  IN_P = 447,

  /**
   * @generated from enum value: INCLUDE = 448;
   */
  INCLUDE = 448,

  /**
   * @generated from enum value: INCLUDING = 449;
   */
  INCLUDING = 449,

  /**
   * @generated from enum value: INCREMENT = 450;
   */
  INCREMENT = 450,

  /**
   * @generated from enum value: INDEX = 451;
   */
  INDEX = 451,

  /**
   * @generated from enum value: INDEXES = 452;
   */
  INDEXES = 452,

  /**
   * @generated from enum value: INHERIT = 453;
   */
  INHERIT = 453,

  /**
   * @generated from enum value: INHERITS = 454;
   */
  INHERITS = 454,

  /**
   * @generated from enum value: INITIALLY = 455;
   */
  INITIALLY = 455,

  /**
   * @generated from enum value: INLINE_P = 456;
   */
  INLINE_P = 456,

  /**
   * @generated from enum value: INNER_P = 457;
   */
  INNER_P = 457,

  /**
   * @generated from enum value: INOUT = 458;
   */
  INOUT = 458,

  /**
   * @generated from enum value: INPUT_P = 459;
   */
  INPUT_P = 459,

  /**
   * @generated from enum value: INSENSITIVE = 460;
   */
  INSENSITIVE = 460,

  /**
   * @generated from enum value: INSERT = 461;
   */
  INSERT = 461,

  /**
   * @generated from enum value: INSTEAD = 462;
   */
  INSTEAD = 462,

  /**
   * @generated from enum value: INT_P = 463;
   */
  INT_P = 463,

  /**
   * @generated from enum value: INTEGER = 464;
   */
  INTEGER = 464,

  /**
   * @generated from enum value: INTERSECT = 465;
   */
  INTERSECT = 465,

  /**
   * @generated from enum value: INTERVAL = 466;
   */
  INTERVAL = 466,

  /**
   * @generated from enum value: INTO = 467;
   */
  INTO = 467,

  /**
   * @generated from enum value: INVOKER = 468;
   */
  INVOKER = 468,

  /**
   * @generated from enum value: IS = 469;
   */
  IS = 469,

  /**
   * @generated from enum value: ISNULL = 470;
   */
  ISNULL = 470,

  /**
   * @generated from enum value: ISOLATION = 471;
   */
  ISOLATION = 471,

  /**
   * @generated from enum value: JOIN = 472;
   */
  JOIN = 472,

  /**
   * @generated from enum value: KEY = 473;
   */
  KEY = 473,

  /**
   * @generated from enum value: LABEL = 474;
   */
  LABEL = 474,

  /**
   * @generated from enum value: LANGUAGE = 475;
   */
  LANGUAGE = 475,

  /**
   * @generated from enum value: LARGE_P = 476;
   */
  LARGE_P = 476,

  /**
   * @generated from enum value: LAST_P = 477;
   */
  LAST_P = 477,

  /**
   * @generated from enum value: LATERAL_P = 478;
   */
  LATERAL_P = 478,

  /**
   * @generated from enum value: LEADING = 479;
   */
  LEADING = 479,

  /**
   * @generated from enum value: LEAKPROOF = 480;
   */
  LEAKPROOF = 480,

  /**
   * @generated from enum value: LEAST = 481;
   */
  LEAST = 481,

  /**
   * @generated from enum value: LEFT = 482;
   */
  LEFT = 482,

  /**
   * @generated from enum value: LEVEL = 483;
   */
  LEVEL = 483,

  /**
   * @generated from enum value: LIKE = 484;
   */
  LIKE = 484,

  /**
   * @generated from enum value: LIMIT = 485;
   */
  LIMIT = 485,

  /**
   * @generated from enum value: LISTEN = 486;
   */
  LISTEN = 486,

  /**
   * @generated from enum value: LOAD = 487;
   */
  LOAD = 487,

  /**
   * @generated from enum value: LOCAL = 488;
   */
  LOCAL = 488,

  /**
   * @generated from enum value: LOCALTIME = 489;
   */
  LOCALTIME = 489,

  /**
   * @generated from enum value: LOCALTIMESTAMP = 490;
   */
  LOCALTIMESTAMP = 490,

  /**
   * @generated from enum value: LOCATION = 491;
   */
  LOCATION = 491,

  /**
   * @generated from enum value: LOCK_P = 492;
   */
  LOCK_P = 492,

  /**
   * @generated from enum value: LOCKED = 493;
   */
  LOCKED = 493,

  /**
   * @generated from enum value: LOGGED = 494;
   */
  LOGGED = 494,

  /**
   * @generated from enum value: MAPPING = 495;
   */
  MAPPING = 495,

  /**
   * @generated from enum value: MATCH = 496;
   */
  MATCH = 496,

  /**
   * @generated from enum value: MATERIALIZED = 497;
   */
  MATERIALIZED = 497,

  /**
   * @generated from enum value: MAXVALUE = 498;
   */
  MAXVALUE = 498,

  /**
   * @generated from enum value: METHOD = 499;
   */
  METHOD = 499,

  /**
   * @generated from enum value: MINUTE_P = 500;
   */
  MINUTE_P = 500,

  /**
   * @generated from enum value: MINVALUE = 501;
   */
  MINVALUE = 501,

  /**
   * @generated from enum value: MODE = 502;
   */
  MODE = 502,

  /**
   * @generated from enum value: MONTH_P = 503;
   */
  MONTH_P = 503,

  /**
   * @generated from enum value: MOVE = 504;
   */
  MOVE = 504,

  /**
   * @generated from enum value: NAME_P = 505;
   */
  NAME_P = 505,

  /**
   * @generated from enum value: NAMES = 506;
   */
  NAMES = 506,

  /**
   * @generated from enum value: NATIONAL = 507;
   */
  NATIONAL = 507,

  /**
   * @generated from enum value: NATURAL = 508;
   */
  NATURAL = 508,

  /**
   * @generated from enum value: NCHAR = 509;
   */
  NCHAR = 509,

  /**
   * @generated from enum value: NEW = 510;
   */
  NEW = 510,

  /**
   * @generated from enum value: NEXT = 511;
   */
  NEXT = 511,

  /**
   * @generated from enum value: NFC = 512;
   */
  NFC = 512,

  /**
   * @generated from enum value: NFD = 513;
   */
  NFD = 513,

  /**
   * @generated from enum value: NFKC = 514;
   */
  NFKC = 514,

  /**
   * @generated from enum value: NFKD = 515;
   */
  NFKD = 515,

  /**
   * @generated from enum value: NO = 516;
   */
  NO = 516,

  /**
   * @generated from enum value: NONE = 517;
   */
  NONE = 517,

  /**
   * @generated from enum value: NORMALIZE = 518;
   */
  NORMALIZE = 518,

  /**
   * @generated from enum value: NORMALIZED = 519;
   */
  NORMALIZED = 519,

  /**
   * @generated from enum value: NOT = 520;
   */
  NOT = 520,

  /**
   * @generated from enum value: NOTHING = 521;
   */
  NOTHING = 521,

  /**
   * @generated from enum value: NOTIFY = 522;
   */
  NOTIFY = 522,

  /**
   * @generated from enum value: NOTNULL = 523;
   */
  NOTNULL = 523,

  /**
   * @generated from enum value: NOWAIT = 524;
   */
  NOWAIT = 524,

  /**
   * @generated from enum value: NULL_P = 525;
   */
  NULL_P = 525,

  /**
   * @generated from enum value: NULLIF = 526;
   */
  NULLIF = 526,

  /**
   * @generated from enum value: NULLS_P = 527;
   */
  NULLS_P = 527,

  /**
   * @generated from enum value: NUMERIC = 528;
   */
  NUMERIC = 528,

  /**
   * @generated from enum value: OBJECT_P = 529;
   */
  OBJECT_P = 529,

  /**
   * @generated from enum value: OF = 530;
   */
  OF = 530,

  /**
   * @generated from enum value: OFF = 531;
   */
  OFF = 531,

  /**
   * @generated from enum value: OFFSET = 532;
   */
  OFFSET = 532,

  /**
   * @generated from enum value: OIDS = 533;
   */
  OIDS = 533,

  /**
   * @generated from enum value: OLD = 534;
   */
  OLD = 534,

  /**
   * @generated from enum value: ON = 535;
   */
  ON = 535,

  /**
   * @generated from enum value: ONLY = 536;
   */
  ONLY = 536,

  /**
   * @generated from enum value: OPERATOR = 537;
   */
  OPERATOR = 537,

  /**
   * @generated from enum value: OPTION = 538;
   */
  OPTION = 538,

  /**
   * @generated from enum value: OPTIONS = 539;
   */
  OPTIONS = 539,

  /**
   * @generated from enum value: OR = 540;
   */
  OR = 540,

  /**
   * @generated from enum value: ORDER = 541;
   */
  ORDER = 541,

  /**
   * @generated from enum value: ORDINALITY = 542;
   */
  ORDINALITY = 542,

  /**
   * @generated from enum value: OTHERS = 543;
   */
  OTHERS = 543,

  /**
   * @generated from enum value: OUT_P = 544;
   */
  OUT_P = 544,

  /**
   * @generated from enum value: OUTER_P = 545;
   */
  OUTER_P = 545,

  /**
   * @generated from enum value: OVER = 546;
   */
  OVER = 546,

  /**
   * @generated from enum value: OVERLAPS = 547;
   */
  OVERLAPS = 547,

  /**
   * @generated from enum value: OVERLAY = 548;
   */
  OVERLAY = 548,

  /**
   * @generated from enum value: OVERRIDING = 549;
   */
  OVERRIDING = 549,

  /**
   * @generated from enum value: OWNED = 550;
   */
  OWNED = 550,

  /**
   * @generated from enum value: OWNER = 551;
   */
  OWNER = 551,

  /**
   * @generated from enum value: PARALLEL = 552;
   */
  PARALLEL = 552,

  /**
   * @generated from enum value: PARSER = 553;
   */
  PARSER = 553,

  /**
   * @generated from enum value: PARTIAL = 554;
   */
  PARTIAL = 554,

  /**
   * @generated from enum value: PARTITION = 555;
   */
  PARTITION = 555,

  /**
   * @generated from enum value: PASSING = 556;
   */
  PASSING = 556,

  /**
   * @generated from enum value: PASSWORD = 557;
   */
  PASSWORD = 557,

  /**
   * @generated from enum value: PLACING = 558;
   */
  PLACING = 558,

  /**
   * @generated from enum value: PLANS = 559;
   */
  PLANS = 559,

  /**
   * @generated from enum value: POLICY = 560;
   */
  POLICY = 560,

  /**
   * @generated from enum value: POSITION = 561;
   */
  POSITION = 561,

  /**
   * @generated from enum value: PRECEDING = 562;
   */
  PRECEDING = 562,

  /**
   * @generated from enum value: PRECISION = 563;
   */
  PRECISION = 563,

  /**
   * @generated from enum value: PRESERVE = 564;
   */
  PRESERVE = 564,

  /**
   * @generated from enum value: PREPARE = 565;
   */
  PREPARE = 565,

  /**
   * @generated from enum value: PREPARED = 566;
   */
  PREPARED = 566,

  /**
   * @generated from enum value: PRIMARY = 567;
   */
  PRIMARY = 567,

  /**
   * @generated from enum value: PRIOR = 568;
   */
  PRIOR = 568,

  /**
   * @generated from enum value: PRIVILEGES = 569;
   */
  PRIVILEGES = 569,

  /**
   * @generated from enum value: PROCEDURAL = 570;
   */
  PROCEDURAL = 570,

  /**
   * @generated from enum value: PROCEDURE = 571;
   */
  PROCEDURE = 571,

  /**
   * @generated from enum value: PROCEDURES = 572;
   */
  PROCEDURES = 572,

  /**
   * @generated from enum value: PROGRAM = 573;
   */
  PROGRAM = 573,

  /**
   * @generated from enum value: PUBLICATION = 574;
   */
  PUBLICATION = 574,

  /**
   * @generated from enum value: QUOTE = 575;
   */
  QUOTE = 575,

  /**
   * @generated from enum value: RANGE = 576;
   */
  RANGE = 576,

  /**
   * @generated from enum value: READ = 577;
   */
  READ = 577,

  /**
   * @generated from enum value: REAL = 578;
   */
  REAL = 578,

  /**
   * @generated from enum value: REASSIGN = 579;
   */
  REASSIGN = 579,

  /**
   * @generated from enum value: RECHECK = 580;
   */
  RECHECK = 580,

  /**
   * @generated from enum value: RECURSIVE = 581;
   */
  RECURSIVE = 581,

  /**
   * @generated from enum value: REF_P = 582;
   */
  REF_P = 582,

  /**
   * @generated from enum value: REFERENCES = 583;
   */
  REFERENCES = 583,

  /**
   * @generated from enum value: REFERENCING = 584;
   */
  REFERENCING = 584,

  /**
   * @generated from enum value: REFRESH = 585;
   */
  REFRESH = 585,

  /**
   * @generated from enum value: REINDEX = 586;
   */
  REINDEX = 586,

  /**
   * @generated from enum value: RELATIVE_P = 587;
   */
  RELATIVE_P = 587,

  /**
   * @generated from enum value: RELEASE = 588;
   */
  RELEASE = 588,

  /**
   * @generated from enum value: RENAME = 589;
   */
  RENAME = 589,

  /**
   * @generated from enum value: REPEATABLE = 590;
   */
  REPEATABLE = 590,

  /**
   * @generated from enum value: REPLACE = 591;
   */
  REPLACE = 591,

  /**
   * @generated from enum value: REPLICA = 592;
   */
  REPLICA = 592,

  /**
   * @generated from enum value: RESET = 593;
   */
  RESET = 593,

  /**
   * @generated from enum value: RESTART = 594;
   */
  RESTART = 594,

  /**
   * @generated from enum value: RESTRICT = 595;
   */
  RESTRICT = 595,

  /**
   * @generated from enum value: RETURNING = 596;
   */
  RETURNING = 596,

  /**
   * @generated from enum value: RETURNS = 597;
   */
  RETURNS = 597,

  /**
   * @generated from enum value: REVOKE = 598;
   */
  REVOKE = 598,

  /**
   * @generated from enum value: RIGHT = 599;
   */
  RIGHT = 599,

  /**
   * @generated from enum value: ROLE = 600;
   */
  ROLE = 600,

  /**
   * @generated from enum value: ROLLBACK = 601;
   */
  ROLLBACK = 601,

  /**
   * @generated from enum value: ROLLUP = 602;
   */
  ROLLUP = 602,

  /**
   * @generated from enum value: ROUTINE = 603;
   */
  ROUTINE = 603,

  /**
   * @generated from enum value: ROUTINES = 604;
   */
  ROUTINES = 604,

  /**
   * @generated from enum value: ROW = 605;
   */
  ROW = 605,

  /**
   * @generated from enum value: ROWS = 606;
   */
  ROWS = 606,

  /**
   * @generated from enum value: RULE = 607;
   */
  RULE = 607,

  /**
   * @generated from enum value: SAVEPOINT = 608;
   */
  SAVEPOINT = 608,

  /**
   * @generated from enum value: SCHEMA = 609;
   */
  SCHEMA = 609,

  /**
   * @generated from enum value: SCHEMAS = 610;
   */
  SCHEMAS = 610,

  /**
   * @generated from enum value: SCROLL = 611;
   */
  SCROLL = 611,

  /**
   * @generated from enum value: SEARCH = 612;
   */
  SEARCH = 612,

  /**
   * @generated from enum value: SECOND_P = 613;
   */
  SECOND_P = 613,

  /**
   * @generated from enum value: SECURITY = 614;
   */
  SECURITY = 614,

  /**
   * @generated from enum value: SELECT = 615;
   */
  SELECT = 615,

  /**
   * @generated from enum value: SEQUENCE = 616;
   */
  SEQUENCE = 616,

  /**
   * @generated from enum value: SEQUENCES = 617;
   */
  SEQUENCES = 617,

  /**
   * @generated from enum value: SERIALIZABLE = 618;
   */
  SERIALIZABLE = 618,

  /**
   * @generated from enum value: SERVER = 619;
   */
  SERVER = 619,

  /**
   * @generated from enum value: SESSION = 620;
   */
  SESSION = 620,

  /**
   * @generated from enum value: SESSION_USER = 621;
   */
  SESSION_USER = 621,

  /**
   * @generated from enum value: SET = 622;
   */
  SET = 622,

  /**
   * @generated from enum value: SETS = 623;
   */
  SETS = 623,

  /**
   * @generated from enum value: SETOF = 624;
   */
  SETOF = 624,

  /**
   * @generated from enum value: SHARE = 625;
   */
  SHARE = 625,

  /**
   * @generated from enum value: SHOW = 626;
   */
  SHOW = 626,

  /**
   * @generated from enum value: SIMILAR = 627;
   */
  SIMILAR = 627,

  /**
   * @generated from enum value: SIMPLE = 628;
   */
  SIMPLE = 628,

  /**
   * @generated from enum value: SKIP = 629;
   */
  SKIP = 629,

  /**
   * @generated from enum value: SMALLINT = 630;
   */
  SMALLINT = 630,

  /**
   * @generated from enum value: SNAPSHOT = 631;
   */
  SNAPSHOT = 631,

  /**
   * @generated from enum value: SOME = 632;
   */
  SOME = 632,

  /**
   * @generated from enum value: SQL_P = 633;
   */
  SQL_P = 633,

  /**
   * @generated from enum value: STABLE = 634;
   */
  STABLE = 634,

  /**
   * @generated from enum value: STANDALONE_P = 635;
   */
  STANDALONE_P = 635,

  /**
   * @generated from enum value: START = 636;
   */
  START = 636,

  /**
   * @generated from enum value: STATEMENT = 637;
   */
  STATEMENT = 637,

  /**
   * @generated from enum value: STATISTICS = 638;
   */
  STATISTICS = 638,

  /**
   * @generated from enum value: STDIN = 639;
   */
  STDIN = 639,

  /**
   * @generated from enum value: STDOUT = 640;
   */
  STDOUT = 640,

  /**
   * @generated from enum value: STORAGE = 641;
   */
  STORAGE = 641,

  /**
   * @generated from enum value: STORED = 642;
   */
  STORED = 642,

  /**
   * @generated from enum value: STRICT_P = 643;
   */
  STRICT_P = 643,

  /**
   * @generated from enum value: STRIP_P = 644;
   */
  STRIP_P = 644,

  /**
   * @generated from enum value: SUBSCRIPTION = 645;
   */
  SUBSCRIPTION = 645,

  /**
   * @generated from enum value: SUBSTRING = 646;
   */
  SUBSTRING = 646,

  /**
   * @generated from enum value: SUPPORT = 647;
   */
  SUPPORT = 647,

  /**
   * @generated from enum value: SYMMETRIC = 648;
   */
  SYMMETRIC = 648,

  /**
   * @generated from enum value: SYSID = 649;
   */
  SYSID = 649,

  /**
   * @generated from enum value: SYSTEM_P = 650;
   */
  SYSTEM_P = 650,

  /**
   * @generated from enum value: TABLE = 651;
   */
  TABLE = 651,

  /**
   * @generated from enum value: TABLES = 652;
   */
  TABLES = 652,

  /**
   * @generated from enum value: TABLESAMPLE = 653;
   */
  TABLESAMPLE = 653,

  /**
   * @generated from enum value: TABLESPACE = 654;
   */
  TABLESPACE = 654,

  /**
   * @generated from enum value: TEMP = 655;
   */
  TEMP = 655,

  /**
   * @generated from enum value: TEMPLATE = 656;
   */
  TEMPLATE = 656,

  /**
   * @generated from enum value: TEMPORARY = 657;
   */
  TEMPORARY = 657,

  /**
   * @generated from enum value: TEXT_P = 658;
   */
  TEXT_P = 658,

  /**
   * @generated from enum value: THEN = 659;
   */
  THEN = 659,

  /**
   * @generated from enum value: TIES = 660;
   */
  TIES = 660,

  /**
   * @generated from enum value: TIME = 661;
   */
  TIME = 661,

  /**
   * @generated from enum value: TIMESTAMP = 662;
   */
  TIMESTAMP = 662,

  /**
   * @generated from enum value: TO = 663;
   */
  TO = 663,

  /**
   * @generated from enum value: TRAILING = 664;
   */
  TRAILING = 664,

  /**
   * @generated from enum value: TRANSACTION = 665;
   */
  TRANSACTION = 665,

  /**
   * @generated from enum value: TRANSFORM = 666;
   */
  TRANSFORM = 666,

  /**
   * @generated from enum value: TREAT = 667;
   */
  TREAT = 667,

  /**
   * @generated from enum value: TRIGGER = 668;
   */
  TRIGGER = 668,

  /**
   * @generated from enum value: TRIM = 669;
   */
  TRIM = 669,

  /**
   * @generated from enum value: TRUE_P = 670;
   */
  TRUE_P = 670,

  /**
   * @generated from enum value: TRUNCATE = 671;
   */
  TRUNCATE = 671,

  /**
   * @generated from enum value: TRUSTED = 672;
   */
  TRUSTED = 672,

  /**
   * @generated from enum value: TYPE_P = 673;
   */
  TYPE_P = 673,

  /**
   * @generated from enum value: TYPES_P = 674;
   */
  TYPES_P = 674,

  /**
   * @generated from enum value: UESCAPE = 675;
   */
  UESCAPE = 675,

  /**
   * @generated from enum value: UNBOUNDED = 676;
   */
  UNBOUNDED = 676,

  /**
   * @generated from enum value: UNCOMMITTED = 677;
   */
  UNCOMMITTED = 677,

  /**
   * @generated from enum value: UNENCRYPTED = 678;
   */
  UNENCRYPTED = 678,

  /**
   * @generated from enum value: UNION = 679;
   */
  UNION = 679,

  /**
   * @generated from enum value: UNIQUE = 680;
   */
  UNIQUE = 680,

  /**
   * @generated from enum value: UNKNOWN = 681;
   */
  UNKNOWN = 681,

  /**
   * @generated from enum value: UNLISTEN = 682;
   */
  UNLISTEN = 682,

  /**
   * @generated from enum value: UNLOGGED = 683;
   */
  UNLOGGED = 683,

  /**
   * @generated from enum value: UNTIL = 684;
   */
  UNTIL = 684,

  /**
   * @generated from enum value: UPDATE = 685;
   */
  UPDATE = 685,

  /**
   * @generated from enum value: USER = 686;
   */
  USER = 686,

  /**
   * @generated from enum value: USING = 687;
   */
  USING = 687,

  /**
   * @generated from enum value: VACUUM = 688;
   */
  VACUUM = 688,

  /**
   * @generated from enum value: VALID = 689;
   */
  VALID = 689,

  /**
   * @generated from enum value: VALIDATE = 690;
   */
  VALIDATE = 690,

  /**
   * @generated from enum value: VALIDATOR = 691;
   */
  VALIDATOR = 691,

  /**
   * @generated from enum value: VALUE_P = 692;
   */
  VALUE_P = 692,

  /**
   * @generated from enum value: VALUES = 693;
   */
  VALUES = 693,

  /**
   * @generated from enum value: VARCHAR = 694;
   */
  VARCHAR = 694,

  /**
   * @generated from enum value: VARIADIC = 695;
   */
  VARIADIC = 695,

  /**
   * @generated from enum value: VARYING = 696;
   */
  VARYING = 696,

  /**
   * @generated from enum value: VERBOSE = 697;
   */
  VERBOSE = 697,

  /**
   * @generated from enum value: VERSION_P = 698;
   */
  VERSION_P = 698,

  /**
   * @generated from enum value: VIEW = 699;
   */
  VIEW = 699,

  /**
   * @generated from enum value: VIEWS = 700;
   */
  VIEWS = 700,

  /**
   * @generated from enum value: VOLATILE = 701;
   */
  VOLATILE = 701,

  /**
   * @generated from enum value: WHEN = 702;
   */
  WHEN = 702,

  /**
   * @generated from enum value: WHERE = 703;
   */
  WHERE = 703,

  /**
   * @generated from enum value: WHITESPACE_P = 704;
   */
  WHITESPACE_P = 704,

  /**
   * @generated from enum value: WINDOW = 705;
   */
  WINDOW = 705,

  /**
   * @generated from enum value: WITH = 706;
   */
  WITH = 706,

  /**
   * @generated from enum value: WITHIN = 707;
   */
  WITHIN = 707,

  /**
   * @generated from enum value: WITHOUT = 708;
   */
  WITHOUT = 708,

  /**
   * @generated from enum value: WORK = 709;
   */
  WORK = 709,

  /**
   * @generated from enum value: WRAPPER = 710;
   */
  WRAPPER = 710,

  /**
   * @generated from enum value: WRITE = 711;
   */
  WRITE = 711,

  /**
   * @generated from enum value: XML_P = 712;
   */
  XML_P = 712,

  /**
   * @generated from enum value: XMLATTRIBUTES = 713;
   */
  XMLATTRIBUTES = 713,

  /**
   * @generated from enum value: XMLCONCAT = 714;
   */
  XMLCONCAT = 714,

  /**
   * @generated from enum value: XMLELEMENT = 715;
   */
  XMLELEMENT = 715,

  /**
   * @generated from enum value: XMLEXISTS = 716;
   */
  XMLEXISTS = 716,

  /**
   * @generated from enum value: XMLFOREST = 717;
   */
  XMLFOREST = 717,

  /**
   * @generated from enum value: XMLNAMESPACES = 718;
   */
  XMLNAMESPACES = 718,

  /**
   * @generated from enum value: XMLPARSE = 719;
   */
  XMLPARSE = 719,

  /**
   * @generated from enum value: XMLPI = 720;
   */
  XMLPI = 720,

  /**
   * @generated from enum value: XMLROOT = 721;
   */
  XMLROOT = 721,

  /**
   * @generated from enum value: XMLSERIALIZE = 722;
   */
  XMLSERIALIZE = 722,

  /**
   * @generated from enum value: XMLTABLE = 723;
   */
  XMLTABLE = 723,

  /**
   * @generated from enum value: YEAR_P = 724;
   */
  YEAR_P = 724,

  /**
   * @generated from enum value: YES_P = 725;
   */
  YES_P = 725,

  /**
   * @generated from enum value: ZONE = 726;
   */
  ZONE = 726,

  /**
   * @generated from enum value: NOT_LA = 727;
   */
  NOT_LA = 727,

  /**
   * @generated from enum value: NULLS_LA = 728;
   */
  NULLS_LA = 728,

  /**
   * @generated from enum value: WITH_LA = 729;
   */
  WITH_LA = 729,

  /**
   * @generated from enum value: POSTFIXOP = 730;
   */
  POSTFIXOP = 730,

  /**
   * @generated from enum value: UMINUS = 731;
   */
  UMINUS = 731,
}

/**
 * Describes the enum pg_query.Token.
 */
export const TokenSchema: GenEnum<Token> = /*@__PURE__*/
  enumDesc(file_pg_query, 56);

