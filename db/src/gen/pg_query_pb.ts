// This file is autogenerated by ./scripts/generate_protobuf_and_funcs.rb

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts,json_types=true"
// @generated from file pg_query.proto (package pg_query, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file pg_query.proto.
 */
export const file_pg_query: GenFile = /*@__PURE__*/
  fileDesc("Cg5wZ19xdWVyeS5wcm90bxIIcGdfcXVlcnkiQAoLUGFyc2VSZXN1bHQSDwoHdmVyc2lvbhgBIAEoBRIgCgVzdG10cxgCIAMoCzIRLnBnX3F1ZXJ5LlJhd1N0bXQiQgoKU2NhblJlc3VsdBIPCgd2ZXJzaW9uGAEgASgFEiMKBnRva2VucxgCIAMoCzITLnBnX3F1ZXJ5LlNjYW5Ub2tlbiLBhQEKBE5vZGUSJwoFYWxpYXMYASABKAsyDy5wZ19xdWVyeS5BbGlhc0gAUgVBbGlhcxIxCglyYW5nZV92YXIYAiABKAsyEi5wZ19xdWVyeS5SYW5nZVZhckgAUghSYW5nZVZhchI0Cgp0YWJsZV9mdW5jGAMgASgLMhMucGdfcXVlcnkuVGFibGVGdW5jSABSCVRhYmxlRnVuYxI3CgtpbnRvX2NsYXVzZRgEIAEoCzIULnBnX3F1ZXJ5LkludG9DbGF1c2VIAFIKSW50b0NsYXVzZRIhCgN2YXIYBSABKAsyDS5wZ19xdWVyeS5WYXJIAFIDVmFyEicKBXBhcmFtGAYgASgLMg8ucGdfcXVlcnkuUGFyYW1IAFIFUGFyYW0SKgoGYWdncmVmGAcgASgLMhAucGdfcXVlcnkuQWdncmVmSABSBkFnZ3JlZhI9Cg1ncm91cGluZ19mdW5jGAggASgLMhYucGdfcXVlcnkuR3JvdXBpbmdGdW5jSABSDEdyb3VwaW5nRnVuYxI3Cgt3aW5kb3dfZnVuYxgJIAEoCzIULnBnX3F1ZXJ5LldpbmRvd0Z1bmNIAFIKV2luZG93RnVuYxJGChBzdWJzY3JpcHRpbmdfcmVmGAogASgLMhkucGdfcXVlcnkuU3Vic2NyaXB0aW5nUmVmSABSD1N1YnNjcmlwdGluZ1JlZhIxCglmdW5jX2V4cHIYCyABKAsyEi5wZ19xdWVyeS5GdW5jRXhwckgAUghGdW5jRXhwchI+Cg5uYW1lZF9hcmdfZXhwchgMIAEoCzIWLnBnX3F1ZXJ5Lk5hbWVkQXJnRXhwckgAUgxOYW1lZEFyZ0V4cHISKwoHb3BfZXhwchgNIAEoCzIQLnBnX3F1ZXJ5Lk9wRXhwckgAUgZPcEV4cHISPQoNZGlzdGluY3RfZXhwchgOIAEoCzIWLnBnX3F1ZXJ5LkRpc3RpbmN0RXhwckgAUgxEaXN0aW5jdEV4cHISOAoMbnVsbF9pZl9leHByGA8gASgLMhQucGdfcXVlcnkuTnVsbElmRXhwckgAUgpOdWxsSWZFeHByEk4KFHNjYWxhcl9hcnJheV9vcF9leHByGBAgASgLMhsucGdfcXVlcnkuU2NhbGFyQXJyYXlPcEV4cHJIAFIRU2NhbGFyQXJyYXlPcEV4cHISMQoJYm9vbF9leHByGBEgASgLMhIucGdfcXVlcnkuQm9vbEV4cHJIAFIIQm9vbEV4cHISLgoIc3ViX2xpbmsYEiABKAsyES5wZ19xdWVyeS5TdWJMaW5rSABSB1N1YkxpbmsSLgoIc3ViX3BsYW4YEyABKAsyES5wZ19xdWVyeS5TdWJQbGFuSABSB1N1YlBsYW4SUAoUYWx0ZXJuYXRpdmVfc3ViX3BsYW4YFCABKAsyHC5wZ19xdWVyeS5BbHRlcm5hdGl2ZVN1YlBsYW5IAFISQWx0ZXJuYXRpdmVTdWJQbGFuEjoKDGZpZWxkX3NlbGVjdBgVIAEoCzIVLnBnX3F1ZXJ5LkZpZWxkU2VsZWN0SABSC0ZpZWxkU2VsZWN0EjcKC2ZpZWxkX3N0b3JlGBYgASgLMhQucGdfcXVlcnkuRmllbGRTdG9yZUgAUgpGaWVsZFN0b3JlEjoKDHJlbGFiZWxfdHlwZRgXIAEoCzIVLnBnX3F1ZXJ5LlJlbGFiZWxUeXBlSABSC1JlbGFiZWxUeXBlEjsKDWNvZXJjZV92aWFfaW8YGCABKAsyFS5wZ19xdWVyeS5Db2VyY2VWaWFJT0gAUgtDb2VyY2VWaWFJTxJHChFhcnJheV9jb2VyY2VfZXhwchgZIAEoCzIZLnBnX3F1ZXJ5LkFycmF5Q29lcmNlRXhwckgAUg9BcnJheUNvZXJjZUV4cHISUAoUY29udmVydF9yb3d0eXBlX2V4cHIYGiABKAsyHC5wZ19xdWVyeS5Db252ZXJ0Um93dHlwZUV4cHJIAFISQ29udmVydFJvd3R5cGVFeHByEjoKDGNvbGxhdGVfZXhwchgbIAEoCzIVLnBnX3F1ZXJ5LkNvbGxhdGVFeHBySABSC0NvbGxhdGVFeHByEjEKCWNhc2VfZXhwchgcIAEoCzISLnBnX3F1ZXJ5LkNhc2VFeHBySABSCENhc2VFeHByEjEKCWNhc2Vfd2hlbhgdIAEoCzISLnBnX3F1ZXJ5LkNhc2VXaGVuSABSCENhc2VXaGVuEj4KDmNhc2VfdGVzdF9leHByGB4gASgLMhYucGdfcXVlcnkuQ2FzZVRlc3RFeHBySABSDENhc2VUZXN0RXhwchI0CgphcnJheV9leHByGB8gASgLMhMucGdfcXVlcnkuQXJyYXlFeHBySABSCUFycmF5RXhwchIuCghyb3dfZXhwchggIAEoCzIRLnBnX3F1ZXJ5LlJvd0V4cHJIAFIHUm93RXhwchJEChByb3dfY29tcGFyZV9leHByGCEgASgLMhgucGdfcXVlcnkuUm93Q29tcGFyZUV4cHJIAFIOUm93Q29tcGFyZUV4cHISPQoNY29hbGVzY2VfZXhwchgiIAEoCzIWLnBnX3F1ZXJ5LkNvYWxlc2NlRXhwckgAUgxDb2FsZXNjZUV4cHISOAoMbWluX21heF9leHByGCMgASgLMhQucGdfcXVlcnkuTWluTWF4RXhwckgAUgpNaW5NYXhFeHByEkkKEXNxbHZhbHVlX2Z1bmN0aW9uGCQgASgLMhoucGdfcXVlcnkuU1FMVmFsdWVGdW5jdGlvbkgAUhBTUUxWYWx1ZUZ1bmN0aW9uEi4KCHhtbF9leHByGCUgASgLMhEucGdfcXVlcnkuWG1sRXhwckgAUgdYbWxFeHByEjcKC2pzb25fZm9ybWF0GCYgASgLMhQucGdfcXVlcnkuSnNvbkZvcm1hdEgAUgpKc29uRm9ybWF0EkAKDmpzb25fcmV0dXJuaW5nGCcgASgLMhcucGdfcXVlcnkuSnNvblJldHVybmluZ0gAUg1Kc29uUmV0dXJuaW5nEkEKD2pzb25fdmFsdWVfZXhwchgoIAEoCzIXLnBnX3F1ZXJ5Lkpzb25WYWx1ZUV4cHJIAFINSnNvblZhbHVlRXhwchJTChVqc29uX2NvbnN0cnVjdG9yX2V4cHIYKSABKAsyHS5wZ19xdWVyeS5Kc29uQ29uc3RydWN0b3JFeHBySABSE0pzb25Db25zdHJ1Y3RvckV4cHISRwoRanNvbl9pc19wcmVkaWNhdGUYKiABKAsyGS5wZ19xdWVyeS5Kc29uSXNQcmVkaWNhdGVIAFIPSnNvbklzUHJlZGljYXRlEjEKCW51bGxfdGVzdBgrIAEoCzISLnBnX3F1ZXJ5Lk51bGxUZXN0SABSCE51bGxUZXN0EjoKDGJvb2xlYW5fdGVzdBgsIAEoCzIVLnBnX3F1ZXJ5LkJvb2xlYW5UZXN0SABSC0Jvb2xlYW5UZXN0EkQKEGNvZXJjZV90b19kb21haW4YLSABKAsyGC5wZ19xdWVyeS5Db2VyY2VUb0RvbWFpbkgAUg5Db2VyY2VUb0RvbWFpbhJUChZjb2VyY2VfdG9fZG9tYWluX3ZhbHVlGC4gASgLMh0ucGdfcXVlcnkuQ29lcmNlVG9Eb21haW5WYWx1ZUgAUhNDb2VyY2VUb0RvbWFpblZhbHVlEj4KDnNldF90b19kZWZhdWx0GC8gASgLMhYucGdfcXVlcnkuU2V0VG9EZWZhdWx0SABSDFNldFRvRGVmYXVsdBJBCg9jdXJyZW50X29mX2V4cHIYMCABKAsyFy5wZ19xdWVyeS5DdXJyZW50T2ZFeHBySABSDUN1cnJlbnRPZkV4cHISQQoPbmV4dF92YWx1ZV9leHByGDEgASgLMhcucGdfcXVlcnkuTmV4dFZhbHVlRXhwckgAUg1OZXh0VmFsdWVFeHByEkAKDmluZmVyZW5jZV9lbGVtGDIgASgLMhcucGdfcXVlcnkuSW5mZXJlbmNlRWxlbUgAUg1JbmZlcmVuY2VFbGVtEjoKDHRhcmdldF9lbnRyeRgzIAEoCzIVLnBnX3F1ZXJ5LlRhcmdldEVudHJ5SABSC1RhcmdldEVudHJ5EjsKDXJhbmdlX3RibF9yZWYYNCABKAsyFS5wZ19xdWVyeS5SYW5nZVRibFJlZkgAUgtSYW5nZVRibFJlZhIxCglqb2luX2V4cHIYNSABKAsyEi5wZ19xdWVyeS5Kb2luRXhwckgAUghKb2luRXhwchIxCglmcm9tX2V4cHIYNiABKAsyEi5wZ19xdWVyeS5Gcm9tRXhwckgAUghGcm9tRXhwchJEChBvbl9jb25mbGljdF9leHByGDcgASgLMhgucGdfcXVlcnkuT25Db25mbGljdEV4cHJIAFIOT25Db25mbGljdEV4cHISJwoFcXVlcnkYOCABKAsyDy5wZ19xdWVyeS5RdWVyeUgAUgVRdWVyeRIxCgl0eXBlX25hbWUYOSABKAsyEi5wZ19xdWVyeS5UeXBlTmFtZUgAUghUeXBlTmFtZRI0Cgpjb2x1bW5fcmVmGDogASgLMhMucGdfcXVlcnkuQ29sdW1uUmVmSABSCUNvbHVtblJlZhIxCglwYXJhbV9yZWYYOyABKAsyEi5wZ19xdWVyeS5QYXJhbVJlZkgAUghQYXJhbVJlZhIqCgZhX2V4cHIYPCABKAsyEC5wZ19xdWVyeS5BX0V4cHJIAFIGQV9FeHByEjEKCXR5cGVfY2FzdBg9IAEoCzISLnBnX3F1ZXJ5LlR5cGVDYXN0SABSCFR5cGVDYXN0EkAKDmNvbGxhdGVfY2xhdXNlGD4gASgLMhcucGdfcXVlcnkuQ29sbGF0ZUNsYXVzZUgAUg1Db2xsYXRlQ2xhdXNlEjEKCXJvbGVfc3BlYxg/IAEoCzISLnBnX3F1ZXJ5LlJvbGVTcGVjSABSCFJvbGVTcGVjEjEKCWZ1bmNfY2FsbBhAIAEoCzISLnBnX3F1ZXJ5LkZ1bmNDYWxsSABSCEZ1bmNDYWxsEioKBmFfc3RhchhBIAEoCzIQLnBnX3F1ZXJ5LkFfU3RhckgAUgZBX1N0YXISMwoJYV9pbmRpY2VzGEIgASgLMhMucGdfcXVlcnkuQV9JbmRpY2VzSABSCUFfSW5kaWNlcxI/Cg1hX2luZGlyZWN0aW9uGEMgASgLMhcucGdfcXVlcnkuQV9JbmRpcmVjdGlvbkgAUg1BX0luZGlyZWN0aW9uEjoKDGFfYXJyYXlfZXhwchhEIAEoCzIVLnBnX3F1ZXJ5LkFfQXJyYXlFeHBySABSC0FfQXJyYXlFeHByEjQKCnJlc190YXJnZXQYRSABKAsyEy5wZ19xdWVyeS5SZXNUYXJnZXRIAFIJUmVzVGFyZ2V0EkQKEG11bHRpX2Fzc2lnbl9yZWYYRiABKAsyGC5wZ19xdWVyeS5NdWx0aUFzc2lnblJlZkgAUg5NdWx0aUFzc2lnblJlZhIrCgdzb3J0X2J5GEcgASgLMhAucGdfcXVlcnkuU29ydEJ5SABSBlNvcnRCeRI0Cgp3aW5kb3dfZGVmGEggASgLMhMucGdfcXVlcnkuV2luZG93RGVmSABSCVdpbmRvd0RlZhJDCg9yYW5nZV9zdWJzZWxlY3QYSSABKAsyGC5wZ19xdWVyeS5SYW5nZVN1YnNlbGVjdEgAUg5SYW5nZVN1YnNlbGVjdBJACg5yYW5nZV9mdW5jdGlvbhhKIAEoCzIXLnBnX3F1ZXJ5LlJhbmdlRnVuY3Rpb25IAFINUmFuZ2VGdW5jdGlvbhJEChByYW5nZV90YWJsZV9mdW5jGEsgASgLMhgucGdfcXVlcnkuUmFuZ2VUYWJsZUZ1bmNIAFIOUmFuZ2VUYWJsZUZ1bmMSTgoUcmFuZ2VfdGFibGVfZnVuY19jb2wYTCABKAsyGy5wZ19xdWVyeS5SYW5nZVRhYmxlRnVuY0NvbEgAUhFSYW5nZVRhYmxlRnVuY0NvbBJKChJyYW5nZV90YWJsZV9zYW1wbGUYTSABKAsyGi5wZ19xdWVyeS5SYW5nZVRhYmxlU2FtcGxlSABSEFJhbmdlVGFibGVTYW1wbGUSNAoKY29sdW1uX2RlZhhOIAEoCzITLnBnX3F1ZXJ5LkNvbHVtbkRlZkgAUglDb2x1bW5EZWYSRwoRdGFibGVfbGlrZV9jbGF1c2UYTyABKAsyGS5wZ19xdWVyeS5UYWJsZUxpa2VDbGF1c2VIAFIPVGFibGVMaWtlQ2xhdXNlEjQKCmluZGV4X2VsZW0YUCABKAsyEy5wZ19xdWVyeS5JbmRleEVsZW1IAFIJSW5kZXhFbGVtEi4KCGRlZl9lbGVtGFEgASgLMhEucGdfcXVlcnkuRGVmRWxlbUgAUgdEZWZFbGVtEkAKDmxvY2tpbmdfY2xhdXNlGFIgASgLMhcucGdfcXVlcnkuTG9ja2luZ0NsYXVzZUgAUg1Mb2NraW5nQ2xhdXNlEj0KDXhtbF9zZXJpYWxpemUYUyABKAsyFi5wZ19xdWVyeS5YbWxTZXJpYWxpemVIAFIMWG1sU2VyaWFsaXplEkAKDnBhcnRpdGlvbl9lbGVtGFQgASgLMhcucGdfcXVlcnkuUGFydGl0aW9uRWxlbUgAUg1QYXJ0aXRpb25FbGVtEkAKDnBhcnRpdGlvbl9zcGVjGFUgASgLMhcucGdfcXVlcnkuUGFydGl0aW9uU3BlY0gAUg1QYXJ0aXRpb25TcGVjElAKFHBhcnRpdGlvbl9ib3VuZF9zcGVjGFYgASgLMhwucGdfcXVlcnkuUGFydGl0aW9uQm91bmRTcGVjSABSElBhcnRpdGlvbkJvdW5kU3BlYxJTChVwYXJ0aXRpb25fcmFuZ2VfZGF0dW0YVyABKAsyHS5wZ19xdWVyeS5QYXJ0aXRpb25SYW5nZURhdHVtSABSE1BhcnRpdGlvblJhbmdlRGF0dW0SPQoNcGFydGl0aW9uX2NtZBhYIAEoCzIWLnBnX3F1ZXJ5LlBhcnRpdGlvbkNtZEgAUgxQYXJ0aXRpb25DbWQSQQoPcmFuZ2VfdGJsX2VudHJ5GFkgASgLMhcucGdfcXVlcnkuUmFuZ2VUYmxFbnRyeUgAUg1SYW5nZVRibEVudHJ5EkwKEnJ0ZXBlcm1pc3Npb25faW5mbxhaIAEoCzIbLnBnX3F1ZXJ5LlJURVBlcm1pc3Npb25JbmZvSABSEVJURVBlcm1pc3Npb25JbmZvEkoKEnJhbmdlX3RibF9mdW5jdGlvbhhbIAEoCzIaLnBnX3F1ZXJ5LlJhbmdlVGJsRnVuY3Rpb25IAFIQUmFuZ2VUYmxGdW5jdGlvbhJNChN0YWJsZV9zYW1wbGVfY2xhdXNlGFwgASgLMhsucGdfcXVlcnkuVGFibGVTYW1wbGVDbGF1c2VIAFIRVGFibGVTYW1wbGVDbGF1c2USRwoRd2l0aF9jaGVja19vcHRpb24YXSABKAsyGS5wZ19xdWVyeS5XaXRoQ2hlY2tPcHRpb25IAFIPV2l0aENoZWNrT3B0aW9uEkcKEXNvcnRfZ3JvdXBfY2xhdXNlGF4gASgLMhkucGdfcXVlcnkuU29ydEdyb3VwQ2xhdXNlSABSD1NvcnRHcm91cENsYXVzZRI6Cgxncm91cGluZ19zZXQYXyABKAsyFS5wZ19xdWVyeS5Hcm91cGluZ1NldEgAUgtHcm91cGluZ1NldBI9Cg13aW5kb3dfY2xhdXNlGGAgASgLMhYucGdfcXVlcnkuV2luZG93Q2xhdXNlSABSDFdpbmRvd0NsYXVzZRJBCg9yb3dfbWFya19jbGF1c2UYYSABKAsyFy5wZ19xdWVyeS5Sb3dNYXJrQ2xhdXNlSABSDVJvd01hcmtDbGF1c2USNwoLd2l0aF9jbGF1c2UYYiABKAsyFC5wZ19xdWVyeS5XaXRoQ2xhdXNlSABSCldpdGhDbGF1c2USOgoMaW5mZXJfY2xhdXNlGGMgASgLMhUucGdfcXVlcnkuSW5mZXJDbGF1c2VIAFILSW5mZXJDbGF1c2USSgoSb25fY29uZmxpY3RfY2xhdXNlGGQgASgLMhoucGdfcXVlcnkuT25Db25mbGljdENsYXVzZUgAUhBPbkNvbmZsaWN0Q2xhdXNlEkYKEGN0ZXNlYXJjaF9jbGF1c2UYZSABKAsyGS5wZ19xdWVyeS5DVEVTZWFyY2hDbGF1c2VIAFIPQ1RFU2VhcmNoQ2xhdXNlEkMKD2N0ZWN5Y2xlX2NsYXVzZRhmIAEoCzIYLnBnX3F1ZXJ5LkNURUN5Y2xlQ2xhdXNlSABSDkNURUN5Y2xlQ2xhdXNlEkcKEWNvbW1vbl90YWJsZV9leHByGGcgASgLMhkucGdfcXVlcnkuQ29tbW9uVGFibGVFeHBySABSD0NvbW1vblRhYmxlRXhwchJHChFtZXJnZV93aGVuX2NsYXVzZRhoIAEoCzIZLnBnX3F1ZXJ5Lk1lcmdlV2hlbkNsYXVzZUgAUg9NZXJnZVdoZW5DbGF1c2USOgoMbWVyZ2VfYWN0aW9uGGkgASgLMhUucGdfcXVlcnkuTWVyZ2VBY3Rpb25IAFILTWVyZ2VBY3Rpb24STAoSdHJpZ2dlcl90cmFuc2l0aW9uGGogASgLMhsucGdfcXVlcnkuVHJpZ2dlclRyYW5zaXRpb25IAFIRVHJpZ2dlclRyYW5zaXRpb24SNwoLanNvbl9vdXRwdXQYayABKAsyFC5wZ19xdWVyeS5Kc29uT3V0cHV0SABSCkpzb25PdXRwdXQSPgoOanNvbl9rZXlfdmFsdWUYbCABKAsyFi5wZ19xdWVyeS5Kc29uS2V5VmFsdWVIAFIMSnNvbktleVZhbHVlElkKF2pzb25fb2JqZWN0X2NvbnN0cnVjdG9yGG0gASgLMh8ucGdfcXVlcnkuSnNvbk9iamVjdENvbnN0cnVjdG9ySABSFUpzb25PYmplY3RDb25zdHJ1Y3RvchJWChZqc29uX2FycmF5X2NvbnN0cnVjdG9yGG4gASgLMh4ucGdfcXVlcnkuSnNvbkFycmF5Q29uc3RydWN0b3JIAFIUSnNvbkFycmF5Q29uc3RydWN0b3ISZgocanNvbl9hcnJheV9xdWVyeV9jb25zdHJ1Y3RvchhvIAEoCzIjLnBnX3F1ZXJ5Lkpzb25BcnJheVF1ZXJ5Q29uc3RydWN0b3JIAFIZSnNvbkFycmF5UXVlcnlDb25zdHJ1Y3RvchJQChRqc29uX2FnZ19jb25zdHJ1Y3RvchhwIAEoCzIcLnBnX3F1ZXJ5Lkpzb25BZ2dDb25zdHJ1Y3RvckgAUhJKc29uQWdnQ29uc3RydWN0b3ISQQoPanNvbl9vYmplY3RfYWdnGHEgASgLMhcucGdfcXVlcnkuSnNvbk9iamVjdEFnZ0gAUg1Kc29uT2JqZWN0QWdnEj4KDmpzb25fYXJyYXlfYWdnGHIgASgLMhYucGdfcXVlcnkuSnNvbkFycmF5QWdnSABSDEpzb25BcnJheUFnZxIuCghyYXdfc3RtdBhzIAEoCzIRLnBnX3F1ZXJ5LlJhd1N0bXRIAFIHUmF3U3RtdBI3CgtpbnNlcnRfc3RtdBh0IAEoCzIULnBnX3F1ZXJ5Lkluc2VydFN0bXRIAFIKSW5zZXJ0U3RtdBI3CgtkZWxldGVfc3RtdBh1IAEoCzIULnBnX3F1ZXJ5LkRlbGV0ZVN0bXRIAFIKRGVsZXRlU3RtdBI3Cgt1cGRhdGVfc3RtdBh2IAEoCzIULnBnX3F1ZXJ5LlVwZGF0ZVN0bXRIAFIKVXBkYXRlU3RtdBI0CgptZXJnZV9zdG10GHcgASgLMhMucGdfcXVlcnkuTWVyZ2VTdG10SABSCU1lcmdlU3RtdBI3CgtzZWxlY3Rfc3RtdBh4IAEoCzIULnBnX3F1ZXJ5LlNlbGVjdFN0bXRIAFIKU2VsZWN0U3RtdBJKChJzZXRfb3BlcmF0aW9uX3N0bXQYeSABKAsyGi5wZ19xdWVyeS5TZXRPcGVyYXRpb25TdG10SABSEFNldE9wZXJhdGlvblN0bXQSNwoLcmV0dXJuX3N0bXQYeiABKAsyFC5wZ19xdWVyeS5SZXR1cm5TdG10SABSClJldHVyblN0bXQSPQoNcGxhc3NpZ25fc3RtdBh7IAEoCzIWLnBnX3F1ZXJ5LlBMQXNzaWduU3RtdEgAUgxQTEFzc2lnblN0bXQSSgoSY3JlYXRlX3NjaGVtYV9zdG10GHwgASgLMhoucGdfcXVlcnkuQ3JlYXRlU2NoZW1hU3RtdEgAUhBDcmVhdGVTY2hlbWFTdG10EkQKEGFsdGVyX3RhYmxlX3N0bXQYfSABKAsyGC5wZ19xdWVyeS5BbHRlclRhYmxlU3RtdEgAUg5BbHRlclRhYmxlU3RtdBJTChVyZXBsaWNhX2lkZW50aXR5X3N0bXQYfiABKAsyHS5wZ19xdWVyeS5SZXBsaWNhSWRlbnRpdHlTdG10SABSE1JlcGxpY2FJZGVudGl0eVN0bXQSQQoPYWx0ZXJfdGFibGVfY21kGH8gASgLMhcucGdfcXVlcnkuQWx0ZXJUYWJsZUNtZEgAUg1BbHRlclRhYmxlQ21kElEKFGFsdGVyX2NvbGxhdGlvbl9zdG10GIABIAEoCzIcLnBnX3F1ZXJ5LkFsdGVyQ29sbGF0aW9uU3RtdEgAUhJBbHRlckNvbGxhdGlvblN0bXQSSAoRYWx0ZXJfZG9tYWluX3N0bXQYgQEgASgLMhkucGdfcXVlcnkuQWx0ZXJEb21haW5TdG10SABSD0FsdGVyRG9tYWluU3RtdBI1CgpncmFudF9zdG10GIIBIAEoCzITLnBnX3F1ZXJ5LkdyYW50U3RtdEgAUglHcmFudFN0bXQSRQoQb2JqZWN0X3dpdGhfYXJncxiDASABKAsyGC5wZ19xdWVyeS5PYmplY3RXaXRoQXJnc0gAUg5PYmplY3RXaXRoQXJncxI4CgthY2Nlc3NfcHJpdhiEASABKAsyFC5wZ19xdWVyeS5BY2Nlc3NQcml2SABSCkFjY2Vzc1ByaXYSQgoPZ3JhbnRfcm9sZV9zdG10GIUBIAEoCzIXLnBnX3F1ZXJ5LkdyYW50Um9sZVN0bXRIAFINR3JhbnRSb2xlU3RtdBJqCh1hbHRlcl9kZWZhdWx0X3ByaXZpbGVnZXNfc3RtdBiGASABKAsyJC5wZ19xdWVyeS5BbHRlckRlZmF1bHRQcml2aWxlZ2VzU3RtdEgAUhpBbHRlckRlZmF1bHRQcml2aWxlZ2VzU3RtdBIyCgljb3B5X3N0bXQYhwEgASgLMhIucGdfcXVlcnkuQ29weVN0bXRIAFIIQ29weVN0bXQSSAoRdmFyaWFibGVfc2V0X3N0bXQYiAEgASgLMhkucGdfcXVlcnkuVmFyaWFibGVTZXRTdG10SABSD1ZhcmlhYmxlU2V0U3RtdBJLChJ2YXJpYWJsZV9zaG93X3N0bXQYiQEgASgLMhoucGdfcXVlcnkuVmFyaWFibGVTaG93U3RtdEgAUhBWYXJpYWJsZVNob3dTdG10EjgKC2NyZWF0ZV9zdG10GIoBIAEoCzIULnBnX3F1ZXJ5LkNyZWF0ZVN0bXRIAFIKQ3JlYXRlU3RtdBI3Cgpjb25zdHJhaW50GIsBIAEoCzIULnBnX3F1ZXJ5LkNvbnN0cmFpbnRIAFIKQ29uc3RyYWludBJYChdjcmVhdGVfdGFibGVfc3BhY2Vfc3RtdBiMASABKAsyHi5wZ19xdWVyeS5DcmVhdGVUYWJsZVNwYWNlU3RtdEgAUhRDcmVhdGVUYWJsZVNwYWNlU3RtdBJSChVkcm9wX3RhYmxlX3NwYWNlX3N0bXQYjQEgASgLMhwucGdfcXVlcnkuRHJvcFRhYmxlU3BhY2VTdG10SABSEkRyb3BUYWJsZVNwYWNlU3RtdBJrCh5hbHRlcl90YWJsZV9zcGFjZV9vcHRpb25zX3N0bXQYjgEgASgLMiQucGdfcXVlcnkuQWx0ZXJUYWJsZVNwYWNlT3B0aW9uc1N0bXRIAFIaQWx0ZXJUYWJsZVNwYWNlT3B0aW9uc1N0bXQSXAoZYWx0ZXJfdGFibGVfbW92ZV9hbGxfc3RtdBiPASABKAsyHy5wZ19xdWVyeS5BbHRlclRhYmxlTW92ZUFsbFN0bXRIAFIVQWx0ZXJUYWJsZU1vdmVBbGxTdG10ElQKFWNyZWF0ZV9leHRlbnNpb25fc3RtdBiQASABKAsyHS5wZ19xdWVyeS5DcmVhdGVFeHRlbnNpb25TdG10SABSE0NyZWF0ZUV4dGVuc2lvblN0bXQSUQoUYWx0ZXJfZXh0ZW5zaW9uX3N0bXQYkQEgASgLMhwucGdfcXVlcnkuQWx0ZXJFeHRlbnNpb25TdG10SABSEkFsdGVyRXh0ZW5zaW9uU3RtdBJqCh1hbHRlcl9leHRlbnNpb25fY29udGVudHNfc3RtdBiSASABKAsyJC5wZ19xdWVyeS5BbHRlckV4dGVuc2lvbkNvbnRlbnRzU3RtdEgAUhpBbHRlckV4dGVuc2lvbkNvbnRlbnRzU3RtdBJCCg9jcmVhdGVfZmR3X3N0bXQYkwEgASgLMhcucGdfcXVlcnkuQ3JlYXRlRmR3U3RtdEgAUg1DcmVhdGVGZHdTdG10Ej8KDmFsdGVyX2Zkd19zdG10GJQBIAEoCzIWLnBnX3F1ZXJ5LkFsdGVyRmR3U3RtdEgAUgxBbHRlckZkd1N0bXQSYQoaY3JlYXRlX2ZvcmVpZ25fc2VydmVyX3N0bXQYlQEgASgLMiEucGdfcXVlcnkuQ3JlYXRlRm9yZWlnblNlcnZlclN0bXRIAFIXQ3JlYXRlRm9yZWlnblNlcnZlclN0bXQSXgoZYWx0ZXJfZm9yZWlnbl9zZXJ2ZXJfc3RtdBiWASABKAsyIC5wZ19xdWVyeS5BbHRlckZvcmVpZ25TZXJ2ZXJTdG10SABSFkFsdGVyRm9yZWlnblNlcnZlclN0bXQSXgoZY3JlYXRlX2ZvcmVpZ25fdGFibGVfc3RtdBiXASABKAsyIC5wZ19xdWVyeS5DcmVhdGVGb3JlaWduVGFibGVTdG10SABSFkNyZWF0ZUZvcmVpZ25UYWJsZVN0bXQSWwoYY3JlYXRlX3VzZXJfbWFwcGluZ19zdG10GJgBIAEoCzIfLnBnX3F1ZXJ5LkNyZWF0ZVVzZXJNYXBwaW5nU3RtdEgAUhVDcmVhdGVVc2VyTWFwcGluZ1N0bXQSWAoXYWx0ZXJfdXNlcl9tYXBwaW5nX3N0bXQYmQEgASgLMh4ucGdfcXVlcnkuQWx0ZXJVc2VyTWFwcGluZ1N0bXRIAFIUQWx0ZXJVc2VyTWFwcGluZ1N0bXQSVQoWZHJvcF91c2VyX21hcHBpbmdfc3RtdBiaASABKAsyHS5wZ19xdWVyeS5Ecm9wVXNlck1hcHBpbmdTdG10SABSE0Ryb3BVc2VyTWFwcGluZ1N0bXQSYQoaaW1wb3J0X2ZvcmVpZ25fc2NoZW1hX3N0bXQYmwEgASgLMiEucGdfcXVlcnkuSW1wb3J0Rm9yZWlnblNjaGVtYVN0bXRIAFIXSW1wb3J0Rm9yZWlnblNjaGVtYVN0bXQSSwoSY3JlYXRlX3BvbGljeV9zdG10GJwBIAEoCzIaLnBnX3F1ZXJ5LkNyZWF0ZVBvbGljeVN0bXRIAFIQQ3JlYXRlUG9saWN5U3RtdBJIChFhbHRlcl9wb2xpY3lfc3RtdBidASABKAsyGS5wZ19xdWVyeS5BbHRlclBvbGljeVN0bXRIAFIPQWx0ZXJQb2xpY3lTdG10Ej8KDmNyZWF0ZV9hbV9zdG10GJ4BIAEoCzIWLnBnX3F1ZXJ5LkNyZWF0ZUFtU3RtdEgAUgxDcmVhdGVBbVN0bXQSRQoQY3JlYXRlX3RyaWdfc3RtdBifASABKAsyGC5wZ19xdWVyeS5DcmVhdGVUcmlnU3RtdEgAUg5DcmVhdGVUcmlnU3RtdBJVChZjcmVhdGVfZXZlbnRfdHJpZ19zdG10GKABIAEoCzIdLnBnX3F1ZXJ5LkNyZWF0ZUV2ZW50VHJpZ1N0bXRIAFITQ3JlYXRlRXZlbnRUcmlnU3RtdBJSChVhbHRlcl9ldmVudF90cmlnX3N0bXQYoQEgASgLMhwucGdfcXVlcnkuQWx0ZXJFdmVudFRyaWdTdG10SABSEkFsdGVyRXZlbnRUcmlnU3RtdBJIChFjcmVhdGVfcGxhbmdfc3RtdBiiASABKAsyGS5wZ19xdWVyeS5DcmVhdGVQTGFuZ1N0bXRIAFIPQ3JlYXRlUExhbmdTdG10EkUKEGNyZWF0ZV9yb2xlX3N0bXQYowEgASgLMhgucGdfcXVlcnkuQ3JlYXRlUm9sZVN0bXRIAFIOQ3JlYXRlUm9sZVN0bXQSQgoPYWx0ZXJfcm9sZV9zdG10GKQBIAEoCzIXLnBnX3F1ZXJ5LkFsdGVyUm9sZVN0bXRIAFINQWx0ZXJSb2xlU3RtdBJMChNhbHRlcl9yb2xlX3NldF9zdG10GKUBIAEoCzIaLnBnX3F1ZXJ5LkFsdGVyUm9sZVNldFN0bXRIAFIQQWx0ZXJSb2xlU2V0U3RtdBI/Cg5kcm9wX3JvbGVfc3RtdBimASABKAsyFi5wZ19xdWVyeS5Ecm9wUm9sZVN0bXRIAFIMRHJvcFJvbGVTdG10EkIKD2NyZWF0ZV9zZXFfc3RtdBinASABKAsyFy5wZ19xdWVyeS5DcmVhdGVTZXFTdG10SABSDUNyZWF0ZVNlcVN0bXQSPwoOYWx0ZXJfc2VxX3N0bXQYqAEgASgLMhYucGdfcXVlcnkuQWx0ZXJTZXFTdG10SABSDEFsdGVyU2VxU3RtdBI4CgtkZWZpbmVfc3RtdBipASABKAsyFC5wZ19xdWVyeS5EZWZpbmVTdG10SABSCkRlZmluZVN0bXQSSwoSY3JlYXRlX2RvbWFpbl9zdG10GKoBIAEoCzIaLnBnX3F1ZXJ5LkNyZWF0ZURvbWFpblN0bXRIAFIQQ3JlYXRlRG9tYWluU3RtdBJPChRjcmVhdGVfb3BfY2xhc3Nfc3RtdBirASABKAsyGy5wZ19xdWVyeS5DcmVhdGVPcENsYXNzU3RtdEgAUhFDcmVhdGVPcENsYXNzU3RtdBJPChRjcmVhdGVfb3BfY2xhc3NfaXRlbRisASABKAsyGy5wZ19xdWVyeS5DcmVhdGVPcENsYXNzSXRlbUgAUhFDcmVhdGVPcENsYXNzSXRlbRJSChVjcmVhdGVfb3BfZmFtaWx5X3N0bXQYrQEgASgLMhwucGdfcXVlcnkuQ3JlYXRlT3BGYW1pbHlTdG10SABSEkNyZWF0ZU9wRmFtaWx5U3RtdBJPChRhbHRlcl9vcF9mYW1pbHlfc3RtdBiuASABKAsyGy5wZ19xdWVyeS5BbHRlck9wRmFtaWx5U3RtdEgAUhFBbHRlck9wRmFtaWx5U3RtdBIyCglkcm9wX3N0bXQYrwEgASgLMhIucGdfcXVlcnkuRHJvcFN0bXRIAFIIRHJvcFN0bXQSPgoNdHJ1bmNhdGVfc3RtdBiwASABKAsyFi5wZ19xdWVyeS5UcnVuY2F0ZVN0bXRIAFIMVHJ1bmNhdGVTdG10EjsKDGNvbW1lbnRfc3RtdBixASABKAsyFS5wZ19xdWVyeS5Db21tZW50U3RtdEgAUgtDb21tZW50U3RtdBI/Cg5zZWNfbGFiZWxfc3RtdBiyASABKAsyFi5wZ19xdWVyeS5TZWNMYWJlbFN0bXRIAFIMU2VjTGFiZWxTdG10Ek4KE2RlY2xhcmVfY3Vyc29yX3N0bXQYswEgASgLMhsucGdfcXVlcnkuRGVjbGFyZUN1cnNvclN0bXRIAFIRRGVjbGFyZUN1cnNvclN0bXQSSAoRY2xvc2VfcG9ydGFsX3N0bXQYtAEgASgLMhkucGdfcXVlcnkuQ2xvc2VQb3J0YWxTdG10SABSD0Nsb3NlUG9ydGFsU3RtdBI1CgpmZXRjaF9zdG10GLUBIAEoCzITLnBnX3F1ZXJ5LkZldGNoU3RtdEgAUglGZXRjaFN0bXQSNQoKaW5kZXhfc3RtdBi2ASABKAsyEy5wZ19xdWVyeS5JbmRleFN0bXRIAFIJSW5kZXhTdG10EkgKEWNyZWF0ZV9zdGF0c19zdG10GLcBIAEoCzIZLnBnX3F1ZXJ5LkNyZWF0ZVN0YXRzU3RtdEgAUg9DcmVhdGVTdGF0c1N0bXQSNQoKc3RhdHNfZWxlbRi4ASABKAsyEy5wZ19xdWVyeS5TdGF0c0VsZW1IAFIJU3RhdHNFbGVtEkUKEGFsdGVyX3N0YXRzX3N0bXQYuQEgASgLMhgucGdfcXVlcnkuQWx0ZXJTdGF0c1N0bXRIAFIOQWx0ZXJTdGF0c1N0bXQSUQoUY3JlYXRlX2Z1bmN0aW9uX3N0bXQYugEgASgLMhwucGdfcXVlcnkuQ3JlYXRlRnVuY3Rpb25TdG10SABSEkNyZWF0ZUZ1bmN0aW9uU3RtdBJNChJmdW5jdGlvbl9wYXJhbWV0ZXIYuwEgASgLMhsucGdfcXVlcnkuRnVuY3Rpb25QYXJhbWV0ZXJIAFIRRnVuY3Rpb25QYXJhbWV0ZXISTgoTYWx0ZXJfZnVuY3Rpb25fc3RtdBi8ASABKAsyGy5wZ19xdWVyeS5BbHRlckZ1bmN0aW9uU3RtdEgAUhFBbHRlckZ1bmN0aW9uU3RtdBIsCgdkb19zdG10GL0BIAEoCzIQLnBnX3F1ZXJ5LkRvU3RtdEgAUgZEb1N0bXQSSAoRaW5saW5lX2NvZGVfYmxvY2sYvgEgASgLMhkucGdfcXVlcnkuSW5saW5lQ29kZUJsb2NrSABSD0lubGluZUNvZGVCbG9jaxIyCgljYWxsX3N0bXQYvwEgASgLMhIucGdfcXVlcnkuQ2FsbFN0bXRIAFIIQ2FsbFN0bXQSOwoMY2FsbF9jb250ZXh0GMABIAEoCzIVLnBnX3F1ZXJ5LkNhbGxDb250ZXh0SABSC0NhbGxDb250ZXh0EjgKC3JlbmFtZV9zdG10GMEBIAEoCzIULnBnX3F1ZXJ5LlJlbmFtZVN0bXRIAFIKUmVuYW1lU3RtdBJeChlhbHRlcl9vYmplY3RfZGVwZW5kc19zdG10GMIBIAEoCzIgLnBnX3F1ZXJ5LkFsdGVyT2JqZWN0RGVwZW5kc1N0bXRIAFIWQWx0ZXJPYmplY3REZXBlbmRzU3RtdBJbChhhbHRlcl9vYmplY3Rfc2NoZW1hX3N0bXQYwwEgASgLMh8ucGdfcXVlcnkuQWx0ZXJPYmplY3RTY2hlbWFTdG10SABSFUFsdGVyT2JqZWN0U2NoZW1hU3RtdBJFChBhbHRlcl9vd25lcl9zdG10GMQBIAEoCzIYLnBnX3F1ZXJ5LkFsdGVyT3duZXJTdG10SABSDkFsdGVyT3duZXJTdG10Ek4KE2FsdGVyX29wZXJhdG9yX3N0bXQYxQEgASgLMhsucGdfcXVlcnkuQWx0ZXJPcGVyYXRvclN0bXRIAFIRQWx0ZXJPcGVyYXRvclN0bXQSQgoPYWx0ZXJfdHlwZV9zdG10GMYBIAEoCzIXLnBnX3F1ZXJ5LkFsdGVyVHlwZVN0bXRIAFINQWx0ZXJUeXBlU3RtdBIyCglydWxlX3N0bXQYxwEgASgLMhIucGdfcXVlcnkuUnVsZVN0bXRIAFIIUnVsZVN0bXQSOAoLbm90aWZ5X3N0bXQYyAEgASgLMhQucGdfcXVlcnkuTm90aWZ5U3RtdEgAUgpOb3RpZnlTdG10EjgKC2xpc3Rlbl9zdG10GMkBIAEoCzIULnBnX3F1ZXJ5Lkxpc3RlblN0bXRIAFIKTGlzdGVuU3RtdBI+Cg11bmxpc3Rlbl9zdG10GMoBIAEoCzIWLnBnX3F1ZXJ5LlVubGlzdGVuU3RtdEgAUgxVbmxpc3RlblN0bXQSRwoQdHJhbnNhY3Rpb25fc3RtdBjLASABKAsyGS5wZ19xdWVyeS5UcmFuc2FjdGlvblN0bXRIAFIPVHJhbnNhY3Rpb25TdG10Ek4KE2NvbXBvc2l0ZV90eXBlX3N0bXQYzAEgASgLMhsucGdfcXVlcnkuQ29tcG9zaXRlVHlwZVN0bXRIAFIRQ29tcG9zaXRlVHlwZVN0bXQSRQoQY3JlYXRlX2VudW1fc3RtdBjNASABKAsyGC5wZ19xdWVyeS5DcmVhdGVFbnVtU3RtdEgAUg5DcmVhdGVFbnVtU3RtdBJIChFjcmVhdGVfcmFuZ2Vfc3RtdBjOASABKAsyGS5wZ19xdWVyeS5DcmVhdGVSYW5nZVN0bXRIAFIPQ3JlYXRlUmFuZ2VTdG10EkIKD2FsdGVyX2VudW1fc3RtdBjPASABKAsyFy5wZ19xdWVyeS5BbHRlckVudW1TdG10SABSDUFsdGVyRW51bVN0bXQSMgoJdmlld19zdG10GNABIAEoCzISLnBnX3F1ZXJ5LlZpZXdTdG10SABSCFZpZXdTdG10EjIKCWxvYWRfc3RtdBjRASABKAsyEi5wZ19xdWVyeS5Mb2FkU3RtdEgAUghMb2FkU3RtdBI+Cg1jcmVhdGVkYl9zdG10GNIBIAEoCzIWLnBnX3F1ZXJ5LkNyZWF0ZWRiU3RtdEgAUgxDcmVhdGVkYlN0bXQSTgoTYWx0ZXJfZGF0YWJhc2Vfc3RtdBjTASABKAsyGy5wZ19xdWVyeS5BbHRlckRhdGFiYXNlU3RtdEgAUhFBbHRlckRhdGFiYXNlU3RtdBJxCiBhbHRlcl9kYXRhYmFzZV9yZWZyZXNoX2NvbGxfc3RtdBjUASABKAsyJi5wZ19xdWVyeS5BbHRlckRhdGFiYXNlUmVmcmVzaENvbGxTdG10SABSHEFsdGVyRGF0YWJhc2VSZWZyZXNoQ29sbFN0bXQSWAoXYWx0ZXJfZGF0YWJhc2Vfc2V0X3N0bXQY1QEgASgLMh4ucGdfcXVlcnkuQWx0ZXJEYXRhYmFzZVNldFN0bXRIAFIUQWx0ZXJEYXRhYmFzZVNldFN0bXQSOAoLZHJvcGRiX3N0bXQY1gEgASgLMhQucGdfcXVlcnkuRHJvcGRiU3RtdEgAUgpEcm9wZGJTdG10EkgKEWFsdGVyX3N5c3RlbV9zdG10GNcBIAEoCzIZLnBnX3F1ZXJ5LkFsdGVyU3lzdGVtU3RtdEgAUg9BbHRlclN5c3RlbVN0bXQSOwoMY2x1c3Rlcl9zdG10GNgBIAEoCzIVLnBnX3F1ZXJ5LkNsdXN0ZXJTdG10SABSC0NsdXN0ZXJTdG10EjgKC3ZhY3V1bV9zdG10GNkBIAEoCzIULnBnX3F1ZXJ5LlZhY3V1bVN0bXRIAFIKVmFjdXVtU3RtdBJECg92YWN1dW1fcmVsYXRpb24Y2gEgASgLMhgucGdfcXVlcnkuVmFjdXVtUmVsYXRpb25IAFIOVmFjdXVtUmVsYXRpb24SOwoMZXhwbGFpbl9zdG10GNsBIAEoCzIVLnBnX3F1ZXJ5LkV4cGxhaW5TdG10SABSC0V4cGxhaW5TdG10Ek8KFGNyZWF0ZV90YWJsZV9hc19zdG10GNwBIAEoCzIbLnBnX3F1ZXJ5LkNyZWF0ZVRhYmxlQXNTdG10SABSEUNyZWF0ZVRhYmxlQXNTdG10ElIKFXJlZnJlc2hfbWF0X3ZpZXdfc3RtdBjdASABKAsyHC5wZ19xdWVyeS5SZWZyZXNoTWF0Vmlld1N0bXRIAFISUmVmcmVzaE1hdFZpZXdTdG10EkUKEGNoZWNrX3BvaW50X3N0bXQY3gEgASgLMhgucGdfcXVlcnkuQ2hlY2tQb2ludFN0bXRIAFIOQ2hlY2tQb2ludFN0bXQSOwoMZGlzY2FyZF9zdG10GN8BIAEoCzIVLnBnX3F1ZXJ5LkRpc2NhcmRTdG10SABSC0Rpc2NhcmRTdG10EjIKCWxvY2tfc3RtdBjgASABKAsyEi5wZ19xdWVyeS5Mb2NrU3RtdEgAUghMb2NrU3RtdBJRChRjb25zdHJhaW50c19zZXRfc3RtdBjhASABKAsyHC5wZ19xdWVyeS5Db25zdHJhaW50c1NldFN0bXRIAFISQ29uc3RyYWludHNTZXRTdG10EjsKDHJlaW5kZXhfc3RtdBjiASABKAsyFS5wZ19xdWVyeS5SZWluZGV4U3RtdEgAUgtSZWluZGV4U3RtdBJXChZjcmVhdGVfY29udmVyc2lvbl9zdG10GOMBIAEoCzIeLnBnX3F1ZXJ5LkNyZWF0ZUNvbnZlcnNpb25TdG10SABSFENyZWF0ZUNvbnZlcnNpb25TdG10EkUKEGNyZWF0ZV9jYXN0X3N0bXQY5AEgASgLMhgucGdfcXVlcnkuQ3JlYXRlQ2FzdFN0bXRIAFIOQ3JlYXRlQ2FzdFN0bXQSVAoVY3JlYXRlX3RyYW5zZm9ybV9zdG10GOUBIAEoCzIdLnBnX3F1ZXJ5LkNyZWF0ZVRyYW5zZm9ybVN0bXRIAFITQ3JlYXRlVHJhbnNmb3JtU3RtdBI7CgxwcmVwYXJlX3N0bXQY5gEgASgLMhUucGdfcXVlcnkuUHJlcGFyZVN0bXRIAFILUHJlcGFyZVN0bXQSOwoMZXhlY3V0ZV9zdG10GOcBIAEoCzIVLnBnX3F1ZXJ5LkV4ZWN1dGVTdG10SABSC0V4ZWN1dGVTdG10EkQKD2RlYWxsb2NhdGVfc3RtdBjoASABKAsyGC5wZ19xdWVyeS5EZWFsbG9jYXRlU3RtdEgAUg5EZWFsbG9jYXRlU3RtdBJCCg9kcm9wX293bmVkX3N0bXQY6QEgASgLMhcucGdfcXVlcnkuRHJvcE93bmVkU3RtdEgAUg1Ecm9wT3duZWRTdG10Ek4KE3JlYXNzaWduX293bmVkX3N0bXQY6gEgASgLMhsucGdfcXVlcnkuUmVhc3NpZ25Pd25lZFN0bXRIAFIRUmVhc3NpZ25Pd25lZFN0bXQSWgoXYWx0ZXJfdHNkaWN0aW9uYXJ5X3N0bXQY6wEgASgLMh8ucGdfcXVlcnkuQWx0ZXJUU0RpY3Rpb25hcnlTdG10SABSFUFsdGVyVFNEaWN0aW9uYXJ5U3RtdBJjChphbHRlcl90c2NvbmZpZ3VyYXRpb25fc3RtdBjsASABKAsyIi5wZ19xdWVyeS5BbHRlclRTQ29uZmlndXJhdGlvblN0bXRIAFIYQWx0ZXJUU0NvbmZpZ3VyYXRpb25TdG10EkoKEXB1YmxpY2F0aW9uX3RhYmxlGO0BIAEoCzIaLnBnX3F1ZXJ5LlB1YmxpY2F0aW9uVGFibGVIAFIQUHVibGljYXRpb25UYWJsZRJRChRwdWJsaWNhdGlvbl9vYmpfc3BlYxjuASABKAsyHC5wZ19xdWVyeS5QdWJsaWNhdGlvbk9ialNwZWNIAFISUHVibGljYXRpb25PYmpTcGVjEloKF2NyZWF0ZV9wdWJsaWNhdGlvbl9zdG10GO8BIAEoCzIfLnBnX3F1ZXJ5LkNyZWF0ZVB1YmxpY2F0aW9uU3RtdEgAUhVDcmVhdGVQdWJsaWNhdGlvblN0bXQSVwoWYWx0ZXJfcHVibGljYXRpb25fc3RtdBjwASABKAsyHi5wZ19xdWVyeS5BbHRlclB1YmxpY2F0aW9uU3RtdEgAUhRBbHRlclB1YmxpY2F0aW9uU3RtdBJdChhjcmVhdGVfc3Vic2NyaXB0aW9uX3N0bXQY8QEgASgLMiAucGdfcXVlcnkuQ3JlYXRlU3Vic2NyaXB0aW9uU3RtdEgAUhZDcmVhdGVTdWJzY3JpcHRpb25TdG10EloKF2FsdGVyX3N1YnNjcmlwdGlvbl9zdG10GPIBIAEoCzIfLnBnX3F1ZXJ5LkFsdGVyU3Vic2NyaXB0aW9uU3RtdEgAUhVBbHRlclN1YnNjcmlwdGlvblN0bXQSVwoWZHJvcF9zdWJzY3JpcHRpb25fc3RtdBjzASABKAsyHi5wZ19xdWVyeS5Ecm9wU3Vic2NyaXB0aW9uU3RtdEgAUhREcm9wU3Vic2NyaXB0aW9uU3RtdBIuCgdpbnRlZ2VyGPQBIAEoCzIRLnBnX3F1ZXJ5LkludGVnZXJIAFIHSW50ZWdlchIoCgVmbG9hdBj1ASABKAsyDy5wZ19xdWVyeS5GbG9hdEgAUgVGbG9hdBIuCgdib29sZWFuGPYBIAEoCzIRLnBnX3F1ZXJ5LkJvb2xlYW5IAFIHQm9vbGVhbhIrCgZzdHJpbmcY9wEgASgLMhAucGdfcXVlcnkuU3RyaW5nSABSBlN0cmluZxI1CgpiaXRfc3RyaW5nGPgBIAEoCzITLnBnX3F1ZXJ5LkJpdFN0cmluZ0gAUglCaXRTdHJpbmcSJQoEbGlzdBj5ASABKAsyDi5wZ19xdWVyeS5MaXN0SABSBExpc3QSLwoIaW50X2xpc3QY+gEgASgLMhEucGdfcXVlcnkuSW50TGlzdEgAUgdJbnRMaXN0Ei8KCG9pZF9saXN0GPsBIAEoCzIRLnBnX3F1ZXJ5Lk9pZExpc3RIAFIHT2lkTGlzdBIuCgdhX2NvbnN0GPwBIAEoCzIRLnBnX3F1ZXJ5LkFfQ29uc3RIAFIHQV9Db25zdEIGCgRub2RlIhcKB0ludGVnZXISDAoEaXZhbBgBIAEoBSIVCgVGbG9hdBIMCgRmdmFsGAEgASgJIhoKB0Jvb2xlYW4SDwoHYm9vbHZhbBgBIAEoCCIWCgZTdHJpbmcSDAoEc3ZhbBgBIAEoCSIaCglCaXRTdHJpbmcSDQoFYnN2YWwYASABKAkiJQoETGlzdBIdCgVpdGVtcxgBIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUiKAoHT2lkTGlzdBIdCgVpdGVtcxgBIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUiKAoHSW50TGlzdBIdCgVpdGVtcxgBIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUi5AEKB0FfQ29uc3QSIQoEaXZhbBgBIAEoCzIRLnBnX3F1ZXJ5LkludGVnZXJIABIfCgRmdmFsGAIgASgLMg8ucGdfcXVlcnkuRmxvYXRIABIkCgdib29sdmFsGAMgASgLMhEucGdfcXVlcnkuQm9vbGVhbkgAEiAKBHN2YWwYBCABKAsyEC5wZ19xdWVyeS5TdHJpbmdIABIkCgVic3ZhbBgFIAEoCzITLnBnX3F1ZXJ5LkJpdFN0cmluZ0gAEg4KBmlzbnVsbBgKIAEoCBIQCghsb2NhdGlvbhgLIAEoBUIFCgN2YWwiPAoFQWxpYXMSEQoJYWxpYXNuYW1lGAEgASgJEiAKCGNvbG5hbWVzGAIgAygLMg4ucGdfcXVlcnkuTm9kZSKbAQoIUmFuZ2VWYXISEwoLY2F0YWxvZ25hbWUYASABKAkSEgoKc2NoZW1hbmFtZRgCIAEoCRIPCgdyZWxuYW1lGAMgASgJEgsKA2luaBgEIAEoCBIWCg5yZWxwZXJzaXN0ZW5jZRgFIAEoCRIeCgVhbGlhcxgGIAEoCzIPLnBnX3F1ZXJ5LkFsaWFzEhAKCGxvY2F0aW9uGAcgASgFIrQDCglUYWJsZUZ1bmMSKAoHbnNfdXJpcxgBIAMoCzIOLnBnX3F1ZXJ5Lk5vZGVSB25zX3VyaXMSKgoIbnNfbmFtZXMYAiADKAsyDi5wZ19xdWVyeS5Ob2RlUghuc19uYW1lcxIfCgdkb2NleHByGAMgASgLMg4ucGdfcXVlcnkuTm9kZRIfCgdyb3dleHByGAQgASgLMg4ucGdfcXVlcnkuTm9kZRIgCghjb2xuYW1lcxgFIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSIAoIY29sdHlwZXMYBiADKAsyDi5wZ19xdWVyeS5Ob2RlEiIKCmNvbHR5cG1vZHMYByADKAsyDi5wZ19xdWVyeS5Ob2RlEiUKDWNvbGNvbGxhdGlvbnMYCCADKAsyDi5wZ19xdWVyeS5Ob2RlEiAKCGNvbGV4cHJzGAkgAygLMg4ucGdfcXVlcnkuTm9kZRIjCgtjb2xkZWZleHBycxgKIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSEAoIbm90bnVsbHMYCyADKAQSFQoNb3JkaW5hbGl0eWNvbBgMIAEoBRIQCghsb2NhdGlvbhgNIAEoBSKGAgoKSW50b0NsYXVzZRIfCgNyZWwYASABKAsyEi5wZ19xdWVyeS5SYW5nZVZhchIhCgljb2xfbmFtZXMYAiADKAsyDi5wZ19xdWVyeS5Ob2RlEhUKDWFjY2Vzc19tZXRob2QYAyABKAkSHwoHb3B0aW9ucxgEIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSKwoJb25fY29tbWl0GAUgASgOMhgucGdfcXVlcnkuT25Db21taXRBY3Rpb24SGAoQdGFibGVfc3BhY2VfbmFtZRgGIAEoCRIiCgp2aWV3X3F1ZXJ5GAcgASgLMg4ucGdfcXVlcnkuTm9kZRIRCglza2lwX2RhdGEYCCABKAgiuQEKA1ZhchIbCgN4cHIYASABKAsyDi5wZ19xdWVyeS5Ob2RlEg0KBXZhcm5vGAIgASgFEhAKCHZhcmF0dG5vGAMgASgFEg8KB3ZhcnR5cGUYBCABKA0SEQoJdmFydHlwbW9kGAUgASgFEhEKCXZhcmNvbGxpZBgGIAEoDRIWCg52YXJudWxsaW5ncmVscxgHIAMoBBITCgt2YXJsZXZlbHN1cBgIIAEoDRIQCghsb2NhdGlvbhgJIAEoBSKsAQoFUGFyYW0SGwoDeHByGAEgASgLMg4ucGdfcXVlcnkuTm9kZRImCglwYXJhbWtpbmQYAiABKA4yEy5wZ19xdWVyeS5QYXJhbUtpbmQSDwoHcGFyYW1pZBgDIAEoBRIRCglwYXJhbXR5cGUYBCABKA0SEwoLcGFyYW10eXBtb2QYBSABKAUSEwoLcGFyYW1jb2xsaWQYBiABKA0SEAoIbG9jYXRpb24YByABKAUi6wMKBkFnZ3JlZhIbCgN4cHIYASABKAsyDi5wZ19xdWVyeS5Ob2RlEhAKCGFnZ2Zub2lkGAIgASgNEg8KB2FnZ3R5cGUYAyABKA0SEQoJYWdnY29sbGlkGAQgASgNEhMKC2lucHV0Y29sbGlkGAUgASgNEiMKC2FnZ2FyZ3R5cGVzGAYgAygLMg4ucGdfcXVlcnkuTm9kZRIlCg1hZ2dkaXJlY3RhcmdzGAcgAygLMg4ucGdfcXVlcnkuTm9kZRIcCgRhcmdzGAggAygLMg4ucGdfcXVlcnkuTm9kZRIgCghhZ2dvcmRlchgJIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSIwoLYWdnZGlzdGluY3QYCiADKAsyDi5wZ19xdWVyeS5Ob2RlEiEKCWFnZ2ZpbHRlchgLIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSDwoHYWdnc3RhchgMIAEoCBITCgthZ2d2YXJpYWRpYxgNIAEoCBIPCgdhZ2draW5kGA4gASgJEhMKC2FnZ2xldmVsc3VwGA8gASgNEiQKCGFnZ3NwbGl0GBAgASgOMhIucGdfcXVlcnkuQWdnU3BsaXQSDQoFYWdnbm8YESABKAUSEgoKYWdndHJhbnNubxgSIAEoBRIQCghsb2NhdGlvbhgTIAEoBSKOAQoMR3JvdXBpbmdGdW5jEhsKA3hwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSHAoEYXJncxgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSHAoEcmVmcxgDIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSEwoLYWdnbGV2ZWxzdXAYBCABKA0SEAoIbG9jYXRpb24YBSABKAUi+AEKCldpbmRvd0Z1bmMSGwoDeHByGAEgASgLMg4ucGdfcXVlcnkuTm9kZRIQCgh3aW5mbm9pZBgCIAEoDRIPCgd3aW50eXBlGAMgASgNEhEKCXdpbmNvbGxpZBgEIAEoDRITCgtpbnB1dGNvbGxpZBgFIAEoDRIcCgRhcmdzGAYgAygLMg4ucGdfcXVlcnkuTm9kZRIhCglhZ2dmaWx0ZXIYByABKAsyDi5wZ19xdWVyeS5Ob2RlEg4KBndpbnJlZhgIIAEoDRIPCgd3aW5zdGFyGAkgASgIEg4KBndpbmFnZxgKIAEoCBIQCghsb2NhdGlvbhgLIAEoBSKwAgoPU3Vic2NyaXB0aW5nUmVmEhsKA3hwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSGAoQcmVmY29udGFpbmVydHlwZRgCIAEoDRITCgtyZWZlbGVtdHlwZRgDIAEoDRISCgpyZWZyZXN0eXBlGAQgASgNEhEKCXJlZnR5cG1vZBgFIAEoBRIRCglyZWZjb2xsaWQYBiABKA0SJwoPcmVmdXBwZXJpbmRleHByGAcgAygLMg4ucGdfcXVlcnkuTm9kZRInCg9yZWZsb3dlcmluZGV4cHIYCCADKAsyDi5wZ19xdWVyeS5Ob2RlEh8KB3JlZmV4cHIYCSABKAsyDi5wZ19xdWVyeS5Ob2RlEiQKDHJlZmFzc2duZXhwchgKIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUi/gEKCEZ1bmNFeHByEhsKA3hwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSDgoGZnVuY2lkGAIgASgNEhYKDmZ1bmNyZXN1bHR0eXBlGAMgASgNEhIKCmZ1bmNyZXRzZXQYBCABKAgSFAoMZnVuY3ZhcmlhZGljGAUgASgIEioKCmZ1bmNmb3JtYXQYBiABKA4yFi5wZ19xdWVyeS5Db2VyY2lvbkZvcm0SEgoKZnVuY2NvbGxpZBgHIAEoDRITCgtpbnB1dGNvbGxpZBgIIAEoDRIcCgRhcmdzGAkgAygLMg4ucGdfcXVlcnkuTm9kZRIQCghsb2NhdGlvbhgKIAEoBSJ7CgxOYW1lZEFyZ0V4cHISGwoDeHByGAEgASgLMg4ucGdfcXVlcnkuTm9kZRIbCgNhcmcYAiABKAsyDi5wZ19xdWVyeS5Ob2RlEgwKBG5hbWUYAyABKAkSEQoJYXJnbnVtYmVyGAQgASgFEhAKCGxvY2F0aW9uGAUgASgFIrIBCgZPcEV4cHISGwoDeHByGAEgASgLMg4ucGdfcXVlcnkuTm9kZRIMCgRvcG5vGAIgASgNEhQKDG9wcmVzdWx0dHlwZRgDIAEoDRIQCghvcHJldHNldBgEIAEoCBIQCghvcGNvbGxpZBgFIAEoDRITCgtpbnB1dGNvbGxpZBgGIAEoDRIcCgRhcmdzGAcgAygLMg4ucGdfcXVlcnkuTm9kZRIQCghsb2NhdGlvbhgIIAEoBSK4AQoMRGlzdGluY3RFeHByEhsKA3hwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSDAoEb3BubxgCIAEoDRIUCgxvcHJlc3VsdHR5cGUYAyABKA0SEAoIb3ByZXRzZXQYBCABKAgSEAoIb3Bjb2xsaWQYBSABKA0SEwoLaW5wdXRjb2xsaWQYBiABKA0SHAoEYXJncxgHIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSEAoIbG9jYXRpb24YCCABKAUitgEKCk51bGxJZkV4cHISGwoDeHByGAEgASgLMg4ucGdfcXVlcnkuTm9kZRIMCgRvcG5vGAIgASgNEhQKDG9wcmVzdWx0dHlwZRgDIAEoDRIQCghvcHJldHNldBgEIAEoCBIQCghvcGNvbGxpZBgFIAEoDRITCgtpbnB1dGNvbGxpZBgGIAEoDRIcCgRhcmdzGAcgAygLMg4ucGdfcXVlcnkuTm9kZRIQCghsb2NhdGlvbhgIIAEoBSKTAQoRU2NhbGFyQXJyYXlPcEV4cHISGwoDeHByGAEgASgLMg4ucGdfcXVlcnkuTm9kZRIMCgRvcG5vGAIgASgNEg4KBnVzZV9vchgDIAEoCBITCgtpbnB1dGNvbGxpZBgEIAEoDRIcCgRhcmdzGAUgAygLMg4ucGdfcXVlcnkuTm9kZRIQCghsb2NhdGlvbhgGIAEoBSJ/CghCb29sRXhwchIbCgN4cHIYASABKAsyDi5wZ19xdWVyeS5Ob2RlEiYKBmJvb2xvcBgCIAEoDjIWLnBnX3F1ZXJ5LkJvb2xFeHByVHlwZRIcCgRhcmdzGAMgAygLMg4ucGdfcXVlcnkuTm9kZRIQCghsb2NhdGlvbhgEIAEoBSLjAQoHU3ViTGluaxIbCgN4cHIYASABKAsyDi5wZ19xdWVyeS5Ob2RlEiwKDXN1Yl9saW5rX3R5cGUYAiABKA4yFS5wZ19xdWVyeS5TdWJMaW5rVHlwZRITCgtzdWJfbGlua19pZBgDIAEoBRIgCgh0ZXN0ZXhwchgEIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSIQoJb3Blcl9uYW1lGAUgAygLMg4ucGdfcXVlcnkuTm9kZRIhCglzdWJzZWxlY3QYBiABKAsyDi5wZ19xdWVyeS5Ob2RlEhAKCGxvY2F0aW9uGAcgASgFIqYECgdTdWJQbGFuEhsKA3hwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSLAoNc3ViX2xpbmtfdHlwZRgCIAEoDjIVLnBnX3F1ZXJ5LlN1YkxpbmtUeXBlEiAKCHRlc3RleHByGAMgASgLMg4ucGdfcXVlcnkuTm9kZRIhCglwYXJhbV9pZHMYBCADKAsyDi5wZ19xdWVyeS5Ob2RlEhgKB3BsYW5faWQYBSABKAVSB3BsYW5faWQSHAoJcGxhbl9uYW1lGAYgASgJUglwbGFuX25hbWUSFgoOZmlyc3RfY29sX3R5cGUYByABKA0SGAoQZmlyc3RfY29sX3R5cG1vZBgIIAEoBRIbChNmaXJzdF9jb2xfY29sbGF0aW9uGAkgASgNEhYKDnVzZV9oYXNoX3RhYmxlGAogASgIEhgKEHVua25vd25fZXFfZmFsc2UYCyABKAgSJAoNcGFyYWxsZWxfc2FmZRgMIAEoCFINcGFyYWxsZWxfc2FmZRIhCglzZXRfcGFyYW0YDSADKAsyDi5wZ19xdWVyeS5Ob2RlEiEKCXBhcl9wYXJhbRgOIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSHAoEYXJncxgPIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSIgoMc3RhcnR1cF9jb3N0GBAgASgBUgxzdGFydHVwX2Nvc3QSJAoNcGVyX2NhbGxfY29zdBgRIAEoAVINcGVyX2NhbGxfY29zdCJTChJBbHRlcm5hdGl2ZVN1YlBsYW4SGwoDeHByGAEgASgLMg4ucGdfcXVlcnkuTm9kZRIgCghzdWJwbGFucxgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUimQEKC0ZpZWxkU2VsZWN0EhsKA3hwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSGwoDYXJnGAIgASgLMg4ucGdfcXVlcnkuTm9kZRIQCghmaWVsZG51bRgDIAEoBRISCgpyZXN1bHR0eXBlGAQgASgNEhQKDHJlc3VsdHR5cG1vZBgFIAEoBRIUCgxyZXN1bHRjb2xsaWQYBiABKA0ingEKCkZpZWxkU3RvcmUSGwoDeHByGAEgASgLMg4ucGdfcXVlcnkuTm9kZRIbCgNhcmcYAiABKAsyDi5wZ19xdWVyeS5Ob2RlEh8KB25ld3ZhbHMYAyADKAsyDi5wZ19xdWVyeS5Ob2RlEiEKCWZpZWxkbnVtcxgEIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSEgoKcmVzdWx0dHlwZRgFIAEoDSLIAQoLUmVsYWJlbFR5cGUSGwoDeHByGAEgASgLMg4ucGdfcXVlcnkuTm9kZRIbCgNhcmcYAiABKAsyDi5wZ19xdWVyeS5Ob2RlEhIKCnJlc3VsdHR5cGUYAyABKA0SFAoMcmVzdWx0dHlwbW9kGAQgASgFEhQKDHJlc3VsdGNvbGxpZBgFIAEoDRItCg1yZWxhYmVsZm9ybWF0GAYgASgOMhYucGdfcXVlcnkuQ29lcmNpb25Gb3JtEhAKCGxvY2F0aW9uGAcgASgFIrEBCgtDb2VyY2VWaWFJTxIbCgN4cHIYASABKAsyDi5wZ19xdWVyeS5Ob2RlEhsKA2FyZxgCIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSEgoKcmVzdWx0dHlwZRgDIAEoDRIUCgxyZXN1bHRjb2xsaWQYBCABKA0SLAoMY29lcmNlZm9ybWF0GAUgASgOMhYucGdfcXVlcnkuQ29lcmNpb25Gb3JtEhAKCGxvY2F0aW9uGAYgASgFIu0BCg9BcnJheUNvZXJjZUV4cHISGwoDeHByGAEgASgLMg4ucGdfcXVlcnkuTm9kZRIbCgNhcmcYAiABKAsyDi5wZ19xdWVyeS5Ob2RlEiAKCGVsZW1leHByGAMgASgLMg4ucGdfcXVlcnkuTm9kZRISCgpyZXN1bHR0eXBlGAQgASgNEhQKDHJlc3VsdHR5cG1vZBgFIAEoBRIUCgxyZXN1bHRjb2xsaWQYBiABKA0SLAoMY29lcmNlZm9ybWF0GAcgASgOMhYucGdfcXVlcnkuQ29lcmNpb25Gb3JtEhAKCGxvY2F0aW9uGAggASgFIqMBChJDb252ZXJ0Um93dHlwZUV4cHISGwoDeHByGAEgASgLMg4ucGdfcXVlcnkuTm9kZRIbCgNhcmcYAiABKAsyDi5wZ19xdWVyeS5Ob2RlEhIKCnJlc3VsdHR5cGUYAyABKA0SLQoNY29udmVydGZvcm1hdBgEIAEoDjIWLnBnX3F1ZXJ5LkNvZXJjaW9uRm9ybRIQCghsb2NhdGlvbhgFIAEoBSJrCgtDb2xsYXRlRXhwchIbCgN4cHIYASABKAsyDi5wZ19xdWVyeS5Ob2RlEhsKA2FyZxgCIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSEAoIY29sbF9vaWQYAyABKA0SEAoIbG9jYXRpb24YBCABKAUivQEKCENhc2VFeHByEhsKA3hwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSEAoIY2FzZXR5cGUYAiABKA0SEgoKY2FzZWNvbGxpZBgDIAEoDRIbCgNhcmcYBCABKAsyDi5wZ19xdWVyeS5Ob2RlEhwKBGFyZ3MYBSADKAsyDi5wZ19xdWVyeS5Ob2RlEiEKCWRlZnJlc3VsdBgGIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSEAoIbG9jYXRpb24YByABKAUidwoIQ2FzZVdoZW4SGwoDeHByGAEgASgLMg4ucGdfcXVlcnkuTm9kZRIcCgRleHByGAIgASgLMg4ucGdfcXVlcnkuTm9kZRIeCgZyZXN1bHQYAyABKAsyDi5wZ19xdWVyeS5Ob2RlEhAKCGxvY2F0aW9uGAQgASgFImEKDENhc2VUZXN0RXhwchIbCgN4cHIYASABKAsyDi5wZ19xdWVyeS5Ob2RlEg8KB3R5cGVfaWQYAiABKA0SEAoIdHlwZV9tb2QYAyABKAUSEQoJY29sbGF0aW9uGAQgASgNIt8BCglBcnJheUV4cHISGwoDeHByGAEgASgLMg4ucGdfcXVlcnkuTm9kZRIiCgxhcnJheV90eXBlaWQYAiABKA1SDGFycmF5X3R5cGVpZBIiCgxhcnJheV9jb2xsaWQYAyABKA1SDGFycmF5X2NvbGxpZBImCg5lbGVtZW50X3R5cGVpZBgEIAEoDVIOZWxlbWVudF90eXBlaWQSIAoIZWxlbWVudHMYBSADKAsyDi5wZ19xdWVyeS5Ob2RlEhEKCW11bHRpZGltcxgGIAEoCBIQCghsb2NhdGlvbhgHIAEoBSLQAQoHUm93RXhwchIbCgN4cHIYASABKAsyDi5wZ19xdWVyeS5Ob2RlEhwKBGFyZ3MYAiADKAsyDi5wZ19xdWVyeS5Ob2RlEh4KCnJvd190eXBlaWQYAyABKA1SCnJvd190eXBlaWQSNgoKcm93X2Zvcm1hdBgEIAEoDjIWLnBnX3F1ZXJ5LkNvZXJjaW9uRm9ybVIKcm93X2Zvcm1hdBIgCghjb2xuYW1lcxgFIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSEAoIbG9jYXRpb24YBiABKAUi/gEKDlJvd0NvbXBhcmVFeHByEhsKA3hwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSKAoGcmN0eXBlGAIgASgOMhgucGdfcXVlcnkuUm93Q29tcGFyZVR5cGUSHQoFb3Bub3MYAyADKAsyDi5wZ19xdWVyeS5Ob2RlEiIKCm9wZmFtaWxpZXMYBCADKAsyDi5wZ19xdWVyeS5Ob2RlEiQKDGlucHV0Y29sbGlkcxgFIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSHQoFbGFyZ3MYBiADKAsyDi5wZ19xdWVyeS5Ob2RlEh0KBXJhcmdzGAcgAygLMg4ucGdfcXVlcnkuTm9kZSKJAQoMQ29hbGVzY2VFeHByEhsKA3hwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSFAoMY29hbGVzY2V0eXBlGAIgASgNEhYKDmNvYWxlc2NlY29sbGlkGAMgASgNEhwKBGFyZ3MYBCADKAsyDi5wZ19xdWVyeS5Ob2RlEhAKCGxvY2F0aW9uGAUgASgFIrgBCgpNaW5NYXhFeHByEhsKA3hwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSEgoKbWlubWF4dHlwZRgCIAEoDRIUCgxtaW5tYXhjb2xsaWQYAyABKA0SEwoLaW5wdXRjb2xsaWQYBCABKA0SHgoCb3AYBSABKA4yEi5wZ19xdWVyeS5NaW5NYXhPcBIcCgRhcmdzGAYgAygLMg4ucGdfcXVlcnkuTm9kZRIQCghsb2NhdGlvbhgHIAEoBSKJAQoQU1FMVmFsdWVGdW5jdGlvbhIbCgN4cHIYASABKAsyDi5wZ19xdWVyeS5Ob2RlEigKAm9wGAIgASgOMhwucGdfcXVlcnkuU1FMVmFsdWVGdW5jdGlvbk9wEgwKBHR5cGUYAyABKA0SDgoGdHlwbW9kGAQgASgFEhAKCGxvY2F0aW9uGAUgASgFIr0CCgdYbWxFeHByEhsKA3hwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSHwoCb3AYAiABKA4yEy5wZ19xdWVyeS5YbWxFeHByT3ASDAoEbmFtZRgDIAEoCRIuCgpuYW1lZF9hcmdzGAQgAygLMg4ucGdfcXVlcnkuTm9kZVIKbmFtZWRfYXJncxIsCglhcmdfbmFtZXMYBSADKAsyDi5wZ19xdWVyeS5Ob2RlUglhcmdfbmFtZXMSHAoEYXJncxgGIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSKgoJeG1sb3B0aW9uGAcgASgOMhcucGdfcXVlcnkuWG1sT3B0aW9uVHlwZRIOCgZpbmRlbnQYCCABKAgSDAoEdHlwZRgJIAEoDRIOCgZ0eXBtb2QYCiABKAUSEAoIbG9jYXRpb24YCyABKAUihAEKCkpzb25Gb3JtYXQSOgoLZm9ybWF0X3R5cGUYASABKA4yGC5wZ19xdWVyeS5Kc29uRm9ybWF0VHlwZVILZm9ybWF0X3R5cGUSKAoIZW5jb2RpbmcYAiABKA4yFi5wZ19xdWVyeS5Kc29uRW5jb2RpbmcSEAoIbG9jYXRpb24YAyABKAUiVAoNSnNvblJldHVybmluZxIkCgZmb3JtYXQYASABKAsyFC5wZ19xdWVyeS5Kc29uRm9ybWF0Eg0KBXR5cGlkGAIgASgNEg4KBnR5cG1vZBgDIAEoBSKZAQoNSnNvblZhbHVlRXhwchIqCghyYXdfZXhwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGVSCHJhd19leHByEjYKDmZvcm1hdHRlZF9leHByGAIgASgLMg4ucGdfcXVlcnkuTm9kZVIOZm9ybWF0dGVkX2V4cHISJAoGZm9ybWF0GAMgASgLMhQucGdfcXVlcnkuSnNvbkZvcm1hdCKzAgoTSnNvbkNvbnN0cnVjdG9yRXhwchIbCgN4cHIYASABKAsyDi5wZ19xdWVyeS5Ob2RlEisKBHR5cGUYAiABKA4yHS5wZ19xdWVyeS5Kc29uQ29uc3RydWN0b3JUeXBlEhwKBGFyZ3MYAyADKAsyDi5wZ19xdWVyeS5Ob2RlEhwKBGZ1bmMYBCABKAsyDi5wZ19xdWVyeS5Ob2RlEiAKCGNvZXJjaW9uGAUgASgLMg4ucGdfcXVlcnkuTm9kZRIqCglyZXR1cm5pbmcYBiABKAsyFy5wZ19xdWVyeS5Kc29uUmV0dXJuaW5nEiYKDmFic2VudF9vbl9udWxsGAcgASgIUg5hYnNlbnRfb25fbnVsbBIOCgZ1bmlxdWUYCCABKAgSEAoIbG9jYXRpb24YCSABKAUiwAEKD0pzb25Jc1ByZWRpY2F0ZRIcCgRleHByGAEgASgLMg4ucGdfcXVlcnkuTm9kZRIkCgZmb3JtYXQYAiABKAsyFC5wZ19xdWVyeS5Kc29uRm9ybWF0EjUKCWl0ZW1fdHlwZRgDIAEoDjIXLnBnX3F1ZXJ5Lkpzb25WYWx1ZVR5cGVSCWl0ZW1fdHlwZRIgCgt1bmlxdWVfa2V5cxgEIAEoCFILdW5pcXVlX2tleXMSEAoIbG9jYXRpb24YBSABKAUilgEKCE51bGxUZXN0EhsKA3hwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSGwoDYXJnGAIgASgLMg4ucGdfcXVlcnkuTm9kZRIsCgxudWxsdGVzdHR5cGUYAyABKA4yFi5wZ19xdWVyeS5OdWxsVGVzdFR5cGUSEAoIYXJnaXNyb3cYBCABKAgSEAoIbG9jYXRpb24YBSABKAUihwEKC0Jvb2xlYW5UZXN0EhsKA3hwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSGwoDYXJnGAIgASgLMg4ucGdfcXVlcnkuTm9kZRIsCgxib29sdGVzdHR5cGUYAyABKA4yFi5wZ19xdWVyeS5Cb29sVGVzdFR5cGUSEAoIbG9jYXRpb24YBCABKAUizAEKDkNvZXJjZVRvRG9tYWluEhsKA3hwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSGwoDYXJnGAIgASgLMg4ucGdfcXVlcnkuTm9kZRISCgpyZXN1bHR0eXBlGAMgASgNEhQKDHJlc3VsdHR5cG1vZBgEIAEoBRIUCgxyZXN1bHRjb2xsaWQYBSABKA0SLgoOY29lcmNpb25mb3JtYXQYBiABKA4yFi5wZ19xdWVyeS5Db2VyY2lvbkZvcm0SEAoIbG9jYXRpb24YByABKAUiegoTQ29lcmNlVG9Eb21haW5WYWx1ZRIbCgN4cHIYASABKAsyDi5wZ19xdWVyeS5Ob2RlEg8KB3R5cGVfaWQYAiABKA0SEAoIdHlwZV9tb2QYAyABKAUSEQoJY29sbGF0aW9uGAQgASgNEhAKCGxvY2F0aW9uGAUgASgFInMKDFNldFRvRGVmYXVsdBIbCgN4cHIYASABKAsyDi5wZ19xdWVyeS5Ob2RlEg8KB3R5cGVfaWQYAiABKA0SEAoIdHlwZV9tb2QYAyABKAUSEQoJY29sbGF0aW9uGAQgASgNEhAKCGxvY2F0aW9uGAUgASgFIoIBCg1DdXJyZW50T2ZFeHByEhsKA3hwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSDgoGY3Zhcm5vGAIgASgNEiAKC2N1cnNvcl9uYW1lGAMgASgJUgtjdXJzb3JfbmFtZRIiCgxjdXJzb3JfcGFyYW0YBCABKAVSDGN1cnNvcl9wYXJhbSJMCg1OZXh0VmFsdWVFeHByEhsKA3hwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSDQoFc2VxaWQYAiABKA0SDwoHdHlwZV9pZBgDIAEoDSJ1Cg1JbmZlcmVuY2VFbGVtEhsKA3hwchgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSHAoEZXhwchgCIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSEwoLaW5mZXJjb2xsaWQYAyABKA0SFAoMaW5mZXJvcGNsYXNzGAQgASgNIroBCgtUYXJnZXRFbnRyeRIbCgN4cHIYASABKAsyDi5wZ19xdWVyeS5Ob2RlEhwKBGV4cHIYAiABKAsyDi5wZ19xdWVyeS5Ob2RlEg0KBXJlc25vGAMgASgFEg8KB3Jlc25hbWUYBCABKAkSFwoPcmVzc29ydGdyb3VwcmVmGAUgASgNEhIKCnJlc29yaWd0YmwYBiABKA0SEgoKcmVzb3JpZ2NvbBgHIAEoBRIPCgdyZXNqdW5rGAggASgIIh4KC1JhbmdlVGJsUmVmEg8KB3J0aW5kZXgYASABKAUiswIKCEpvaW5FeHByEiQKCGpvaW50eXBlGAEgASgOMhIucGdfcXVlcnkuSm9pblR5cGUSEgoKaXNfbmF0dXJhbBgCIAEoCBIcCgRsYXJnGAMgASgLMg4ucGdfcXVlcnkuTm9kZRIcCgRyYXJnGAQgASgLMg4ucGdfcXVlcnkuTm9kZRIkCgx1c2luZ19jbGF1c2UYBSADKAsyDi5wZ19xdWVyeS5Ob2RlEjsKEGpvaW5fdXNpbmdfYWxpYXMYBiABKAsyDy5wZ19xdWVyeS5BbGlhc1IQam9pbl91c2luZ19hbGlhcxIdCgVxdWFscxgHIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSHgoFYWxpYXMYCCABKAsyDy5wZ19xdWVyeS5BbGlhcxIPCgdydGluZGV4GAkgASgFIksKCEZyb21FeHByEiAKCGZyb21saXN0GAEgAygLMg4ucGdfcXVlcnkuTm9kZRIdCgVxdWFscxgCIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUisgIKDk9uQ29uZmxpY3RFeHByEioKBmFjdGlvbhgBIAEoDjIaLnBnX3F1ZXJ5Lk9uQ29uZmxpY3RBY3Rpb24SJQoNYXJiaXRlcl9lbGVtcxgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSJQoNYXJiaXRlcl93aGVyZRgDIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSEgoKY29uc3RyYWludBgEIAEoDRInCg9vbl9jb25mbGljdF9zZXQYBSADKAsyDi5wZ19xdWVyeS5Ob2RlEikKEW9uX2NvbmZsaWN0X3doZXJlGAYgASgLMg4ucGdfcXVlcnkuTm9kZRIWCg5leGNsX3JlbF9pbmRleBgHIAEoBRImCg5leGNsX3JlbF90bGlzdBgIIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUilQsKBVF1ZXJ5EicKDGNvbW1hbmRfdHlwZRgBIAEoDjIRLnBnX3F1ZXJ5LkNtZFR5cGUSKwoMcXVlcnlfc291cmNlGAIgASgOMhUucGdfcXVlcnkuUXVlcnlTb3VyY2USEwoLY2FuX3NldF90YWcYAyABKAgSJAoMdXRpbGl0eV9zdG10GAQgASgLMg4ucGdfcXVlcnkuTm9kZRIXCg9yZXN1bHRfcmVsYXRpb24YBSABKAUSEAoIaGFzX2FnZ3MYBiABKAgSGAoQaGFzX3dpbmRvd19mdW5jcxgHIAEoCBImCg9oYXNfdGFyZ2V0X3NyZnMYCCABKAhSDWhhc1RhcmdldFNSRnMSFQoNaGFzX3N1Yl9saW5rcxgJIAEoCBIXCg9oYXNfZGlzdGluY3Rfb24YCiABKAgSFQoNaGFzX3JlY3Vyc2l2ZRgLIAEoCBIqChFoYXNfbW9kaWZ5aW5nX2N0ZRgMIAEoCFIPaGFzTW9kaWZ5aW5nQ1RFEhYKDmhhc19mb3JfdXBkYXRlGA0gASgIEhgKEGhhc19yb3dfc2VjdXJpdHkYDiABKAgSEQoJaXNfcmV0dXJuGA8gASgIEiAKCGN0ZV9saXN0GBAgAygLMg4ucGdfcXVlcnkuTm9kZRIeCgZydGFibGUYESADKAsyDi5wZ19xdWVyeS5Ob2RlEiQKDHJ0ZXBlcm1pbmZvcxgSIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSJAoIam9pbnRyZWUYEyABKAsyEi5wZ19xdWVyeS5Gcm9tRXhwchIpChFtZXJnZV9hY3Rpb25fbGlzdBgUIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSHAoUbWVyZ2VfdXNlX291dGVyX2pvaW4YFSABKAgSIwoLdGFyZ2V0X2xpc3QYFiADKAsyDi5wZ19xdWVyeS5Ob2RlEioKCG92ZXJyaWRlGBcgASgOMhgucGdfcXVlcnkuT3ZlcnJpZGluZ0tpbmQSLQoLb25fY29uZmxpY3QYGCABKAsyGC5wZ19xdWVyeS5PbkNvbmZsaWN0RXhwchImCg5yZXR1cm5pbmdfbGlzdBgZIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSJAoMZ3JvdXBfY2xhdXNlGBogAygLMg4ucGdfcXVlcnkuTm9kZRIWCg5ncm91cF9kaXN0aW5jdBgbIAEoCBIlCg1ncm91cGluZ19zZXRzGBwgAygLMg4ucGdfcXVlcnkuTm9kZRIjCgtoYXZpbmdfcXVhbBgdIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSJQoNd2luZG93X2NsYXVzZRgeIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSJwoPZGlzdGluY3RfY2xhdXNlGB8gAygLMg4ucGdfcXVlcnkuTm9kZRIjCgtzb3J0X2NsYXVzZRggIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSJAoMbGltaXRfb2Zmc2V0GCEgASgLMg4ucGdfcXVlcnkuTm9kZRIjCgtsaW1pdF9jb3VudBgiIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSKwoMbGltaXRfb3B0aW9uGCMgASgOMhUucGdfcXVlcnkuTGltaXRPcHRpb24SIQoJcm93X21hcmtzGCQgAygLMg4ucGdfcXVlcnkuTm9kZRImCg5zZXRfb3BlcmF0aW9ucxglIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSJwoPY29uc3RyYWludF9kZXBzGCYgAygLMg4ucGdfcXVlcnkuTm9kZRIqChJ3aXRoX2NoZWNrX29wdGlvbnMYJyADKAsyDi5wZ19xdWVyeS5Ob2RlEiQKDXN0bXRfbG9jYXRpb24YKCABKAVSDXN0bXRfbG9jYXRpb24SGgoIc3RtdF9sZW4YKSABKAVSCHN0bXRfbGVuItABCghUeXBlTmFtZRIdCgVuYW1lcxgBIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSEAoIdHlwZV9vaWQYAiABKA0SDQoFc2V0b2YYAyABKAgSGgoIcGN0X3R5cGUYBCABKAhSCHBjdF90eXBlEh8KB3R5cG1vZHMYBSADKAsyDi5wZ19xdWVyeS5Ob2RlEg8KB3R5cGVtb2QYBiABKAUSJAoMYXJyYXlfYm91bmRzGAcgAygLMg4ucGdfcXVlcnkuTm9kZRIQCghsb2NhdGlvbhgIIAEoBSI9CglDb2x1bW5SZWYSHgoGZmllbGRzGAEgAygLMg4ucGdfcXVlcnkuTm9kZRIQCghsb2NhdGlvbhgCIAEoBSIsCghQYXJhbVJlZhIOCgZudW1iZXIYASABKAUSEAoIbG9jYXRpb24YAiABKAUimwEKBkFfRXhwchIjCgRraW5kGAEgASgOMhUucGdfcXVlcnkuQV9FeHByX0tpbmQSHAoEbmFtZRgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSHQoFbGV4cHIYAyABKAsyDi5wZ19xdWVyeS5Ob2RlEh0KBXJleHByGAQgASgLMg4ucGdfcXVlcnkuTm9kZRIQCghsb2NhdGlvbhgFIAEoBSJgCghUeXBlQ2FzdBIbCgNhcmcYASABKAsyDi5wZ19xdWVyeS5Ob2RlEiUKCXR5cGVfbmFtZRgCIAEoCzISLnBnX3F1ZXJ5LlR5cGVOYW1lEhAKCGxvY2F0aW9uGAMgASgFImAKDUNvbGxhdGVDbGF1c2USGwoDYXJnGAEgASgLMg4ucGdfcXVlcnkuTm9kZRIgCghjb2xsbmFtZRgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSEAoIbG9jYXRpb24YAyABKAUiWAoIUm9sZVNwZWMSKAoIcm9sZXR5cGUYASABKA4yFi5wZ19xdWVyeS5Sb2xlU3BlY1R5cGUSEAoIcm9sZW5hbWUYAiABKAkSEAoIbG9jYXRpb24YAyABKAUimwMKCEZ1bmNDYWxsEiAKCGZ1bmNuYW1lGAEgAygLMg4ucGdfcXVlcnkuTm9kZRIcCgRhcmdzGAIgAygLMg4ucGdfcXVlcnkuTm9kZRIsCglhZ2dfb3JkZXIYAyADKAsyDi5wZ19xdWVyeS5Ob2RlUglhZ2dfb3JkZXISLgoKYWdnX2ZpbHRlchgEIAEoCzIOLnBnX3F1ZXJ5Lk5vZGVSCmFnZ19maWx0ZXISIQoEb3ZlchgFIAEoCzITLnBnX3F1ZXJ5LldpbmRvd0RlZhIqChBhZ2dfd2l0aGluX2dyb3VwGAYgASgIUhBhZ2dfd2l0aGluX2dyb3VwEhoKCGFnZ19zdGFyGAcgASgIUghhZ2dfc3RhchIiCgxhZ2dfZGlzdGluY3QYCCABKAhSDGFnZ19kaXN0aW5jdBIkCg1mdW5jX3ZhcmlhZGljGAkgASgIUg1mdW5jX3ZhcmlhZGljEioKCmZ1bmNmb3JtYXQYCiABKA4yFi5wZ19xdWVyeS5Db2VyY2lvbkZvcm0SEAoIbG9jYXRpb24YCyABKAUiCAoGQV9TdGFyImMKCUFfSW5kaWNlcxIaCghpc19zbGljZRgBIAEoCFIIaXNfc2xpY2USHAoEbGlkeBgCIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSHAoEdWlkeBgDIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUiUQoNQV9JbmRpcmVjdGlvbhIbCgNhcmcYASABKAsyDi5wZ19xdWVyeS5Ob2RlEiMKC2luZGlyZWN0aW9uGAIgAygLMg4ucGdfcXVlcnkuTm9kZSJBCgtBX0FycmF5RXhwchIgCghlbGVtZW50cxgBIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSEAoIbG9jYXRpb24YAiABKAUibQoJUmVzVGFyZ2V0EgwKBG5hbWUYASABKAkSIwoLaW5kaXJlY3Rpb24YAiADKAsyDi5wZ19xdWVyeS5Ob2RlEhsKA3ZhbBgDIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSEAoIbG9jYXRpb24YBCABKAUiUQoOTXVsdGlBc3NpZ25SZWYSHgoGc291cmNlGAEgASgLMg4ucGdfcXVlcnkuTm9kZRINCgVjb2xubxgCIAEoBRIQCghuY29sdW1ucxgDIAEoBSLIAQoGU29ydEJ5EhwKBG5vZGUYASABKAsyDi5wZ19xdWVyeS5Ob2RlEjMKCnNvcnRieV9kaXIYAiABKA4yEy5wZ19xdWVyeS5Tb3J0QnlEaXJSCnNvcnRieV9kaXISOQoMc29ydGJ5X251bGxzGAMgASgOMhUucGdfcXVlcnkuU29ydEJ5TnVsbHNSDHNvcnRieV9udWxscxIeCgZ1c2Vfb3AYBCADKAsyDi5wZ19xdWVyeS5Ob2RlEhAKCGxvY2F0aW9uGAUgASgFIu0BCglXaW5kb3dEZWYSDAoEbmFtZRgBIAEoCRIPCgdyZWZuYW1lGAIgASgJEigKEHBhcnRpdGlvbl9jbGF1c2UYAyADKAsyDi5wZ19xdWVyeS5Ob2RlEiQKDG9yZGVyX2NsYXVzZRgEIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSFQoNZnJhbWVfb3B0aW9ucxgFIAEoBRIkCgxzdGFydF9vZmZzZXQYBiABKAsyDi5wZ19xdWVyeS5Ob2RlEiIKCmVuZF9vZmZzZXQYByABKAsyDi5wZ19xdWVyeS5Ob2RlEhAKCGxvY2F0aW9uGAggASgFImMKDlJhbmdlU3Vic2VsZWN0Eg8KB2xhdGVyYWwYASABKAgSIAoIc3VicXVlcnkYAiABKAsyDi5wZ19xdWVyeS5Ob2RlEh4KBWFsaWFzGAMgASgLMg8ucGdfcXVlcnkuQWxpYXMivQEKDVJhbmdlRnVuY3Rpb24SDwoHbGF0ZXJhbBgBIAEoCBISCgpvcmRpbmFsaXR5GAIgASgIEiAKC2lzX3Jvd3Nmcm9tGAMgASgIUgtpc19yb3dzZnJvbRIhCglmdW5jdGlvbnMYBCADKAsyDi5wZ19xdWVyeS5Ob2RlEh4KBWFsaWFzGAUgASgLMg8ucGdfcXVlcnkuQWxpYXMSIgoKY29sZGVmbGlzdBgGIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUi2gEKDlJhbmdlVGFibGVGdW5jEg8KB2xhdGVyYWwYASABKAgSHwoHZG9jZXhwchgCIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSHwoHcm93ZXhwchgDIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSIgoKbmFtZXNwYWNlcxgEIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSHwoHY29sdW1ucxgFIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSHgoFYWxpYXMYBiABKAsyDy5wZ19xdWVyeS5BbGlhcxIQCghsb2NhdGlvbhgHIAEoBSLsAQoRUmFuZ2VUYWJsZUZ1bmNDb2wSDwoHY29sbmFtZRgBIAEoCRIlCgl0eXBlX25hbWUYAiABKAsyEi5wZ19xdWVyeS5UeXBlTmFtZRImCg5mb3Jfb3JkaW5hbGl0eRgDIAEoCFIOZm9yX29yZGluYWxpdHkSIAoLaXNfbm90X251bGwYBCABKAhSC2lzX25vdF9udWxsEh8KB2NvbGV4cHIYBSABKAsyDi5wZ19xdWVyeS5Ob2RlEiIKCmNvbGRlZmV4cHIYBiABKAsyDi5wZ19xdWVyeS5Ob2RlEhAKCGxvY2F0aW9uGAcgASgFIqgBChBSYW5nZVRhYmxlU2FtcGxlEiAKCHJlbGF0aW9uGAEgASgLMg4ucGdfcXVlcnkuTm9kZRIeCgZtZXRob2QYAiADKAsyDi5wZ19xdWVyeS5Ob2RlEhwKBGFyZ3MYAyADKAsyDi5wZ19xdWVyeS5Ob2RlEiIKCnJlcGVhdGFibGUYBCABKAsyDi5wZ19xdWVyeS5Ob2RlEhAKCGxvY2F0aW9uGAUgASgFItoECglDb2x1bW5EZWYSDwoHY29sbmFtZRgBIAEoCRIlCgl0eXBlX25hbWUYAiABKAsyEi5wZ19xdWVyeS5UeXBlTmFtZRITCgtjb21wcmVzc2lvbhgDIAEoCRIQCghpbmhjb3VudBgEIAEoBRIaCghpc19sb2NhbBgFIAEoCFIIaXNfbG9jYWwSIAoLaXNfbm90X251bGwYBiABKAhSC2lzX25vdF9udWxsEiIKDGlzX2Zyb21fdHlwZRgHIAEoCFIMaXNfZnJvbV90eXBlEg8KB3N0b3JhZ2UYCCABKAkSIgoMc3RvcmFnZV9uYW1lGAkgASgJUgxzdG9yYWdlX25hbWUSMAoLcmF3X2RlZmF1bHQYCiABKAsyDi5wZ19xdWVyeS5Ob2RlUgtyYXdfZGVmYXVsdBI2Cg5jb29rZWRfZGVmYXVsdBgLIAEoCzIOLnBnX3F1ZXJ5Lk5vZGVSDmNvb2tlZF9kZWZhdWx0EhAKCGlkZW50aXR5GAwgASgJEi0KEWlkZW50aXR5X3NlcXVlbmNlGA0gASgLMhIucGdfcXVlcnkuUmFuZ2VWYXISEQoJZ2VuZXJhdGVkGA4gASgJEiwKC2NvbGxfY2xhdXNlGA8gASgLMhcucGdfcXVlcnkuQ29sbGF0ZUNsYXVzZRIQCghjb2xsX29pZBgQIAEoDRIjCgtjb25zdHJhaW50cxgRIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSIgoKZmR3b3B0aW9ucxgSIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSEAoIbG9jYXRpb24YEyABKAUiXgoPVGFibGVMaWtlQ2xhdXNlEiQKCHJlbGF0aW9uGAEgASgLMhIucGdfcXVlcnkuUmFuZ2VWYXISDwoHb3B0aW9ucxgCIAEoDRIUCgxyZWxhdGlvbl9vaWQYAyABKA0inAIKCUluZGV4RWxlbRIMCgRuYW1lGAEgASgJEhwKBGV4cHIYAiABKAsyDi5wZ19xdWVyeS5Ob2RlEhQKDGluZGV4Y29sbmFtZRgDIAEoCRIhCgljb2xsYXRpb24YBCADKAsyDi5wZ19xdWVyeS5Ob2RlEh8KB29wY2xhc3MYBSADKAsyDi5wZ19xdWVyeS5Ob2RlEiMKC29wY2xhc3NvcHRzGAYgAygLMg4ucGdfcXVlcnkuTm9kZRIlCghvcmRlcmluZxgHIAEoDjITLnBnX3F1ZXJ5LlNvcnRCeURpchI9Cg5udWxsc19vcmRlcmluZxgIIAEoDjIVLnBnX3F1ZXJ5LlNvcnRCeU51bGxzUg5udWxsc19vcmRlcmluZyKLAQoHRGVmRWxlbRIUCgxkZWZuYW1lc3BhY2UYASABKAkSDwoHZGVmbmFtZRgCIAEoCRIbCgNhcmcYAyABKAsyDi5wZ19xdWVyeS5Ob2RlEioKCWRlZmFjdGlvbhgEIAEoDjIXLnBnX3F1ZXJ5LkRlZkVsZW1BY3Rpb24SEAoIbG9jYXRpb24YBSABKAUikwEKDUxvY2tpbmdDbGF1c2USIwoLbG9ja2VkX3JlbHMYASADKAsyDi5wZ19xdWVyeS5Ob2RlEi4KCHN0cmVuZ3RoGAIgASgOMhwucGdfcXVlcnkuTG9ja0NsYXVzZVN0cmVuZ3RoEi0KC3dhaXRfcG9saWN5GAMgASgOMhgucGdfcXVlcnkuTG9ja1dhaXRQb2xpY3kioQEKDFhtbFNlcmlhbGl6ZRIqCgl4bWxvcHRpb24YASABKA4yFy5wZ19xdWVyeS5YbWxPcHRpb25UeXBlEhwKBGV4cHIYAiABKAsyDi5wZ19xdWVyeS5Ob2RlEiUKCXR5cGVfbmFtZRgDIAEoCzISLnBnX3F1ZXJ5LlR5cGVOYW1lEg4KBmluZGVudBgEIAEoCBIQCghsb2NhdGlvbhgFIAEoBSKRAQoNUGFydGl0aW9uRWxlbRIMCgRuYW1lGAEgASgJEhwKBGV4cHIYAiABKAsyDi5wZ19xdWVyeS5Ob2RlEiEKCWNvbGxhdGlvbhgDIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSHwoHb3BjbGFzcxgEIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSEAoIbG9jYXRpb24YBSABKAUidQoNUGFydGl0aW9uU3BlYxItCghzdHJhdGVneRgBIAEoDjIbLnBnX3F1ZXJ5LlBhcnRpdGlvblN0cmF0ZWd5EiMKC3BhcnRfcGFyYW1zGAIgAygLMg4ucGdfcXVlcnkuTm9kZRIQCghsb2NhdGlvbhgDIAEoBSLqAQoSUGFydGl0aW9uQm91bmRTcGVjEhAKCHN0cmF0ZWd5GAEgASgJEh4KCmlzX2RlZmF1bHQYAiABKAhSCmlzX2RlZmF1bHQSDwoHbW9kdWx1cxgDIAEoBRIRCglyZW1haW5kZXIYBCABKAUSIgoKbGlzdGRhdHVtcxgFIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSIwoLbG93ZXJkYXR1bXMYBiADKAsyDi5wZ19xdWVyeS5Ob2RlEiMKC3VwcGVyZGF0dW1zGAcgAygLMg4ucGdfcXVlcnkuTm9kZRIQCghsb2NhdGlvbhgIIAEoBSJ3ChNQYXJ0aXRpb25SYW5nZURhdHVtEi8KBGtpbmQYASABKA4yIS5wZ19xdWVyeS5QYXJ0aXRpb25SYW5nZURhdHVtS2luZBIdCgV2YWx1ZRgCIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSEAoIbG9jYXRpb24YAyABKAUicQoMUGFydGl0aW9uQ21kEiAKBG5hbWUYASABKAsyEi5wZ19xdWVyeS5SYW5nZVZhchIrCgVib3VuZBgCIAEoCzIcLnBnX3F1ZXJ5LlBhcnRpdGlvbkJvdW5kU3BlYxISCgpjb25jdXJyZW50GAMgASgIIv4HCg1SYW5nZVRibEVudHJ5EiIKB3J0ZWtpbmQYASABKA4yES5wZ19xdWVyeS5SVEVLaW5kEg0KBXJlbGlkGAIgASgNEg8KB3JlbGtpbmQYAyABKAkSEwoLcmVsbG9ja21vZGUYBCABKAUSMAoLdGFibGVzYW1wbGUYBSABKAsyGy5wZ19xdWVyeS5UYWJsZVNhbXBsZUNsYXVzZRIVCg1wZXJtaW5mb2luZGV4GAYgASgNEiEKCHN1YnF1ZXJ5GAcgASgLMg8ucGdfcXVlcnkuUXVlcnkSKgoQc2VjdXJpdHlfYmFycmllchgIIAEoCFIQc2VjdXJpdHlfYmFycmllchIkCghqb2ludHlwZRgJIAEoDjISLnBnX3F1ZXJ5LkpvaW5UeXBlEhYKDmpvaW5tZXJnZWRjb2xzGAogASgFEiUKDWpvaW5hbGlhc3ZhcnMYCyADKAsyDi5wZ19xdWVyeS5Ob2RlEiQKDGpvaW5sZWZ0Y29scxgMIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSJQoNam9pbnJpZ2h0Y29scxgNIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSOwoQam9pbl91c2luZ19hbGlhcxgOIAEoCzIPLnBnX3F1ZXJ5LkFsaWFzUhBqb2luX3VzaW5nX2FsaWFzEiEKCWZ1bmN0aW9ucxgPIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSFgoOZnVuY29yZGluYWxpdHkYECABKAgSJgoJdGFibGVmdW5jGBEgASgLMhMucGdfcXVlcnkuVGFibGVGdW5jEjIKDHZhbHVlc19saXN0cxgSIAMoCzIOLnBnX3F1ZXJ5Lk5vZGVSDHZhbHVlc19saXN0cxIPCgdjdGVuYW1lGBMgASgJEhMKC2N0ZWxldmVsc3VwGBQgASgNEiYKDnNlbGZfcmVmZXJlbmNlGBUgASgIUg5zZWxmX3JlZmVyZW5jZRIgCghjb2x0eXBlcxgWIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSIgoKY29sdHlwbW9kcxgXIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSJQoNY29sY29sbGF0aW9ucxgYIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSDwoHZW5ybmFtZRgZIAEoCRIRCgllbnJ0dXBsZXMYGiABKAESHgoFYWxpYXMYGyABKAsyDy5wZ19xdWVyeS5BbGlhcxIdCgRlcmVmGBwgASgLMg8ucGdfcXVlcnkuQWxpYXMSDwoHbGF0ZXJhbBgdIAEoCBILCgNpbmgYHiABKAgSEgoKaW5fZnJvbV9jbBgfIAEoCBImCg5zZWN1cml0eV9xdWFscxggIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUiogEKEVJURVBlcm1pc3Npb25JbmZvEg0KBXJlbGlkGAEgASgNEgsKA2luaBgCIAEoCBIWCg5yZXF1aXJlZF9wZXJtcxgDIAEoBBIVCg1jaGVja19hc191c2VyGAQgASgNEhUKDXNlbGVjdGVkX2NvbHMYBSADKAQSFQoNaW5zZXJ0ZWRfY29scxgGIAMoBBIUCgx1cGRhdGVkX2NvbHMYByADKAQi/QEKEFJhbmdlVGJsRnVuY3Rpb24SIAoIZnVuY2V4cHIYASABKAsyDi5wZ19xdWVyeS5Ob2RlEhQKDGZ1bmNjb2xjb3VudBgCIAEoBRIkCgxmdW5jY29sbmFtZXMYAyADKAsyDi5wZ19xdWVyeS5Ob2RlEiQKDGZ1bmNjb2x0eXBlcxgEIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSJgoOZnVuY2NvbHR5cG1vZHMYBSADKAsyDi5wZ19xdWVyeS5Ob2RlEikKEWZ1bmNjb2xjb2xsYXRpb25zGAYgAygLMg4ucGdfcXVlcnkuTm9kZRISCgpmdW5jcGFyYW1zGAcgAygEImkKEVRhYmxlU2FtcGxlQ2xhdXNlEhIKCnRzbWhhbmRsZXIYASABKA0SHAoEYXJncxgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSIgoKcmVwZWF0YWJsZRgDIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUihAEKD1dpdGhDaGVja09wdGlvbhIfCgRraW5kGAEgASgOMhEucGdfcXVlcnkuV0NPS2luZBIPCgdyZWxuYW1lGAIgASgJEg8KB3BvbG5hbWUYAyABKAkSHAoEcXVhbBgEIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSEAoIY2FzY2FkZWQYBSABKAgifwoPU29ydEdyb3VwQ2xhdXNlEhoKEnRsZV9zb3J0X2dyb3VwX3JlZhgBIAEoDRIMCgRlcW9wGAIgASgNEg4KBnNvcnRvcBgDIAEoDRIgCgtudWxsc19maXJzdBgEIAEoCFILbnVsbHNfZmlyc3QSEAoIaGFzaGFibGUYBSABKAgiaQoLR3JvdXBpbmdTZXQSJwoEa2luZBgBIAEoDjIZLnBnX3F1ZXJ5Lkdyb3VwaW5nU2V0S2luZBIfCgdjb250ZW50GAIgAygLMg4ucGdfcXVlcnkuTm9kZRIQCghsb2NhdGlvbhgDIAEoBSKuAwoMV2luZG93Q2xhdXNlEgwKBG5hbWUYASABKAkSDwoHcmVmbmFtZRgCIAEoCRIoChBwYXJ0aXRpb25fY2xhdXNlGAMgAygLMg4ucGdfcXVlcnkuTm9kZRIkCgxvcmRlcl9jbGF1c2UYBCADKAsyDi5wZ19xdWVyeS5Ob2RlEhUKDWZyYW1lX29wdGlvbnMYBSABKAUSJAoMc3RhcnRfb2Zmc2V0GAYgASgLMg4ucGdfcXVlcnkuTm9kZRIiCgplbmRfb2Zmc2V0GAcgASgLMg4ucGdfcXVlcnkuTm9kZRIlCg1ydW5fY29uZGl0aW9uGAggAygLMg4ucGdfcXVlcnkuTm9kZRIbChNzdGFydF9pbl9yYW5nZV9mdW5jGAkgASgNEhkKEWVuZF9pbl9yYW5nZV9mdW5jGAogASgNEhUKDWluX3JhbmdlX2NvbGwYCyABKA0SFAoMaW5fcmFuZ2VfYXNjGAwgASgIEhwKFGluX3JhbmdlX251bGxzX2ZpcnN0GA0gASgIEg4KBndpbnJlZhgOIAEoDRIUCgxjb3BpZWRfb3JkZXIYDyABKAgikAEKDVJvd01hcmtDbGF1c2USCwoDcnRpGAEgASgNEi4KCHN0cmVuZ3RoGAIgASgOMhwucGdfcXVlcnkuTG9ja0NsYXVzZVN0cmVuZ3RoEi0KC3dhaXRfcG9saWN5GAMgASgOMhgucGdfcXVlcnkuTG9ja1dhaXRQb2xpY3kSEwoLcHVzaGVkX2Rvd24YBCABKAgiTwoKV2l0aENsYXVzZRIcCgRjdGVzGAEgAygLMg4ucGdfcXVlcnkuTm9kZRIRCglyZWN1cnNpdmUYAiABKAgSEAoIbG9jYXRpb24YAyABKAUiewoLSW5mZXJDbGF1c2USIwoLaW5kZXhfZWxlbXMYASADKAsyDi5wZ19xdWVyeS5Ob2RlEiQKDHdoZXJlX2NsYXVzZRgCIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSDwoHY29ubmFtZRgDIAEoCRIQCghsb2NhdGlvbhgEIAEoBSLBAQoQT25Db25mbGljdENsYXVzZRIqCgZhY3Rpb24YASABKA4yGi5wZ19xdWVyeS5PbkNvbmZsaWN0QWN0aW9uEiQKBWluZmVyGAIgASgLMhUucGdfcXVlcnkuSW5mZXJDbGF1c2USIwoLdGFyZ2V0X2xpc3QYAyADKAsyDi5wZ19xdWVyeS5Ob2RlEiQKDHdoZXJlX2NsYXVzZRgEIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSEAoIbG9jYXRpb24YBSABKAUivwEKD0NURVNlYXJjaENsYXVzZRI4Cg9zZWFyY2hfY29sX2xpc3QYASADKAsyDi5wZ19xdWVyeS5Ob2RlUg9zZWFyY2hfY29sX2xpc3QSMgoUc2VhcmNoX2JyZWFkdGhfZmlyc3QYAiABKAhSFHNlYXJjaF9icmVhZHRoX2ZpcnN0EiwKEXNlYXJjaF9zZXFfY29sdW1uGAMgASgJUhFzZWFyY2hfc2VxX2NvbHVtbhIQCghsb2NhdGlvbhgEIAEoBSLoAwoOQ1RFQ3ljbGVDbGF1c2USNgoOY3ljbGVfY29sX2xpc3QYASADKAsyDi5wZ19xdWVyeS5Ob2RlUg5jeWNsZV9jb2xfbGlzdBIsChFjeWNsZV9tYXJrX2NvbHVtbhgCIAEoCVIRY3ljbGVfbWFya19jb2x1bW4SOgoQY3ljbGVfbWFya192YWx1ZRgDIAEoCzIOLnBnX3F1ZXJ5Lk5vZGVSEGN5Y2xlX21hcmtfdmFsdWUSPgoSY3ljbGVfbWFya19kZWZhdWx0GAQgASgLMg4ucGdfcXVlcnkuTm9kZVISY3ljbGVfbWFya19kZWZhdWx0EiwKEWN5Y2xlX3BhdGhfY29sdW1uGAUgASgJUhFjeWNsZV9wYXRoX2NvbHVtbhIQCghsb2NhdGlvbhgGIAEoBRIoCg9jeWNsZV9tYXJrX3R5cGUYByABKA1SD2N5Y2xlX21hcmtfdHlwZRIsChFjeWNsZV9tYXJrX3R5cG1vZBgIIAEoBVIRY3ljbGVfbWFya190eXBtb2QSMgoUY3ljbGVfbWFya19jb2xsYXRpb24YCSABKA1SFGN5Y2xlX21hcmtfY29sbGF0aW9uEigKD2N5Y2xlX21hcmtfbmVvcBgKIAEoDVIPY3ljbGVfbWFya19uZW9wIvUDCg9Db21tb25UYWJsZUV4cHISDwoHY3RlbmFtZRgBIAEoCRIlCg1hbGlhc2NvbG5hbWVzGAIgAygLMg4ucGdfcXVlcnkuTm9kZRIxCg9jdGVtYXRlcmlhbGl6ZWQYAyABKA4yGC5wZ19xdWVyeS5DVEVNYXRlcmlhbGl6ZRIgCghjdGVxdWVyeRgEIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSPwoNc2VhcmNoX2NsYXVzZRgFIAEoCzIZLnBnX3F1ZXJ5LkNURVNlYXJjaENsYXVzZVINc2VhcmNoX2NsYXVzZRI8CgxjeWNsZV9jbGF1c2UYBiABKAsyGC5wZ19xdWVyeS5DVEVDeWNsZUNsYXVzZVIMY3ljbGVfY2xhdXNlEhAKCGxvY2F0aW9uGAcgASgFEhQKDGN0ZXJlY3Vyc2l2ZRgIIAEoCBITCgtjdGVyZWZjb3VudBgJIAEoBRIjCgtjdGVjb2xuYW1lcxgKIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSIwoLY3RlY29sdHlwZXMYCyADKAsyDi5wZ19xdWVyeS5Ob2RlEiUKDWN0ZWNvbHR5cG1vZHMYDCADKAsyDi5wZ19xdWVyeS5Ob2RlEigKEGN0ZWNvbGNvbGxhdGlvbnMYDSADKAsyDi5wZ19xdWVyeS5Ob2RlIt8BCg9NZXJnZVdoZW5DbGF1c2USDwoHbWF0Y2hlZBgBIAEoCBInCgxjb21tYW5kX3R5cGUYAiABKA4yES5wZ19xdWVyeS5DbWRUeXBlEioKCG92ZXJyaWRlGAMgASgOMhgucGdfcXVlcnkuT3ZlcnJpZGluZ0tpbmQSIQoJY29uZGl0aW9uGAQgASgLMg4ucGdfcXVlcnkuTm9kZRIjCgt0YXJnZXRfbGlzdBgFIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSHgoGdmFsdWVzGAYgAygLMg4ucGdfcXVlcnkuTm9kZSLdAQoLTWVyZ2VBY3Rpb24SDwoHbWF0Y2hlZBgBIAEoCBInCgxjb21tYW5kX3R5cGUYAiABKA4yES5wZ19xdWVyeS5DbWRUeXBlEioKCG92ZXJyaWRlGAMgASgOMhgucGdfcXVlcnkuT3ZlcnJpZGluZ0tpbmQSHAoEcXVhbBgEIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSIwoLdGFyZ2V0X2xpc3QYBSADKAsyDi5wZ19xdWVyeS5Ob2RlEiUKDXVwZGF0ZV9jb2xub3MYBiADKAsyDi5wZ19xdWVyeS5Ob2RlIkMKEVRyaWdnZXJUcmFuc2l0aW9uEgwKBG5hbWUYASABKAkSDgoGaXNfbmV3GAIgASgIEhAKCGlzX3RhYmxlGAMgASgIIl8KCkpzb25PdXRwdXQSJQoJdHlwZV9uYW1lGAEgASgLMhIucGdfcXVlcnkuVHlwZU5hbWUSKgoJcmV0dXJuaW5nGAIgASgLMhcucGdfcXVlcnkuSnNvblJldHVybmluZyJTCgxKc29uS2V5VmFsdWUSGwoDa2V5GAEgASgLMg4ucGdfcXVlcnkuTm9kZRImCgV2YWx1ZRgCIAEoCzIXLnBnX3F1ZXJ5Lkpzb25WYWx1ZUV4cHIipgEKFUpzb25PYmplY3RDb25zdHJ1Y3RvchIdCgVleHBycxgBIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSJAoGb3V0cHV0GAIgASgLMhQucGdfcXVlcnkuSnNvbk91dHB1dBImCg5hYnNlbnRfb25fbnVsbBgDIAEoCFIOYWJzZW50X29uX251bGwSDgoGdW5pcXVlGAQgASgIEhAKCGxvY2F0aW9uGAUgASgFIpUBChRKc29uQXJyYXlDb25zdHJ1Y3RvchIdCgVleHBycxgBIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSJAoGb3V0cHV0GAIgASgLMhQucGdfcXVlcnkuSnNvbk91dHB1dBImCg5hYnNlbnRfb25fbnVsbBgDIAEoCFIOYWJzZW50X29uX251bGwSEAoIbG9jYXRpb24YBCABKAUiwAEKGUpzb25BcnJheVF1ZXJ5Q29uc3RydWN0b3ISHQoFcXVlcnkYASABKAsyDi5wZ19xdWVyeS5Ob2RlEiQKBm91dHB1dBgCIAEoCzIULnBnX3F1ZXJ5Lkpzb25PdXRwdXQSJAoGZm9ybWF0GAMgASgLMhQucGdfcXVlcnkuSnNvbkZvcm1hdBImCg5hYnNlbnRfb25fbnVsbBgEIAEoCFIOYWJzZW50X29uX251bGwSEAoIbG9jYXRpb24YBSABKAUizQEKEkpzb25BZ2dDb25zdHJ1Y3RvchIkCgZvdXRwdXQYASABKAsyFC5wZ19xdWVyeS5Kc29uT3V0cHV0Ei4KCmFnZ19maWx0ZXIYAiABKAsyDi5wZ19xdWVyeS5Ob2RlUgphZ2dfZmlsdGVyEiwKCWFnZ19vcmRlchgDIAMoCzIOLnBnX3F1ZXJ5Lk5vZGVSCWFnZ19vcmRlchIhCgRvdmVyGAQgASgLMhMucGdfcXVlcnkuV2luZG93RGVmEhAKCGxvY2F0aW9uGAUgASgFIp8BCg1Kc29uT2JqZWN0QWdnEjEKC2NvbnN0cnVjdG9yGAEgASgLMhwucGdfcXVlcnkuSnNvbkFnZ0NvbnN0cnVjdG9yEiMKA2FyZxgCIAEoCzIWLnBnX3F1ZXJ5Lkpzb25LZXlWYWx1ZRImCg5hYnNlbnRfb25fbnVsbBgDIAEoCFIOYWJzZW50X29uX251bGwSDgoGdW5pcXVlGAQgASgIIo8BCgxKc29uQXJyYXlBZ2cSMQoLY29uc3RydWN0b3IYASABKAsyHC5wZ19xdWVyeS5Kc29uQWdnQ29uc3RydWN0b3ISJAoDYXJnGAIgASgLMhcucGdfcXVlcnkuSnNvblZhbHVlRXhwchImCg5hYnNlbnRfb25fbnVsbBgDIAEoCFIOYWJzZW50X29uX251bGwiaQoHUmF3U3RtdBIcCgRzdG10GAEgASgLMg4ucGdfcXVlcnkuTm9kZRIkCg1zdG10X2xvY2F0aW9uGAIgASgFUg1zdG10X2xvY2F0aW9uEhoKCHN0bXRfbGVuGAMgASgFUghzdG10X2xlbiKsAgoKSW5zZXJ0U3RtdBIkCghyZWxhdGlvbhgBIAEoCzISLnBnX3F1ZXJ5LlJhbmdlVmFyEhwKBGNvbHMYAiADKAsyDi5wZ19xdWVyeS5Ob2RlEiMKC3NlbGVjdF9zdG10GAMgASgLMg4ucGdfcXVlcnkuTm9kZRI2ChJvbl9jb25mbGljdF9jbGF1c2UYBCABKAsyGi5wZ19xdWVyeS5PbkNvbmZsaWN0Q2xhdXNlEiYKDnJldHVybmluZ19saXN0GAUgAygLMg4ucGdfcXVlcnkuTm9kZRIpCgt3aXRoX2NsYXVzZRgGIAEoCzIULnBnX3F1ZXJ5LldpdGhDbGF1c2USKgoIb3ZlcnJpZGUYByABKA4yGC5wZ19xdWVyeS5PdmVycmlkaW5nS2luZCLRAQoKRGVsZXRlU3RtdBIkCghyZWxhdGlvbhgBIAEoCzISLnBnX3F1ZXJ5LlJhbmdlVmFyEiQKDHVzaW5nX2NsYXVzZRgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSJAoMd2hlcmVfY2xhdXNlGAMgASgLMg4ucGdfcXVlcnkuTm9kZRImCg5yZXR1cm5pbmdfbGlzdBgEIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSKQoLd2l0aF9jbGF1c2UYBSABKAsyFC5wZ19xdWVyeS5XaXRoQ2xhdXNlIvUBCgpVcGRhdGVTdG10EiQKCHJlbGF0aW9uGAEgASgLMhIucGdfcXVlcnkuUmFuZ2VWYXISIwoLdGFyZ2V0X2xpc3QYAiADKAsyDi5wZ19xdWVyeS5Ob2RlEiQKDHdoZXJlX2NsYXVzZRgDIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSIwoLZnJvbV9jbGF1c2UYBCADKAsyDi5wZ19xdWVyeS5Ob2RlEiYKDnJldHVybmluZ19saXN0GAUgAygLMg4ucGdfcXVlcnkuTm9kZRIpCgt3aXRoX2NsYXVzZRgGIAEoCzIULnBnX3F1ZXJ5LldpdGhDbGF1c2Ui2QEKCU1lcmdlU3RtdBIkCghyZWxhdGlvbhgBIAEoCzISLnBnX3F1ZXJ5LlJhbmdlVmFyEicKD3NvdXJjZV9yZWxhdGlvbhgCIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSJgoOam9pbl9jb25kaXRpb24YAyABKAsyDi5wZ19xdWVyeS5Ob2RlEioKEm1lcmdlX3doZW5fY2xhdXNlcxgEIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSKQoLd2l0aF9jbGF1c2UYBSABKAsyFC5wZ19xdWVyeS5XaXRoQ2xhdXNlIusFCgpTZWxlY3RTdG10EicKD2Rpc3RpbmN0X2NsYXVzZRgBIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSKQoLaW50b19jbGF1c2UYAiABKAsyFC5wZ19xdWVyeS5JbnRvQ2xhdXNlEiMKC3RhcmdldF9saXN0GAMgAygLMg4ucGdfcXVlcnkuTm9kZRIjCgtmcm9tX2NsYXVzZRgEIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSJAoMd2hlcmVfY2xhdXNlGAUgASgLMg4ucGdfcXVlcnkuTm9kZRIkCgxncm91cF9jbGF1c2UYBiADKAsyDi5wZ19xdWVyeS5Ob2RlEhYKDmdyb3VwX2Rpc3RpbmN0GAcgASgIEiUKDWhhdmluZ19jbGF1c2UYCCABKAsyDi5wZ19xdWVyeS5Ob2RlEiUKDXdpbmRvd19jbGF1c2UYCSADKAsyDi5wZ19xdWVyeS5Ob2RlEiQKDHZhbHVlc19saXN0cxgKIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSIwoLc29ydF9jbGF1c2UYCyADKAsyDi5wZ19xdWVyeS5Ob2RlEiQKDGxpbWl0X29mZnNldBgMIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSIwoLbGltaXRfY291bnQYDSABKAsyDi5wZ19xdWVyeS5Ob2RlEisKDGxpbWl0X29wdGlvbhgOIAEoDjIVLnBnX3F1ZXJ5LkxpbWl0T3B0aW9uEiYKDmxvY2tpbmdfY2xhdXNlGA8gAygLMg4ucGdfcXVlcnkuTm9kZRIpCgt3aXRoX2NsYXVzZRgQIAEoCzIULnBnX3F1ZXJ5LldpdGhDbGF1c2USIgoCb3AYESABKA4yFi5wZ19xdWVyeS5TZXRPcGVyYXRpb24SCwoDYWxsGBIgASgIEiIKBGxhcmcYEyABKAsyFC5wZ19xdWVyeS5TZWxlY3RTdG10EiIKBHJhcmcYFCABKAsyFC5wZ19xdWVyeS5TZWxlY3RTdG10IpYCChBTZXRPcGVyYXRpb25TdG10EiIKAm9wGAEgASgOMhYucGdfcXVlcnkuU2V0T3BlcmF0aW9uEgsKA2FsbBgCIAEoCBIcCgRsYXJnGAMgASgLMg4ucGdfcXVlcnkuTm9kZRIcCgRyYXJnGAQgASgLMg4ucGdfcXVlcnkuTm9kZRIhCgljb2xfdHlwZXMYBSADKAsyDi5wZ19xdWVyeS5Ob2RlEiMKC2NvbF90eXBtb2RzGAYgAygLMg4ucGdfcXVlcnkuTm9kZRImCg5jb2xfY29sbGF0aW9ucxgHIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSJQoNZ3JvdXBfY2xhdXNlcxgIIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUiLwoKUmV0dXJuU3RtdBIhCglyZXR1cm52YWwYASABKAsyDi5wZ19xdWVyeS5Ob2RlIoYBCgxQTEFzc2lnblN0bXQSDAoEbmFtZRgBIAEoCRIjCgtpbmRpcmVjdGlvbhgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSDgoGbm5hbWVzGAMgASgFEiEKA3ZhbBgEIAEoCzIULnBnX3F1ZXJ5LlNlbGVjdFN0bXQSEAoIbG9jYXRpb24YBSABKAUilwEKEENyZWF0ZVNjaGVtYVN0bXQSEgoKc2NoZW1hbmFtZRgBIAEoCRIkCghhdXRocm9sZRgCIAEoCzISLnBnX3F1ZXJ5LlJvbGVTcGVjEiMKC3NjaGVtYV9lbHRzGAMgAygLMg4ucGdfcXVlcnkuTm9kZRIkCg1pZl9ub3RfZXhpc3RzGAQgASgIUg1pZl9ub3RfZXhpc3RzIpsBCg5BbHRlclRhYmxlU3RtdBIkCghyZWxhdGlvbhgBIAEoCzISLnBnX3F1ZXJ5LlJhbmdlVmFyEhwKBGNtZHMYAiADKAsyDi5wZ19xdWVyeS5Ob2RlEiUKB29ianR5cGUYAyABKA4yFC5wZ19xdWVyeS5PYmplY3RUeXBlEh4KCm1pc3Npbmdfb2sYBCABKAhSCm1pc3Npbmdfb2siSQoTUmVwbGljYUlkZW50aXR5U3RtdBIkCg1pZGVudGl0eV90eXBlGAEgASgJUg1pZGVudGl0eV90eXBlEgwKBG5hbWUYAiABKAki8wEKDUFsdGVyVGFibGVDbWQSKQoHc3VidHlwZRgBIAEoDjIYLnBnX3F1ZXJ5LkFsdGVyVGFibGVUeXBlEgwKBG5hbWUYAiABKAkSCwoDbnVtGAMgASgFEiQKCG5ld293bmVyGAQgASgLMhIucGdfcXVlcnkuUm9sZVNwZWMSGwoDZGVmGAUgASgLMg4ucGdfcXVlcnkuTm9kZRIoCghiZWhhdmlvchgGIAEoDjIWLnBnX3F1ZXJ5LkRyb3BCZWhhdmlvchIeCgptaXNzaW5nX29rGAcgASgIUgptaXNzaW5nX29rEg8KB3JlY3Vyc2UYCCABKAgiNgoSQWx0ZXJDb2xsYXRpb25TdG10EiAKCGNvbGxuYW1lGAEgAygLMg4ucGdfcXVlcnkuTm9kZSK6AQoPQWx0ZXJEb21haW5TdG10Eg8KB3N1YnR5cGUYASABKAkSIQoJdHlwZV9uYW1lGAIgAygLMg4ucGdfcXVlcnkuTm9kZRIMCgRuYW1lGAMgASgJEhsKA2RlZhgEIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSKAoIYmVoYXZpb3IYBSABKA4yFi5wZ19xdWVyeS5Ecm9wQmVoYXZpb3ISHgoKbWlzc2luZ19vaxgGIAEoCFIKbWlzc2luZ19vayLVAgoJR3JhbnRTdG10EhoKCGlzX2dyYW50GAEgASgIUghpc19ncmFudBIrCgh0YXJndHlwZRgCIAEoDjIZLnBnX3F1ZXJ5LkdyYW50VGFyZ2V0VHlwZRIlCgdvYmp0eXBlGAMgASgOMhQucGdfcXVlcnkuT2JqZWN0VHlwZRIfCgdvYmplY3RzGAQgAygLMg4ucGdfcXVlcnkuTm9kZRIiCgpwcml2aWxlZ2VzGAUgAygLMg4ucGdfcXVlcnkuTm9kZRIgCghncmFudGVlcxgGIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSIgoMZ3JhbnRfb3B0aW9uGAcgASgIUgxncmFudF9vcHRpb24SIwoHZ3JhbnRvchgIIAEoCzISLnBnX3F1ZXJ5LlJvbGVTcGVjEigKCGJlaGF2aW9yGAkgASgOMhYucGdfcXVlcnkuRHJvcEJlaGF2aW9yIqMBCg5PYmplY3RXaXRoQXJncxIfCgdvYmpuYW1lGAEgAygLMg4ucGdfcXVlcnkuTm9kZRIfCgdvYmphcmdzGAIgAygLMg4ucGdfcXVlcnkuTm9kZRIjCgtvYmpmdW5jYXJncxgDIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSKgoQYXJnc191bnNwZWNpZmllZBgEIAEoCFIQYXJnc191bnNwZWNpZmllZCJICgpBY2Nlc3NQcml2EhwKCXByaXZfbmFtZRgBIAEoCVIJcHJpdl9uYW1lEhwKBGNvbHMYAiADKAsyDi5wZ19xdWVyeS5Ob2RlIoMCCg1HcmFudFJvbGVTdG10EjQKDWdyYW50ZWRfcm9sZXMYASADKAsyDi5wZ19xdWVyeS5Ob2RlUg1ncmFudGVkX3JvbGVzEjQKDWdyYW50ZWVfcm9sZXMYAiADKAsyDi5wZ19xdWVyeS5Ob2RlUg1ncmFudGVlX3JvbGVzEhoKCGlzX2dyYW50GAMgASgIUghpc19ncmFudBIbCgNvcHQYBCADKAsyDi5wZ19xdWVyeS5Ob2RlEiMKB2dyYW50b3IYBSABKAsyEi5wZ19xdWVyeS5Sb2xlU3BlYxIoCghiZWhhdmlvchgGIAEoDjIWLnBnX3F1ZXJ5LkRyb3BCZWhhdmlvciJiChpBbHRlckRlZmF1bHRQcml2aWxlZ2VzU3RtdBIfCgdvcHRpb25zGAEgAygLMg4ucGdfcXVlcnkuTm9kZRIjCgZhY3Rpb24YAiABKAsyEy5wZ19xdWVyeS5HcmFudFN0bXQigwIKCENvcHlTdG10EiQKCHJlbGF0aW9uGAEgASgLMhIucGdfcXVlcnkuUmFuZ2VWYXISHQoFcXVlcnkYAiABKAsyDi5wZ19xdWVyeS5Ob2RlEh8KB2F0dGxpc3QYAyADKAsyDi5wZ19xdWVyeS5Ob2RlEhgKB2lzX2Zyb20YBCABKAhSB2lzX2Zyb20SHgoKaXNfcHJvZ3JhbRgFIAEoCFIKaXNfcHJvZ3JhbRIQCghmaWxlbmFtZRgGIAEoCRIfCgdvcHRpb25zGAcgAygLMg4ucGdfcXVlcnkuTm9kZRIkCgx3aGVyZV9jbGF1c2UYCCABKAsyDi5wZ19xdWVyeS5Ob2RlIoIBCg9WYXJpYWJsZVNldFN0bXQSJwoEa2luZBgBIAEoDjIZLnBnX3F1ZXJ5LlZhcmlhYmxlU2V0S2luZBIMCgRuYW1lGAIgASgJEhwKBGFyZ3MYAyADKAsyDi5wZ19xdWVyeS5Ob2RlEhoKCGlzX2xvY2FsGAQgASgIUghpc19sb2NhbCIgChBWYXJpYWJsZVNob3dTdG10EgwKBG5hbWUYASABKAkiyQMKCkNyZWF0ZVN0bXQSJAoIcmVsYXRpb24YASABKAsyEi5wZ19xdWVyeS5SYW5nZVZhchIiCgp0YWJsZV9lbHRzGAIgAygLMg4ucGdfcXVlcnkuTm9kZRIlCg1pbmhfcmVsYXRpb25zGAMgAygLMg4ucGdfcXVlcnkuTm9kZRIvCglwYXJ0Ym91bmQYBCABKAsyHC5wZ19xdWVyeS5QYXJ0aXRpb25Cb3VuZFNwZWMSKQoIcGFydHNwZWMYBSABKAsyFy5wZ19xdWVyeS5QYXJ0aXRpb25TcGVjEicKC29mX3R5cGVuYW1lGAYgASgLMhIucGdfcXVlcnkuVHlwZU5hbWUSIwoLY29uc3RyYWludHMYByADKAsyDi5wZ19xdWVyeS5Ob2RlEh8KB29wdGlvbnMYCCADKAsyDi5wZ19xdWVyeS5Ob2RlEioKCG9uY29tbWl0GAkgASgOMhgucGdfcXVlcnkuT25Db21taXRBY3Rpb24SFgoOdGFibGVzcGFjZW5hbWUYCiABKAkSFQoNYWNjZXNzX21ldGhvZBgLIAEoCRIkCg1pZl9ub3RfZXhpc3RzGAwgASgIUg1pZl9ub3RfZXhpc3RzIuIICgpDb25zdHJhaW50EiUKB2NvbnR5cGUYASABKA4yFC5wZ19xdWVyeS5Db25zdHJUeXBlEg8KB2Nvbm5hbWUYAiABKAkSEgoKZGVmZXJyYWJsZRgDIAEoCBIUCgxpbml0ZGVmZXJyZWQYBCABKAgSEAoIbG9jYXRpb24YBSABKAUSJAoNaXNfbm9faW5oZXJpdBgGIAEoCFINaXNfbm9faW5oZXJpdBIqCghyYXdfZXhwchgHIAEoCzIOLnBnX3F1ZXJ5Lk5vZGVSCHJhd19leHByEiAKC2Nvb2tlZF9leHByGAggASgJUgtjb29rZWRfZXhwchImCg5nZW5lcmF0ZWRfd2hlbhgJIAEoCVIOZ2VuZXJhdGVkX3doZW4SLgoSbnVsbHNfbm90X2Rpc3RpbmN0GAogASgIUhJudWxsc19ub3RfZGlzdGluY3QSHAoEa2V5cxgLIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSIQoJaW5jbHVkaW5nGAwgAygLMg4ucGdfcXVlcnkuTm9kZRIiCgpleGNsdXNpb25zGA0gAygLMg4ucGdfcXVlcnkuTm9kZRIfCgdvcHRpb25zGA4gAygLMg4ucGdfcXVlcnkuTm9kZRIRCglpbmRleG5hbWUYDyABKAkSEgoKaW5kZXhzcGFjZRgQIAEoCRIyChRyZXNldF9kZWZhdWx0X3RibHNwYxgRIAEoCFIUcmVzZXRfZGVmYXVsdF90YmxzcGMSJAoNYWNjZXNzX21ldGhvZBgSIAEoCVINYWNjZXNzX21ldGhvZBIyCgx3aGVyZV9jbGF1c2UYEyABKAsyDi5wZ19xdWVyeS5Ob2RlUgx3aGVyZV9jbGF1c2USIwoHcGt0YWJsZRgUIAEoCzISLnBnX3F1ZXJ5LlJhbmdlVmFyEioKCGZrX2F0dHJzGBUgAygLMg4ucGdfcXVlcnkuTm9kZVIIZmtfYXR0cnMSKgoIcGtfYXR0cnMYFiADKAsyDi5wZ19xdWVyeS5Ob2RlUghwa19hdHRycxIiCgxma19tYXRjaHR5cGUYFyABKAlSDGZrX21hdGNodHlwZRIkCg1ma191cGRfYWN0aW9uGBggASgJUg1ma191cGRfYWN0aW9uEiQKDWZrX2RlbF9hY3Rpb24YGSABKAlSDWZrX2RlbF9hY3Rpb24SOAoPZmtfZGVsX3NldF9jb2xzGBogAygLMg4ucGdfcXVlcnkuTm9kZVIPZmtfZGVsX3NldF9jb2xzEjQKDW9sZF9jb25wZmVxb3AYGyADKAsyDi5wZ19xdWVyeS5Ob2RlUg1vbGRfY29ucGZlcW9wEigKD29sZF9wa3RhYmxlX29pZBgcIAEoDVIPb2xkX3BrdGFibGVfb2lkEigKD3NraXBfdmFsaWRhdGlvbhgdIAEoCFIPc2tpcF92YWxpZGF0aW9uEigKD2luaXRpYWxseV92YWxpZBgeIAEoCFIPaW5pdGlhbGx5X3ZhbGlkIoQBChRDcmVhdGVUYWJsZVNwYWNlU3RtdBIWCg50YWJsZXNwYWNlbmFtZRgBIAEoCRIhCgVvd25lchgCIAEoCzISLnBnX3F1ZXJ5LlJvbGVTcGVjEhAKCGxvY2F0aW9uGAMgASgJEh8KB29wdGlvbnMYBCADKAsyDi5wZ19xdWVyeS5Ob2RlIkwKEkRyb3BUYWJsZVNwYWNlU3RtdBIWCg50YWJsZXNwYWNlbmFtZRgBIAEoCRIeCgptaXNzaW5nX29rGAIgASgIUgptaXNzaW5nX29rImcKGkFsdGVyVGFibGVTcGFjZU9wdGlvbnNTdG10EhYKDnRhYmxlc3BhY2VuYW1lGAEgASgJEh8KB29wdGlvbnMYAiADKAsyDi5wZ19xdWVyeS5Ob2RlEhAKCGlzX3Jlc2V0GAMgASgIIs8BChVBbHRlclRhYmxlTW92ZUFsbFN0bXQSMAoTb3JpZ190YWJsZXNwYWNlbmFtZRgBIAEoCVITb3JpZ190YWJsZXNwYWNlbmFtZRIlCgdvYmp0eXBlGAIgASgOMhQucGdfcXVlcnkuT2JqZWN0VHlwZRIdCgVyb2xlcxgDIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSLgoSbmV3X3RhYmxlc3BhY2VuYW1lGAQgASgJUhJuZXdfdGFibGVzcGFjZW5hbWUSDgoGbm93YWl0GAUgASgIIm0KE0NyZWF0ZUV4dGVuc2lvblN0bXQSDwoHZXh0bmFtZRgBIAEoCRIkCg1pZl9ub3RfZXhpc3RzGAIgASgIUg1pZl9ub3RfZXhpc3RzEh8KB29wdGlvbnMYAyADKAsyDi5wZ19xdWVyeS5Ob2RlIkYKEkFsdGVyRXh0ZW5zaW9uU3RtdBIPCgdleHRuYW1lGAEgASgJEh8KB29wdGlvbnMYAiADKAsyDi5wZ19xdWVyeS5Ob2RlIoQBChpBbHRlckV4dGVuc2lvbkNvbnRlbnRzU3RtdBIPCgdleHRuYW1lGAEgASgJEg4KBmFjdGlvbhgCIAEoBRIlCgdvYmp0eXBlGAMgASgOMhQucGdfcXVlcnkuT2JqZWN0VHlwZRIeCgZvYmplY3QYBCABKAsyDi5wZ19xdWVyeS5Ob2RlInUKDUNyZWF0ZUZkd1N0bXQSDwoHZmR3bmFtZRgBIAEoCRIyCgxmdW5jX29wdGlvbnMYAiADKAsyDi5wZ19xdWVyeS5Ob2RlUgxmdW5jX29wdGlvbnMSHwoHb3B0aW9ucxgDIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUidAoMQWx0ZXJGZHdTdG10Eg8KB2Zkd25hbWUYASABKAkSMgoMZnVuY19vcHRpb25zGAIgAygLMg4ucGdfcXVlcnkuTm9kZVIMZnVuY19vcHRpb25zEh8KB29wdGlvbnMYAyADKAsyDi5wZ19xdWVyeS5Ob2RlIqoBChdDcmVhdGVGb3JlaWduU2VydmVyU3RtdBISCgpzZXJ2ZXJuYW1lGAEgASgJEhIKCnNlcnZlcnR5cGUYAiABKAkSDwoHdmVyc2lvbhgDIAEoCRIPCgdmZHduYW1lGAQgASgJEiQKDWlmX25vdF9leGlzdHMYBSABKAhSDWlmX25vdF9leGlzdHMSHwoHb3B0aW9ucxgGIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUigAEKFkFsdGVyRm9yZWlnblNlcnZlclN0bXQSEgoKc2VydmVybmFtZRgBIAEoCRIPCgd2ZXJzaW9uGAIgASgJEh8KB29wdGlvbnMYAyADKAsyDi5wZ19xdWVyeS5Ob2RlEiAKC2hhc192ZXJzaW9uGAQgASgIUgtoYXNfdmVyc2lvbiJ8ChZDcmVhdGVGb3JlaWduVGFibGVTdG10Ei0KCWJhc2Vfc3RtdBgBIAEoCzIULnBnX3F1ZXJ5LkNyZWF0ZVN0bXRSBGJhc2USEgoKc2VydmVybmFtZRgCIAEoCRIfCgdvcHRpb25zGAMgAygLMg4ucGdfcXVlcnkuTm9kZSKUAQoVQ3JlYXRlVXNlck1hcHBpbmdTdG10EiAKBHVzZXIYASABKAsyEi5wZ19xdWVyeS5Sb2xlU3BlYxISCgpzZXJ2ZXJuYW1lGAIgASgJEiQKDWlmX25vdF9leGlzdHMYAyABKAhSDWlmX25vdF9leGlzdHMSHwoHb3B0aW9ucxgEIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUibQoUQWx0ZXJVc2VyTWFwcGluZ1N0bXQSIAoEdXNlchgBIAEoCzISLnBnX3F1ZXJ5LlJvbGVTcGVjEhIKCnNlcnZlcm5hbWUYAiABKAkSHwoHb3B0aW9ucxgDIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUiawoTRHJvcFVzZXJNYXBwaW5nU3RtdBIgCgR1c2VyGAEgASgLMhIucGdfcXVlcnkuUm9sZVNwZWMSEgoKc2VydmVybmFtZRgCIAEoCRIeCgptaXNzaW5nX29rGAMgASgIUgptaXNzaW5nX29rIpcCChdJbXBvcnRGb3JlaWduU2NoZW1hU3RtdBIgCgtzZXJ2ZXJfbmFtZRgBIAEoCVILc2VydmVyX25hbWUSJAoNcmVtb3RlX3NjaGVtYRgCIAEoCVINcmVtb3RlX3NjaGVtYRIiCgxsb2NhbF9zY2hlbWEYAyABKAlSDGxvY2FsX3NjaGVtYRI/CglsaXN0X3R5cGUYBCABKA4yIS5wZ19xdWVyeS5JbXBvcnRGb3JlaWduU2NoZW1hVHlwZVIJbGlzdF90eXBlEi4KCnRhYmxlX2xpc3QYBSADKAsyDi5wZ19xdWVyeS5Ob2RlUgp0YWJsZV9saXN0Eh8KB29wdGlvbnMYBiADKAsyDi5wZ19xdWVyeS5Ob2RlIvQBChBDcmVhdGVQb2xpY3lTdG10EiAKC3BvbGljeV9uYW1lGAEgASgJUgtwb2xpY3lfbmFtZRIhCgV0YWJsZRgCIAEoCzISLnBnX3F1ZXJ5LlJhbmdlVmFyEhoKCGNtZF9uYW1lGAMgASgJUghjbWRfbmFtZRISCgpwZXJtaXNzaXZlGAQgASgIEh0KBXJvbGVzGAUgAygLMg4ucGdfcXVlcnkuTm9kZRIcCgRxdWFsGAYgASgLMg4ucGdfcXVlcnkuTm9kZRIuCgp3aXRoX2NoZWNrGAcgASgLMg4ucGdfcXVlcnkuTm9kZVIKd2l0aF9jaGVjayLDAQoPQWx0ZXJQb2xpY3lTdG10EiAKC3BvbGljeV9uYW1lGAEgASgJUgtwb2xpY3lfbmFtZRIhCgV0YWJsZRgCIAEoCzISLnBnX3F1ZXJ5LlJhbmdlVmFyEh0KBXJvbGVzGAMgAygLMg4ucGdfcXVlcnkuTm9kZRIcCgRxdWFsGAQgASgLMg4ucGdfcXVlcnkuTm9kZRIuCgp3aXRoX2NoZWNrGAUgASgLMg4ucGdfcXVlcnkuTm9kZVIKd2l0aF9jaGVjayJiCgxDcmVhdGVBbVN0bXQSDgoGYW1uYW1lGAEgASgJEjIKDGhhbmRsZXJfbmFtZRgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGVSDGhhbmRsZXJfbmFtZRIOCgZhbXR5cGUYAyABKAkinAMKDkNyZWF0ZVRyaWdTdG10Eg8KB3JlcGxhY2UYASABKAgSFAoMaXNjb25zdHJhaW50GAIgASgIEhAKCHRyaWduYW1lGAMgASgJEiQKCHJlbGF0aW9uGAQgASgLMhIucGdfcXVlcnkuUmFuZ2VWYXISIAoIZnVuY25hbWUYBSADKAsyDi5wZ19xdWVyeS5Ob2RlEhwKBGFyZ3MYBiADKAsyDi5wZ19xdWVyeS5Ob2RlEgsKA3JvdxgHIAEoCBIOCgZ0aW1pbmcYCCABKAUSDgoGZXZlbnRzGAkgASgFEh8KB2NvbHVtbnMYCiADKAsyDi5wZ19xdWVyeS5Ob2RlEiMKC3doZW5fY2xhdXNlGAsgASgLMg4ucGdfcXVlcnkuTm9kZRInCg90cmFuc2l0aW9uX3JlbHMYDCADKAsyDi5wZ19xdWVyeS5Ob2RlEhIKCmRlZmVycmFibGUYDSABKAgSFAoMaW5pdGRlZmVycmVkGA4gASgIEiUKCWNvbnN0cnJlbBgPIAEoCzISLnBnX3F1ZXJ5LlJhbmdlVmFyIoABChNDcmVhdGVFdmVudFRyaWdTdG10EhAKCHRyaWduYW1lGAEgASgJEhEKCWV2ZW50bmFtZRgCIAEoCRIiCgp3aGVuY2xhdXNlGAMgAygLMg4ucGdfcXVlcnkuTm9kZRIgCghmdW5jbmFtZRgEIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUiOQoSQWx0ZXJFdmVudFRyaWdTdG10EhAKCHRyaWduYW1lGAEgASgJEhEKCXRnZW5hYmxlZBgCIAEoCSKvAQoPQ3JlYXRlUExhbmdTdG10Eg8KB3JlcGxhY2UYASABKAgSDgoGcGxuYW1lGAIgASgJEiEKCXBsaGFuZGxlchgDIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSIAoIcGxpbmxpbmUYBCADKAsyDi5wZ19xdWVyeS5Ob2RlEiMKC3BsdmFsaWRhdG9yGAUgAygLMg4ucGdfcXVlcnkuTm9kZRIRCglwbHRydXN0ZWQYBiABKAgidQoOQ3JlYXRlUm9sZVN0bXQSNAoJc3RtdF90eXBlGAEgASgOMhYucGdfcXVlcnkuUm9sZVN0bXRUeXBlUglzdG10X3R5cGUSDAoEcm9sZRgCIAEoCRIfCgdvcHRpb25zGAMgAygLMg4ucGdfcXVlcnkuTm9kZSJiCg1BbHRlclJvbGVTdG10EiAKBHJvbGUYASABKAsyEi5wZ19xdWVyeS5Sb2xlU3BlYxIfCgdvcHRpb25zGAIgAygLMg4ucGdfcXVlcnkuTm9kZRIOCgZhY3Rpb24YAyABKAUicgoQQWx0ZXJSb2xlU2V0U3RtdBIgCgRyb2xlGAEgASgLMhIucGdfcXVlcnkuUm9sZVNwZWMSEAoIZGF0YWJhc2UYAiABKAkSKgoHc2V0c3RtdBgDIAEoCzIZLnBnX3F1ZXJ5LlZhcmlhYmxlU2V0U3RtdCJNCgxEcm9wUm9sZVN0bXQSHQoFcm9sZXMYASADKAsyDi5wZ19xdWVyeS5Ob2RlEh4KCm1pc3Npbmdfb2sYAiABKAhSCm1pc3Npbmdfb2sisgEKDUNyZWF0ZVNlcVN0bXQSJAoIc2VxdWVuY2UYASABKAsyEi5wZ19xdWVyeS5SYW5nZVZhchIfCgdvcHRpb25zGAIgAygLMg4ucGdfcXVlcnkuTm9kZRIQCghvd25lcl9pZBgDIAEoDRIiCgxmb3JfaWRlbnRpdHkYBCABKAhSDGZvcl9pZGVudGl0eRIkCg1pZl9ub3RfZXhpc3RzGAUgASgIUg1pZl9ub3RfZXhpc3RzIpkBCgxBbHRlclNlcVN0bXQSJAoIc2VxdWVuY2UYASABKAsyEi5wZ19xdWVyeS5SYW5nZVZhchIfCgdvcHRpb25zGAIgAygLMg4ucGdfcXVlcnkuTm9kZRIiCgxmb3JfaWRlbnRpdHkYAyABKAhSDGZvcl9pZGVudGl0eRIeCgptaXNzaW5nX29rGAQgASgIUgptaXNzaW5nX29rIt0BCgpEZWZpbmVTdG10EiIKBGtpbmQYASABKA4yFC5wZ19xdWVyeS5PYmplY3RUeXBlEhAKCG9sZHN0eWxlGAIgASgIEiAKCGRlZm5hbWVzGAMgAygLMg4ucGdfcXVlcnkuTm9kZRIcCgRhcmdzGAQgAygLMg4ucGdfcXVlcnkuTm9kZRIiCgpkZWZpbml0aW9uGAUgAygLMg4ucGdfcXVlcnkuTm9kZRIkCg1pZl9ub3RfZXhpc3RzGAYgASgIUg1pZl9ub3RfZXhpc3RzEg8KB3JlcGxhY2UYByABKAgisAEKEENyZWF0ZURvbWFpblN0bXQSIgoKZG9tYWlubmFtZRgBIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSJQoJdHlwZV9uYW1lGAIgASgLMhIucGdfcXVlcnkuVHlwZU5hbWUSLAoLY29sbF9jbGF1c2UYAyABKAsyFy5wZ19xdWVyeS5Db2xsYXRlQ2xhdXNlEiMKC2NvbnN0cmFpbnRzGAQgAygLMg4ucGdfcXVlcnkuTm9kZSLHAQoRQ3JlYXRlT3BDbGFzc1N0bXQSIwoLb3BjbGFzc25hbWUYASADKAsyDi5wZ19xdWVyeS5Ob2RlEiQKDG9wZmFtaWx5bmFtZRgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSDgoGYW1uYW1lGAMgASgJEiQKCGRhdGF0eXBlGAQgASgLMhIucGdfcXVlcnkuVHlwZU5hbWUSHQoFaXRlbXMYBSADKAsyDi5wZ19xdWVyeS5Ob2RlEhIKCmlzX2RlZmF1bHQYBiABKAgi6QEKEUNyZWF0ZU9wQ2xhc3NJdGVtEhAKCGl0ZW10eXBlGAEgASgFEiYKBG5hbWUYAiABKAsyGC5wZ19xdWVyeS5PYmplY3RXaXRoQXJncxIOCgZudW1iZXIYAyABKAUSMgoMb3JkZXJfZmFtaWx5GAQgAygLMg4ucGdfcXVlcnkuTm9kZVIMb3JkZXJfZmFtaWx5Ei4KCmNsYXNzX2FyZ3MYBSADKAsyDi5wZ19xdWVyeS5Ob2RlUgpjbGFzc19hcmdzEiYKCnN0b3JlZHR5cGUYBiABKAsyEi5wZ19xdWVyeS5UeXBlTmFtZSJKChJDcmVhdGVPcEZhbWlseVN0bXQSJAoMb3BmYW1pbHluYW1lGAEgAygLMg4ucGdfcXVlcnkuTm9kZRIOCgZhbW5hbWUYAiABKAkieQoRQWx0ZXJPcEZhbWlseVN0bXQSJAoMb3BmYW1pbHluYW1lGAEgAygLMg4ucGdfcXVlcnkuTm9kZRIOCgZhbW5hbWUYAiABKAkSDwoHaXNfZHJvcBgDIAEoCBIdCgVpdGVtcxgEIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUitAEKCERyb3BTdG10Eh8KB29iamVjdHMYASADKAsyDi5wZ19xdWVyeS5Ob2RlEikKC3JlbW92ZV90eXBlGAIgASgOMhQucGdfcXVlcnkuT2JqZWN0VHlwZRIoCghiZWhhdmlvchgDIAEoDjIWLnBnX3F1ZXJ5LkRyb3BCZWhhdmlvchIeCgptaXNzaW5nX29rGAQgASgIUgptaXNzaW5nX29rEhIKCmNvbmN1cnJlbnQYBSABKAgifwoMVHJ1bmNhdGVTdG10EiEKCXJlbGF0aW9ucxgBIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSIgoMcmVzdGFydF9zZXFzGAIgASgIUgxyZXN0YXJ0X3NlcXMSKAoIYmVoYXZpb3IYAyABKA4yFi5wZ19xdWVyeS5Ecm9wQmVoYXZpb3IiZQoLQ29tbWVudFN0bXQSJQoHb2JqdHlwZRgBIAEoDjIULnBnX3F1ZXJ5Lk9iamVjdFR5cGUSHgoGb2JqZWN0GAIgASgLMg4ucGdfcXVlcnkuTm9kZRIPCgdjb21tZW50GAMgASgJInYKDFNlY0xhYmVsU3RtdBIlCgdvYmp0eXBlGAEgASgOMhQucGdfcXVlcnkuT2JqZWN0VHlwZRIeCgZvYmplY3QYAiABKAsyDi5wZ19xdWVyeS5Ob2RlEhAKCHByb3ZpZGVyGAMgASgJEg0KBWxhYmVsGAQgASgJIlcKEURlY2xhcmVDdXJzb3JTdG10EhIKCnBvcnRhbG5hbWUYASABKAkSDwoHb3B0aW9ucxgCIAEoBRIdCgVxdWVyeRgDIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUiJQoPQ2xvc2VQb3J0YWxTdG10EhIKCnBvcnRhbG5hbWUYASABKAkibgoJRmV0Y2hTdG10EisKCWRpcmVjdGlvbhgBIAEoDjIYLnBnX3F1ZXJ5LkZldGNoRGlyZWN0aW9uEhAKCGhvd19tYW55GAIgASgDEhIKCnBvcnRhbG5hbWUYAyABKAkSDgoGaXNtb3ZlGAQgASgIIsYFCglJbmRleFN0bXQSDwoHaWR4bmFtZRgBIAEoCRIkCghyZWxhdGlvbhgCIAEoCzISLnBnX3F1ZXJ5LlJhbmdlVmFyEhUKDWFjY2Vzc19tZXRob2QYAyABKAkSEwoLdGFibGVfc3BhY2UYBCABKAkSJAoMaW5kZXhfcGFyYW1zGAUgAygLMg4ucGdfcXVlcnkuTm9kZRIuChZpbmRleF9pbmNsdWRpbmdfcGFyYW1zGAYgAygLMg4ucGdfcXVlcnkuTm9kZRIfCgdvcHRpb25zGAcgAygLMg4ucGdfcXVlcnkuTm9kZRIkCgx3aGVyZV9jbGF1c2UYCCABKAsyDi5wZ19xdWVyeS5Ob2RlEigKEGV4Y2x1ZGVfb3BfbmFtZXMYCSADKAsyDi5wZ19xdWVyeS5Ob2RlEhIKCmlkeGNvbW1lbnQYCiABKAkSEQoJaW5kZXhfb2lkGAsgASgNEhIKCm9sZF9udW1iZXIYDCABKA0SGAoQb2xkX2NyZWF0ZV9zdWJpZBgNIAEoDRImCh5vbGRfZmlyc3RfcmVsZmlsZWxvY2F0b3Jfc3ViaWQYDiABKA0SDgoGdW5pcXVlGA8gASgIEi4KEm51bGxzX25vdF9kaXN0aW5jdBgQIAEoCFISbnVsbHNfbm90X2Rpc3RpbmN0Eg8KB3ByaW1hcnkYESABKAgSFAoMaXNjb25zdHJhaW50GBIgASgIEhIKCmRlZmVycmFibGUYEyABKAgSFAoMaW5pdGRlZmVycmVkGBQgASgIEhMKC3RyYW5zZm9ybWVkGBUgASgIEhIKCmNvbmN1cnJlbnQYFiABKAgSJAoNaWZfbm90X2V4aXN0cxgXIAEoCFINaWZfbm90X2V4aXN0cxIyChRyZXNldF9kZWZhdWx0X3RibHNwYxgYIAEoCFIUcmVzZXRfZGVmYXVsdF90YmxzcGMi9AEKD0NyZWF0ZVN0YXRzU3RtdBIgCghkZWZuYW1lcxgBIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSLgoKc3RhdF90eXBlcxgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGVSCnN0YXRfdHlwZXMSHQoFZXhwcnMYAyADKAsyDi5wZ19xdWVyeS5Ob2RlEiEKCXJlbGF0aW9ucxgEIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSEgoKc3R4Y29tbWVudBgFIAEoCRITCgt0cmFuc2Zvcm1lZBgGIAEoCBIkCg1pZl9ub3RfZXhpc3RzGAcgASgIUg1pZl9ub3RfZXhpc3RzIjcKCVN0YXRzRWxlbRIMCgRuYW1lGAEgASgJEhwKBGV4cHIYAiABKAsyDi5wZ19xdWVyeS5Ob2RlImkKDkFsdGVyU3RhdHNTdG10EiAKCGRlZm5hbWVzGAEgAygLMg4ucGdfcXVlcnkuTm9kZRIVCg1zdHhzdGF0dGFyZ2V0GAIgASgFEh4KCm1pc3Npbmdfb2sYAyABKAhSCm1pc3Npbmdfb2sihQIKEkNyZWF0ZUZ1bmN0aW9uU3RtdBIiCgxpc19wcm9jZWR1cmUYASABKAhSDGlzX3Byb2NlZHVyZRIPCgdyZXBsYWNlGAIgASgIEiAKCGZ1bmNuYW1lGAMgAygLMg4ucGdfcXVlcnkuTm9kZRIiCgpwYXJhbWV0ZXJzGAQgAygLMg4ucGdfcXVlcnkuTm9kZRInCgtyZXR1cm5fdHlwZRgFIAEoCzISLnBnX3F1ZXJ5LlR5cGVOYW1lEh8KB29wdGlvbnMYBiADKAsyDi5wZ19xdWVyeS5Ob2RlEioKCHNxbF9ib2R5GAcgASgLMg4ucGdfcXVlcnkuTm9kZVIIc3FsX2JvZHkilwEKEUZ1bmN0aW9uUGFyYW1ldGVyEgwKBG5hbWUYASABKAkSJAoIYXJnX3R5cGUYAiABKAsyEi5wZ19xdWVyeS5UeXBlTmFtZRItCgRtb2RlGAMgASgOMh8ucGdfcXVlcnkuRnVuY3Rpb25QYXJhbWV0ZXJNb2RlEh8KB2RlZmV4cHIYBCABKAsyDi5wZ19xdWVyeS5Ob2RlIoMBChFBbHRlckZ1bmN0aW9uU3RtdBIlCgdvYmp0eXBlGAEgASgOMhQucGdfcXVlcnkuT2JqZWN0VHlwZRImCgRmdW5jGAIgASgLMhgucGdfcXVlcnkuT2JqZWN0V2l0aEFyZ3MSHwoHYWN0aW9ucxgDIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUiJgoGRG9TdG10EhwKBGFyZ3MYASADKAsyDi5wZ19xdWVyeS5Ob2RlIm4KD0lubGluZUNvZGVCbG9jaxIgCgtzb3VyY2VfdGV4dBgBIAEoCVILc291cmNlX3RleHQSEAoIbGFuZ19vaWQYAiABKA0SFwoPbGFuZ19pc190cnVzdGVkGAMgASgIEg4KBmF0b21pYxgEIAEoCCJ3CghDYWxsU3RtdBIkCghmdW5jY2FsbBgBIAEoCzISLnBnX3F1ZXJ5LkZ1bmNDYWxsEiQKCGZ1bmNleHByGAIgASgLMhIucGdfcXVlcnkuRnVuY0V4cHISHwoHb3V0YXJncxgDIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUiHQoLQ2FsbENvbnRleHQSDgoGYXRvbWljGAEgASgIIpYCCgpSZW5hbWVTdG10EikKC3JlbmFtZV90eXBlGAEgASgOMhQucGdfcXVlcnkuT2JqZWN0VHlwZRIrCg1yZWxhdGlvbl90eXBlGAIgASgOMhQucGdfcXVlcnkuT2JqZWN0VHlwZRIkCghyZWxhdGlvbhgDIAEoCzISLnBnX3F1ZXJ5LlJhbmdlVmFyEh4KBm9iamVjdBgEIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSDwoHc3VibmFtZRgFIAEoCRIPCgduZXduYW1lGAYgASgJEigKCGJlaGF2aW9yGAcgASgOMhYucGdfcXVlcnkuRHJvcEJlaGF2aW9yEh4KCm1pc3Npbmdfb2sYCCABKAhSCm1pc3Npbmdfb2sivAEKFkFsdGVyT2JqZWN0RGVwZW5kc1N0bXQSKQoLb2JqZWN0X3R5cGUYASABKA4yFC5wZ19xdWVyeS5PYmplY3RUeXBlEiQKCHJlbGF0aW9uGAIgASgLMhIucGdfcXVlcnkuUmFuZ2VWYXISHgoGb2JqZWN0GAMgASgLMg4ucGdfcXVlcnkuTm9kZRIhCgdleHRuYW1lGAQgASgLMhAucGdfcXVlcnkuU3RyaW5nEg4KBnJlbW92ZRgFIAEoCCK7AQoVQWx0ZXJPYmplY3RTY2hlbWFTdG10EikKC29iamVjdF90eXBlGAEgASgOMhQucGdfcXVlcnkuT2JqZWN0VHlwZRIkCghyZWxhdGlvbhgCIAEoCzISLnBnX3F1ZXJ5LlJhbmdlVmFyEh4KBm9iamVjdBgDIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSEQoJbmV3c2NoZW1hGAQgASgJEh4KCm1pc3Npbmdfb2sYBSABKAhSCm1pc3Npbmdfb2sipwEKDkFsdGVyT3duZXJTdG10EikKC29iamVjdF90eXBlGAEgASgOMhQucGdfcXVlcnkuT2JqZWN0VHlwZRIkCghyZWxhdGlvbhgCIAEoCzISLnBnX3F1ZXJ5LlJhbmdlVmFyEh4KBm9iamVjdBgDIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSJAoIbmV3b3duZXIYBCABKAsyEi5wZ19xdWVyeS5Sb2xlU3BlYyJgChFBbHRlck9wZXJhdG9yU3RtdBIqCghvcGVybmFtZRgBIAEoCzIYLnBnX3F1ZXJ5Lk9iamVjdFdpdGhBcmdzEh8KB29wdGlvbnMYAiADKAsyDi5wZ19xdWVyeS5Ob2RlIlMKDUFsdGVyVHlwZVN0bXQSIQoJdHlwZV9uYW1lGAEgAygLMg4ucGdfcXVlcnkuTm9kZRIfCgdvcHRpb25zGAIgAygLMg4ucGdfcXVlcnkuTm9kZSLNAQoIUnVsZVN0bXQSJAoIcmVsYXRpb24YASABKAsyEi5wZ19xdWVyeS5SYW5nZVZhchIQCghydWxlbmFtZRgCIAEoCRIkCgx3aGVyZV9jbGF1c2UYAyABKAsyDi5wZ19xdWVyeS5Ob2RlEiAKBWV2ZW50GAQgASgOMhEucGdfcXVlcnkuQ21kVHlwZRIPCgdpbnN0ZWFkGAUgASgIEh8KB2FjdGlvbnMYBiADKAsyDi5wZ19xdWVyeS5Ob2RlEg8KB3JlcGxhY2UYByABKAgiNAoKTm90aWZ5U3RtdBIVCg1jb25kaXRpb25uYW1lGAEgASgJEg8KB3BheWxvYWQYAiABKAkiIwoKTGlzdGVuU3RtdBIVCg1jb25kaXRpb25uYW1lGAEgASgJIiUKDFVubGlzdGVuU3RtdBIVCg1jb25kaXRpb25uYW1lGAEgASgJIqMBCg9UcmFuc2FjdGlvblN0bXQSKwoEa2luZBgBIAEoDjIdLnBnX3F1ZXJ5LlRyYW5zYWN0aW9uU3RtdEtpbmQSHwoHb3B0aW9ucxgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSJgoOc2F2ZXBvaW50X25hbWUYAyABKAlSDnNhdmVwb2ludF9uYW1lEgsKA2dpZBgEIAEoCRINCgVjaGFpbhgFIAEoCCJcChFDb21wb3NpdGVUeXBlU3RtdBIjCgd0eXBldmFyGAEgASgLMhIucGdfcXVlcnkuUmFuZ2VWYXISIgoKY29sZGVmbGlzdBgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUiUQoOQ3JlYXRlRW51bVN0bXQSIQoJdHlwZV9uYW1lGAEgAygLMg4ucGdfcXVlcnkuTm9kZRIcCgR2YWxzGAIgAygLMg4ucGdfcXVlcnkuTm9kZSJUCg9DcmVhdGVSYW5nZVN0bXQSIQoJdHlwZV9uYW1lGAEgAygLMg4ucGdfcXVlcnkuTm9kZRIeCgZwYXJhbXMYAiADKAsyDi5wZ19xdWVyeS5Ob2RlIqgBCg1BbHRlckVudW1TdG10EiEKCXR5cGVfbmFtZRgBIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSDwoHb2xkX3ZhbBgCIAEoCRIPCgduZXdfdmFsGAMgASgJEhgKEG5ld192YWxfbmVpZ2hib3IYBCABKAkSGAoQbmV3X3ZhbF9pc19hZnRlchgFIAEoCBIeChZza2lwX2lmX25ld192YWxfZXhpc3RzGAYgASgIItQBCghWaWV3U3RtdBIgCgR2aWV3GAEgASgLMhIucGdfcXVlcnkuUmFuZ2VWYXISHwoHYWxpYXNlcxgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSHQoFcXVlcnkYAyABKAsyDi5wZ19xdWVyeS5Ob2RlEg8KB3JlcGxhY2UYBCABKAgSHwoHb3B0aW9ucxgFIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSNAoRd2l0aF9jaGVja19vcHRpb24YBiABKA4yGS5wZ19xdWVyeS5WaWV3Q2hlY2tPcHRpb24iHAoITG9hZFN0bXQSEAoIZmlsZW5hbWUYASABKAkiPwoMQ3JlYXRlZGJTdG10Eg4KBmRibmFtZRgBIAEoCRIfCgdvcHRpb25zGAIgAygLMg4ucGdfcXVlcnkuTm9kZSJEChFBbHRlckRhdGFiYXNlU3RtdBIOCgZkYm5hbWUYASABKAkSHwoHb3B0aW9ucxgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUiLgocQWx0ZXJEYXRhYmFzZVJlZnJlc2hDb2xsU3RtdBIOCgZkYm5hbWUYASABKAkiUgoUQWx0ZXJEYXRhYmFzZVNldFN0bXQSDgoGZGJuYW1lGAEgASgJEioKB3NldHN0bXQYAiABKAsyGS5wZ19xdWVyeS5WYXJpYWJsZVNldFN0bXQiXQoKRHJvcGRiU3RtdBIOCgZkYm5hbWUYASABKAkSHgoKbWlzc2luZ19vaxgCIAEoCFIKbWlzc2luZ19vaxIfCgdvcHRpb25zGAMgAygLMg4ucGdfcXVlcnkuTm9kZSI9Cg9BbHRlclN5c3RlbVN0bXQSKgoHc2V0c3RtdBgBIAEoCzIZLnBnX3F1ZXJ5LlZhcmlhYmxlU2V0U3RtdCJmCgtDbHVzdGVyU3RtdBIkCghyZWxhdGlvbhgBIAEoCzISLnBnX3F1ZXJ5LlJhbmdlVmFyEhEKCWluZGV4bmFtZRgCIAEoCRIeCgZwYXJhbXMYAyADKAsyDi5wZ19xdWVyeS5Ob2RlIm8KClZhY3V1bVN0bXQSHwoHb3B0aW9ucxgBIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSHAoEcmVscxgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSIgoMaXNfdmFjdXVtY21kGAMgASgIUgxpc192YWN1dW1jbWQibQoOVmFjdXVtUmVsYXRpb24SJAoIcmVsYXRpb24YASABKAsyEi5wZ19xdWVyeS5SYW5nZVZhchILCgNvaWQYAiABKA0SKAoHdmFfY29scxgDIAMoCzIOLnBnX3F1ZXJ5Lk5vZGVSB3ZhX2NvbHMiTQoLRXhwbGFpblN0bXQSHQoFcXVlcnkYASABKAsyDi5wZ19xdWVyeS5Ob2RlEh8KB29wdGlvbnMYAiADKAsyDi5wZ19xdWVyeS5Ob2RlIssBChFDcmVhdGVUYWJsZUFzU3RtdBIdCgVxdWVyeRgBIAEoCzIOLnBnX3F1ZXJ5Lk5vZGUSIgoEaW50bxgCIAEoCzIULnBnX3F1ZXJ5LkludG9DbGF1c2USJQoHb2JqdHlwZRgDIAEoDjIULnBnX3F1ZXJ5Lk9iamVjdFR5cGUSJgoOaXNfc2VsZWN0X2ludG8YBCABKAhSDmlzX3NlbGVjdF9pbnRvEiQKDWlmX25vdF9leGlzdHMYBSABKAhSDWlmX25vdF9leGlzdHMiYQoSUmVmcmVzaE1hdFZpZXdTdG10EhIKCmNvbmN1cnJlbnQYASABKAgSEQoJc2tpcF9kYXRhGAIgASgIEiQKCHJlbGF0aW9uGAMgASgLMhIucGdfcXVlcnkuUmFuZ2VWYXIiEAoOQ2hlY2tQb2ludFN0bXQiNAoLRGlzY2FyZFN0bXQSJQoGdGFyZ2V0GAEgASgOMhUucGdfcXVlcnkuRGlzY2FyZE1vZGUiSwoITG9ja1N0bXQSIQoJcmVsYXRpb25zGAEgAygLMg4ucGdfcXVlcnkuTm9kZRIMCgRtb2RlGAIgASgFEg4KBm5vd2FpdBgDIAEoCCJLChJDb25zdHJhaW50c1NldFN0bXQSIwoLY29uc3RyYWludHMYASADKAsyDi5wZ19xdWVyeS5Ob2RlEhAKCGRlZmVycmVkGAIgASgIIowBCgtSZWluZGV4U3RtdBIpCgRraW5kGAEgASgOMhsucGdfcXVlcnkuUmVpbmRleE9iamVjdFR5cGUSJAoIcmVsYXRpb24YAiABKAsyEi5wZ19xdWVyeS5SYW5nZVZhchIMCgRuYW1lGAMgASgJEh4KBnBhcmFtcxgEIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUi5QEKFENyZWF0ZUNvbnZlcnNpb25TdG10EjgKD2NvbnZlcnNpb25fbmFtZRgBIAMoCzIOLnBnX3F1ZXJ5Lk5vZGVSD2NvbnZlcnNpb25fbmFtZRIsChFmb3JfZW5jb2RpbmdfbmFtZRgCIAEoCVIRZm9yX2VuY29kaW5nX25hbWUSKgoQdG9fZW5jb2RpbmdfbmFtZRgDIAEoCVIQdG9fZW5jb2RpbmdfbmFtZRIsCglmdW5jX25hbWUYBCADKAsyDi5wZ19xdWVyeS5Ob2RlUglmdW5jX25hbWUSCwoDZGVmGAUgASgIIsMBCg5DcmVhdGVDYXN0U3RtdBImCgpzb3VyY2V0eXBlGAEgASgLMhIucGdfcXVlcnkuVHlwZU5hbWUSJgoKdGFyZ2V0dHlwZRgCIAEoCzISLnBnX3F1ZXJ5LlR5cGVOYW1lEiYKBGZ1bmMYAyABKAsyGC5wZ19xdWVyeS5PYmplY3RXaXRoQXJncxIqCgdjb250ZXh0GAQgASgOMhkucGdfcXVlcnkuQ29lcmNpb25Db250ZXh0Eg0KBWlub3V0GAUgASgIIroBChNDcmVhdGVUcmFuc2Zvcm1TdG10Eg8KB3JlcGxhY2UYASABKAgSMAoJdHlwZV9uYW1lGAIgASgLMhIucGdfcXVlcnkuVHlwZU5hbWVSCXR5cGVfbmFtZRIMCgRsYW5nGAMgASgJEikKB2Zyb21zcWwYBCABKAsyGC5wZ19xdWVyeS5PYmplY3RXaXRoQXJncxInCgV0b3NxbBgFIAEoCzIYLnBnX3F1ZXJ5Lk9iamVjdFdpdGhBcmdzIlwKC1ByZXBhcmVTdG10EgwKBG5hbWUYASABKAkSIAoIYXJndHlwZXMYAiADKAsyDi5wZ19xdWVyeS5Ob2RlEh0KBXF1ZXJ5GAMgASgLMg4ucGdfcXVlcnkuTm9kZSI7CgtFeGVjdXRlU3RtdBIMCgRuYW1lGAEgASgJEh4KBnBhcmFtcxgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUiHgoORGVhbGxvY2F0ZVN0bXQSDAoEbmFtZRgBIAEoCSJYCg1Ecm9wT3duZWRTdG10Eh0KBXJvbGVzGAEgAygLMg4ucGdfcXVlcnkuTm9kZRIoCghiZWhhdmlvchgCIAEoDjIWLnBnX3F1ZXJ5LkRyb3BCZWhhdmlvciJXChFSZWFzc2lnbk93bmVkU3RtdBIdCgVyb2xlcxgBIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSIwoHbmV3cm9sZRgCIAEoCzISLnBnX3F1ZXJ5LlJvbGVTcGVjIloKFUFsdGVyVFNEaWN0aW9uYXJ5U3RtdBIgCghkaWN0bmFtZRgBIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSHwoHb3B0aW9ucxgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUi6wEKGEFsdGVyVFNDb25maWd1cmF0aW9uU3RtdBIpCgRraW5kGAEgASgOMhsucGdfcXVlcnkuQWx0ZXJUU0NvbmZpZ1R5cGUSHwoHY2ZnbmFtZRgCIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSIQoJdG9rZW50eXBlGAMgAygLMg4ucGdfcXVlcnkuTm9kZRIdCgVkaWN0cxgEIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSEAoIb3ZlcnJpZGUYBSABKAgSDwoHcmVwbGFjZRgGIAEoCBIeCgptaXNzaW5nX29rGAcgASgIUgptaXNzaW5nX29rIn8KEFB1YmxpY2F0aW9uVGFibGUSJAoIcmVsYXRpb24YASABKAsyEi5wZ19xdWVyeS5SYW5nZVZhchIkCgx3aGVyZV9jbGF1c2UYAiABKAsyDi5wZ19xdWVyeS5Ob2RlEh8KB2NvbHVtbnMYAyADKAsyDi5wZ19xdWVyeS5Ob2RlIpgBChJQdWJsaWNhdGlvbk9ialNwZWMSNAoKcHVib2JqdHlwZRgBIAEoDjIgLnBnX3F1ZXJ5LlB1YmxpY2F0aW9uT2JqU3BlY1R5cGUSDAoEbmFtZRgCIAEoCRIsCghwdWJ0YWJsZRgDIAEoCzIaLnBnX3F1ZXJ5LlB1YmxpY2F0aW9uVGFibGUSEAoIbG9jYXRpb24YBCABKAUilQEKFUNyZWF0ZVB1YmxpY2F0aW9uU3RtdBIPCgdwdWJuYW1lGAEgASgJEh8KB29wdGlvbnMYAiADKAsyDi5wZ19xdWVyeS5Ob2RlEiIKCnB1Ym9iamVjdHMYAyADKAsyDi5wZ19xdWVyeS5Ob2RlEiYKDmZvcl9hbGxfdGFibGVzGAQgASgIUg5mb3JfYWxsX3RhYmxlcyLGAQoUQWx0ZXJQdWJsaWNhdGlvblN0bXQSDwoHcHVibmFtZRgBIAEoCRIfCgdvcHRpb25zGAIgAygLMg4ucGdfcXVlcnkuTm9kZRIiCgpwdWJvYmplY3RzGAMgAygLMg4ucGdfcXVlcnkuTm9kZRImCg5mb3JfYWxsX3RhYmxlcxgEIAEoCFIOZm9yX2FsbF90YWJsZXMSMAoGYWN0aW9uGAUgASgOMiAucGdfcXVlcnkuQWx0ZXJQdWJsaWNhdGlvbkFjdGlvbiKBAQoWQ3JlYXRlU3Vic2NyaXB0aW9uU3RtdBIPCgdzdWJuYW1lGAEgASgJEhAKCGNvbm5pbmZvGAIgASgJEiMKC3B1YmxpY2F0aW9uGAMgAygLMg4ucGdfcXVlcnkuTm9kZRIfCgdvcHRpb25zGAQgAygLMg4ucGdfcXVlcnkuTm9kZSKvAQoVQWx0ZXJTdWJzY3JpcHRpb25TdG10Ei0KBGtpbmQYASABKA4yHy5wZ19xdWVyeS5BbHRlclN1YnNjcmlwdGlvblR5cGUSDwoHc3VibmFtZRgCIAEoCRIQCghjb25uaW5mbxgDIAEoCRIjCgtwdWJsaWNhdGlvbhgEIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUSHwoHb3B0aW9ucxgFIAMoCzIOLnBnX3F1ZXJ5Lk5vZGUicQoURHJvcFN1YnNjcmlwdGlvblN0bXQSDwoHc3VibmFtZRgBIAEoCRIeCgptaXNzaW5nX29rGAIgASgIUgptaXNzaW5nX29rEigKCGJlaGF2aW9yGAMgASgOMhYucGdfcXVlcnkuRHJvcEJlaGF2aW9yInQKCVNjYW5Ub2tlbhINCgVzdGFydBgBIAEoBRILCgNlbmQYAiABKAUSHgoFdG9rZW4YBCABKA4yDy5wZ19xdWVyeS5Ub2tlbhIrCgxrZXl3b3JkX2tpbmQYBSABKA4yFS5wZ19xdWVyeS5LZXl3b3JkS2luZCp/Cg5PdmVycmlkaW5nS2luZBIdChlPVkVSUklESU5HX0tJTkRfVU5ERUZJTkVEEAASFgoST1ZFUlJJRElOR19OT1RfU0VUEAESGQoVT1ZFUlJJRElOR19VU0VSX1ZBTFVFEAISGwoXT1ZFUlJJRElOR19TWVNURU1fVkFMVUUQAyqbAQoLUXVlcnlTb3VyY2USGgoWUVVFUllfU09VUkNFX1VOREVGSU5FRBAAEhEKDVFTUkNfT1JJR0lOQUwQARIPCgtRU1JDX1BBUlNFUhACEhUKEVFTUkNfSU5TVEVBRF9SVUxFEAMSGgoWUVNSQ19RVUFMX0lOU1RFQURfUlVMRRAEEhkKFVFTUkNfTk9OX0lOU1RFQURfUlVMRRAFKm0KCVNvcnRCeURpchIZChVTT1JUX0JZX0RJUl9VTkRFRklORUQQABISCg5TT1JUQllfREVGQVVMVBABEg4KClNPUlRCWV9BU0MQAhIPCgtTT1JUQllfREVTQxADEhAKDFNPUlRCWV9VU0lORxAEKnMKC1NvcnRCeU51bGxzEhsKF1NPUlRfQllfTlVMTFNfVU5ERUZJTkVEEAASGAoUU09SVEJZX05VTExTX0RFRkFVTFQQARIWChJTT1JUQllfTlVMTFNfRklSU1QQAhIVChFTT1JUQllfTlVMTFNfTEFTVBADKn4KDVNldFF1YW50aWZpZXISHAoYU0VUX1FVQU5USUZJRVJfVU5ERUZJTkVEEAASGgoWU0VUX1FVQU5USUZJRVJfREVGQVVMVBABEhYKElNFVF9RVUFOVElGSUVSX0FMTBACEhsKF1NFVF9RVUFOVElGSUVSX0RJU1RJTkNUEAMqtgIKC0FfRXhwcl9LaW5kEhkKFUFfRVhQUl9LSU5EX1VOREVGSU5FRBAAEgwKCEFFWFBSX09QEAESEAoMQUVYUFJfT1BfQU5ZEAISEAoMQUVYUFJfT1BfQUxMEAMSEgoOQUVYUFJfRElTVElOQ1QQBBIWChJBRVhQUl9OT1RfRElTVElOQ1QQBRIQCgxBRVhQUl9OVUxMSUYQBhIMCghBRVhQUl9JThAHEg4KCkFFWFBSX0xJS0UQCBIPCgtBRVhQUl9JTElLRRAJEhEKDUFFWFBSX1NJTUlMQVIQChIRCg1BRVhQUl9CRVRXRUVOEAsSFQoRQUVYUFJfTk9UX0JFVFdFRU4QDBIVChFBRVhQUl9CRVRXRUVOX1NZTRANEhkKFUFFWFBSX05PVF9CRVRXRUVOX1NZTRAOKqgBCgxSb2xlU3BlY1R5cGUSHAoYUk9MRV9TUEVDX1RZUEVfVU5ERUZJTkVEEAASFAoQUk9MRVNQRUNfQ1NUUklORxABEhkKFVJPTEVTUEVDX0NVUlJFTlRfUk9MRRACEhkKFVJPTEVTUEVDX0NVUlJFTlRfVVNFUhADEhkKFVJPTEVTUEVDX1NFU1NJT05fVVNFUhAEEhMKD1JPTEVTUEVDX1BVQkxJQxAFKvQCCg9UYWJsZUxpa2VPcHRpb24SHwobVEFCTEVfTElLRV9PUFRJT05fVU5ERUZJTkVEEAASHgoaQ1JFQVRFX1RBQkxFX0xJS0VfQ09NTUVOVFMQARIhCh1DUkVBVEVfVEFCTEVfTElLRV9DT01QUkVTU0lPThACEiEKHUNSRUFURV9UQUJMRV9MSUtFX0NPTlNUUkFJTlRTEAMSHgoaQ1JFQVRFX1RBQkxFX0xJS0VfREVGQVVMVFMQBBIfChtDUkVBVEVfVEFCTEVfTElLRV9HRU5FUkFURUQQBRIeChpDUkVBVEVfVEFCTEVfTElLRV9JREVOVElUWRAGEh0KGUNSRUFURV9UQUJMRV9MSUtFX0lOREVYRVMQBxIgChxDUkVBVEVfVEFCTEVfTElLRV9TVEFUSVNUSUNTEAgSHQoZQ1JFQVRFX1RBQkxFX0xJS0VfU1RPUkFHRRAJEhkKFUNSRUFURV9UQUJMRV9MSUtFX0FMTBAKKnYKDURlZkVsZW1BY3Rpb24SHQoZREVGX0VMRU1fQUNUSU9OX1VOREVGSU5FRBAAEhIKDkRFRkVMRU1fVU5TUEVDEAESDwoLREVGRUxFTV9TRVQQAhIPCgtERUZFTEVNX0FERBADEhAKDERFRkVMRU1fRFJPUBAEKo0BChFQYXJ0aXRpb25TdHJhdGVneRIgChxQQVJUSVRJT05fU1RSQVRFR1lfVU5ERUZJTkVEEAASGwoXUEFSVElUSU9OX1NUUkFURUdZX0xJU1QQARIcChhQQVJUSVRJT05fU1RSQVRFR1lfUkFOR0UQAhIbChdQQVJUSVRJT05fU1RSQVRFR1lfSEFTSBADKqwBChdQYXJ0aXRpb25SYW5nZURhdHVtS2luZBIoCiRQQVJUSVRJT05fUkFOR0VfREFUVU1fS0lORF9VTkRFRklORUQQABIiCh5QQVJUSVRJT05fUkFOR0VfREFUVU1fTUlOVkFMVUUQARIfChtQQVJUSVRJT05fUkFOR0VfREFUVU1fVkFMVUUQAhIiCh5QQVJUSVRJT05fUkFOR0VfREFUVU1fTUFYVkFMVUUQAyq9AQoHUlRFS2luZBIVChFSVEVLSU5EX1VOREVGSU5FRBAAEhAKDFJURV9SRUxBVElPThABEhAKDFJURV9TVUJRVUVSWRACEgwKCFJURV9KT0lOEAMSEAoMUlRFX0ZVTkNUSU9OEAQSEQoNUlRFX1RBQkxFRlVOQxAFEg4KClJURV9WQUxVRVMQBhILCgdSVEVfQ1RFEAcSFwoTUlRFX05BTUVEVFVQTEVTVE9SRRAIEg4KClJURV9SRVNVTFQQCSrEAQoHV0NPS2luZBIVChFXQ09LSU5EX1VOREVGSU5FRBAAEhIKDldDT19WSUVXX0NIRUNLEAESGAoUV0NPX1JMU19JTlNFUlRfQ0hFQ0sQAhIYChRXQ09fUkxTX1VQREFURV9DSEVDSxADEhoKFldDT19STFNfQ09ORkxJQ1RfQ0hFQ0sQBBIeChpXQ09fUkxTX01FUkdFX1VQREFURV9DSEVDSxAFEh4KGldDT19STFNfTUVSR0VfREVMRVRFX0NIRUNLEAYqqgEKD0dyb3VwaW5nU2V0S2luZBIfChtHUk9VUElOR19TRVRfS0lORF9VTkRFRklORUQQABIWChJHUk9VUElOR19TRVRfRU1QVFkQARIXChNHUk9VUElOR19TRVRfU0lNUExFEAISFwoTR1JPVVBJTkdfU0VUX1JPTExVUBADEhUKEUdST1VQSU5HX1NFVF9DVUJFEAQSFQoRR1JPVVBJTkdfU0VUX1NFVFMQBSp8Cg5DVEVNYXRlcmlhbGl6ZRIcChhDVEVNQVRFUklBTElaRV9VTkRFRklORUQQABIZChVDVEVNYXRlcmlhbGl6ZURlZmF1bHQQARIYChRDVEVNYXRlcmlhbGl6ZUFsd2F5cxACEhcKE0NURU1hdGVyaWFsaXplTmV2ZXIQAypzCgxTZXRPcGVyYXRpb24SGwoXU0VUX09QRVJBVElPTl9VTkRFRklORUQQABIOCgpTRVRPUF9OT05FEAESDwoLU0VUT1BfVU5JT04QAhITCg9TRVRPUF9JTlRFUlNFQ1QQAxIQCgxTRVRPUF9FWENFUFQQBCqZCQoKT2JqZWN0VHlwZRIZChVPQkpFQ1RfVFlQRV9VTkRFRklORUQQABIYChRPQkpFQ1RfQUNDRVNTX01FVEhPRBABEhQKEE9CSkVDVF9BR0dSRUdBVEUQAhIPCgtPQkpFQ1RfQU1PUBADEhEKDU9CSkVDVF9BTVBST0MQBBIUChBPQkpFQ1RfQVRUUklCVVRFEAUSDwoLT0JKRUNUX0NBU1QQBhIRCg1PQkpFQ1RfQ09MVU1OEAcSFAoQT0JKRUNUX0NPTExBVElPThAIEhUKEU9CSkVDVF9DT05WRVJTSU9OEAkSEwoPT0JKRUNUX0RBVEFCQVNFEAoSEgoOT0JKRUNUX0RFRkFVTFQQCxIRCg1PQkpFQ1RfREVGQUNMEAwSEQoNT0JKRUNUX0RPTUFJThANEhgKFE9CSkVDVF9ET01DT05TVFJBSU5UEA4SGAoUT0JKRUNUX0VWRU5UX1RSSUdHRVIQDxIUChBPQkpFQ1RfRVhURU5TSU9OEBASDgoKT0JKRUNUX0ZEVxAREhkKFU9CSkVDVF9GT1JFSUdOX1NFUlZFUhASEhgKFE9CSkVDVF9GT1JFSUdOX1RBQkxFEBMSEwoPT0JKRUNUX0ZVTkNUSU9OEBQSEAoMT0JKRUNUX0lOREVYEBUSEwoPT0JKRUNUX0xBTkdVQUdFEBYSFgoST0JKRUNUX0xBUkdFT0JKRUNUEBcSEgoOT0JKRUNUX01BVFZJRVcQGBISCg5PQkpFQ1RfT1BDTEFTUxAZEhMKD09CSkVDVF9PUEVSQVRPUhAaEhMKD09CSkVDVF9PUEZBTUlMWRAbEhgKFE9CSkVDVF9QQVJBTUVURVJfQUNMEBwSEQoNT0JKRUNUX1BPTElDWRAdEhQKEE9CSkVDVF9QUk9DRURVUkUQHhIWChJPQkpFQ1RfUFVCTElDQVRJT04QHxIgChxPQkpFQ1RfUFVCTElDQVRJT05fTkFNRVNQQUNFECASGgoWT0JKRUNUX1BVQkxJQ0FUSU9OX1JFTBAhEg8KC09CSkVDVF9ST0xFECISEgoOT0JKRUNUX1JPVVRJTkUQIxIPCgtPQkpFQ1RfUlVMRRAkEhEKDU9CSkVDVF9TQ0hFTUEQJRITCg9PQkpFQ1RfU0VRVUVOQ0UQJhIXChNPQkpFQ1RfU1VCU0NSSVBUSU9OECcSGAoUT0JKRUNUX1NUQVRJU1RJQ19FWFQQKBIYChRPQkpFQ1RfVEFCQ09OU1RSQUlOVBApEhAKDE9CSkVDVF9UQUJMRRAqEhUKEU9CSkVDVF9UQUJMRVNQQUNFECsSFAoQT0JKRUNUX1RSQU5TRk9STRAsEhIKDk9CSkVDVF9UUklHR0VSEC0SGgoWT0JKRUNUX1RTQ09ORklHVVJBVElPThAuEhcKE09CSkVDVF9UU0RJQ1RJT05BUlkQLxITCg9PQkpFQ1RfVFNQQVJTRVIQMBIVChFPQkpFQ1RfVFNURU1QTEFURRAxEg8KC09CSkVDVF9UWVBFEDISFwoTT0JKRUNUX1VTRVJfTUFQUElORxAzEg8KC09CSkVDVF9WSUVXEDQqUAoMRHJvcEJlaGF2aW9yEhsKF0RST1BfQkVIQVZJT1JfVU5ERUZJTkVEEAASEQoNRFJPUF9SRVNUUklDVBABEhAKDERST1BfQ0FTQ0FERRACKvYLCg5BbHRlclRhYmxlVHlwZRIeChpBTFRFUl9UQUJMRV9UWVBFX1VOREVGSU5FRBAAEhAKDEFUX0FkZENvbHVtbhABEhYKEkFUX0FkZENvbHVtblRvVmlldxACEhQKEEFUX0NvbHVtbkRlZmF1bHQQAxIaChZBVF9Db29rZWRDb2x1bW5EZWZhdWx0EAQSEgoOQVRfRHJvcE5vdE51bGwQBRIRCg1BVF9TZXROb3ROdWxsEAYSFQoRQVRfRHJvcEV4cHJlc3Npb24QBxITCg9BVF9DaGVja05vdE51bGwQCBIUChBBVF9TZXRTdGF0aXN0aWNzEAkSEQoNQVRfU2V0T3B0aW9ucxAKEhMKD0FUX1Jlc2V0T3B0aW9ucxALEhEKDUFUX1NldFN0b3JhZ2UQDBIVChFBVF9TZXRDb21wcmVzc2lvbhANEhEKDUFUX0Ryb3BDb2x1bW4QDhIPCgtBVF9BZGRJbmRleBAPEhEKDUFUX1JlQWRkSW5kZXgQEBIUChBBVF9BZGRDb25zdHJhaW50EBESFgoSQVRfUmVBZGRDb25zdHJhaW50EBISHAoYQVRfUmVBZGREb21haW5Db25zdHJhaW50EBMSFgoSQVRfQWx0ZXJDb25zdHJhaW50EBQSGQoVQVRfVmFsaWRhdGVDb25zdHJhaW50EBUSGQoVQVRfQWRkSW5kZXhDb25zdHJhaW50EBYSFQoRQVRfRHJvcENvbnN0cmFpbnQQFxITCg9BVF9SZUFkZENvbW1lbnQQGBIWChJBVF9BbHRlckNvbHVtblR5cGUQGRIgChxBVF9BbHRlckNvbHVtbkdlbmVyaWNPcHRpb25zEBoSEgoOQVRfQ2hhbmdlT3duZXIQGxIQCgxBVF9DbHVzdGVyT24QHBISCg5BVF9Ecm9wQ2x1c3RlchAdEhAKDEFUX1NldExvZ2dlZBAeEhIKDkFUX1NldFVuTG9nZ2VkEB8SDwoLQVRfRHJvcE9pZHMQIBIWChJBVF9TZXRBY2Nlc3NNZXRob2QQIRIUChBBVF9TZXRUYWJsZVNwYWNlECISFAoQQVRfU2V0UmVsT3B0aW9ucxAjEhYKEkFUX1Jlc2V0UmVsT3B0aW9ucxAkEhgKFEFUX1JlcGxhY2VSZWxPcHRpb25zECUSEQoNQVRfRW5hYmxlVHJpZxAmEhcKE0FUX0VuYWJsZUFsd2F5c1RyaWcQJxIYChRBVF9FbmFibGVSZXBsaWNhVHJpZxAoEhIKDkFUX0Rpc2FibGVUcmlnECkSFAoQQVRfRW5hYmxlVHJpZ0FsbBAqEhUKEUFUX0Rpc2FibGVUcmlnQWxsECsSFQoRQVRfRW5hYmxlVHJpZ1VzZXIQLBIWChJBVF9EaXNhYmxlVHJpZ1VzZXIQLRIRCg1BVF9FbmFibGVSdWxlEC4SFwoTQVRfRW5hYmxlQWx3YXlzUnVsZRAvEhgKFEFUX0VuYWJsZVJlcGxpY2FSdWxlEDASEgoOQVRfRGlzYWJsZVJ1bGUQMRIRCg1BVF9BZGRJbmhlcml0EDISEgoOQVRfRHJvcEluaGVyaXQQMxIMCghBVF9BZGRPZhA0Eg0KCUFUX0Ryb3BPZhA1EhYKEkFUX1JlcGxpY2FJZGVudGl0eRA2EhgKFEFUX0VuYWJsZVJvd1NlY3VyaXR5EDcSGQoVQVRfRGlzYWJsZVJvd1NlY3VyaXR5EDgSFwoTQVRfRm9yY2VSb3dTZWN1cml0eRA5EhkKFUFUX05vRm9yY2VSb3dTZWN1cml0eRA6EhUKEUFUX0dlbmVyaWNPcHRpb25zEDsSFgoSQVRfQXR0YWNoUGFydGl0aW9uEDwSFgoSQVRfRGV0YWNoUGFydGl0aW9uED0SHgoaQVRfRGV0YWNoUGFydGl0aW9uRmluYWxpemUQPhISCg5BVF9BZGRJZGVudGl0eRA/EhIKDkFUX1NldElkZW50aXR5EEASEwoPQVRfRHJvcElkZW50aXR5EEESFgoSQVRfUmVBZGRTdGF0aXN0aWNzEEIqgAEKD0dyYW50VGFyZ2V0VHlwZRIfChtHUkFOVF9UQVJHRVRfVFlQRV9VTkRFRklORUQQABIVChFBQ0xfVEFSR0VUX09CSkVDVBABEhwKGEFDTF9UQVJHRVRfQUxMX0lOX1NDSEVNQRACEhcKE0FDTF9UQVJHRVRfREVGQVVMVFMQAyqkAQoPVmFyaWFibGVTZXRLaW5kEh8KG1ZBUklBQkxFX1NFVF9LSU5EX1VOREVGSU5FRBAAEhEKDVZBUl9TRVRfVkFMVUUQARITCg9WQVJfU0VUX0RFRkFVTFQQAhITCg9WQVJfU0VUX0NVUlJFTlQQAxIRCg1WQVJfU0VUX01VTFRJEAQSDQoJVkFSX1JFU0VUEAUSEQoNVkFSX1JFU0VUX0FMTBAGKt8CCgpDb25zdHJUeXBlEhkKFUNPTlNUUl9UWVBFX1VOREVGSU5FRBAAEg8KC0NPTlNUUl9OVUxMEAESEgoOQ09OU1RSX05PVE5VTEwQAhISCg5DT05TVFJfREVGQVVMVBADEhMKD0NPTlNUUl9JREVOVElUWRAEEhQKEENPTlNUUl9HRU5FUkFURUQQBRIQCgxDT05TVFJfQ0hFQ0sQBhISCg5DT05TVFJfUFJJTUFSWRAHEhEKDUNPTlNUUl9VTklRVUUQCBIUChBDT05TVFJfRVhDTFVTSU9OEAkSEgoOQ09OU1RSX0ZPUkVJR04QChIaChZDT05TVFJfQVRUUl9ERUZFUlJBQkxFEAsSHgoaQ09OU1RSX0FUVFJfTk9UX0RFRkVSUkFCTEUQDBIYChRDT05TVFJfQVRUUl9ERUZFUlJFRBANEhkKFUNPTlNUUl9BVFRSX0lNTUVESUFURRAOKpwBChdJbXBvcnRGb3JlaWduU2NoZW1hVHlwZRIoCiRJTVBPUlRfRk9SRUlHTl9TQ0hFTUFfVFlQRV9VTkRFRklORUQQABIZChVGRFdfSU1QT1JUX1NDSEVNQV9BTEwQARIeChpGRFdfSU1QT1JUX1NDSEVNQV9MSU1JVF9UTxACEhwKGEZEV19JTVBPUlRfU0NIRU1BX0VYQ0VQVBADKmYKDFJvbGVTdG10VHlwZRIcChhST0xFX1NUTVRfVFlQRV9VTkRFRklORUQQABIRCg1ST0xFU1RNVF9ST0xFEAESEQoNUk9MRVNUTVRfVVNFUhACEhIKDlJPTEVTVE1UX0dST1VQEAMqfgoORmV0Y2hEaXJlY3Rpb24SHQoZRkVUQ0hfRElSRUNUSU9OX1VOREVGSU5FRBAAEhEKDUZFVENIX0ZPUldBUkQQARISCg5GRVRDSF9CQUNLV0FSRBACEhIKDkZFVENIX0FCU09MVVRFEAMSEgoORkVUQ0hfUkVMQVRJVkUQBCrCAQoVRnVuY3Rpb25QYXJhbWV0ZXJNb2RlEiUKIUZVTkNUSU9OX1BBUkFNRVRFUl9NT0RFX1VOREVGSU5FRBAAEhEKDUZVTkNfUEFSQU1fSU4QARISCg5GVU5DX1BBUkFNX09VVBACEhQKEEZVTkNfUEFSQU1fSU5PVVQQAxIXChNGVU5DX1BBUkFNX1ZBUklBRElDEAQSFAoQRlVOQ19QQVJBTV9UQUJMRRAFEhYKEkZVTkNfUEFSQU1fREVGQVVMVBAGKr4CChNUcmFuc2FjdGlvblN0bXRLaW5kEiMKH1RSQU5TQUNUSU9OX1NUTVRfS0lORF9VTkRFRklORUQQABIUChBUUkFOU19TVE1UX0JFR0lOEAESFAoQVFJBTlNfU1RNVF9TVEFSVBACEhUKEVRSQU5TX1NUTVRfQ09NTUlUEAMSFwoTVFJBTlNfU1RNVF9ST0xMQkFDSxAEEhgKFFRSQU5TX1NUTVRfU0FWRVBPSU5UEAUSFgoSVFJBTlNfU1RNVF9SRUxFQVNFEAYSGgoWVFJBTlNfU1RNVF9ST0xMQkFDS19UTxAHEhYKElRSQU5TX1NUTVRfUFJFUEFSRRAIEh4KGlRSQU5TX1NUTVRfQ09NTUlUX1BSRVBBUkVEEAkSIAocVFJBTlNfU1RNVF9ST0xMQkFDS19QUkVQQVJFRBAKKnoKD1ZpZXdDaGVja09wdGlvbhIfChtWSUVXX0NIRUNLX09QVElPTl9VTkRFRklORUQQABITCg9OT19DSEVDS19PUFRJT04QARIWChJMT0NBTF9DSEVDS19PUFRJT04QAhIZChVDQVNDQURFRF9DSEVDS19PUFRJT04QAyp2CgtEaXNjYXJkTW9kZRIaChZESVNDQVJEX01PREVfVU5ERUZJTkVEEAASDwoLRElTQ0FSRF9BTEwQARIRCg1ESVNDQVJEX1BMQU5TEAISFQoRRElTQ0FSRF9TRVFVRU5DRVMQAxIQCgxESVNDQVJEX1RFTVAQBCq9AQoRUmVpbmRleE9iamVjdFR5cGUSIQodUkVJTkRFWF9PQkpFQ1RfVFlQRV9VTkRFRklORUQQABIYChRSRUlOREVYX09CSkVDVF9JTkRFWBABEhgKFFJFSU5ERVhfT0JKRUNUX1RBQkxFEAISGQoVUkVJTkRFWF9PQkpFQ1RfU0NIRU1BEAMSGQoVUkVJTkRFWF9PQkpFQ1RfU1lTVEVNEAQSGwoXUkVJTkRFWF9PQkpFQ1RfREFUQUJBU0UQBSrvAQoRQWx0ZXJUU0NvbmZpZ1R5cGUSIQodQUxURVJfVFNDT05GSUdfVFlQRV9VTkRFRklORUQQABIeChpBTFRFUl9UU0NPTkZJR19BRERfTUFQUElORxABEioKJkFMVEVSX1RTQ09ORklHX0FMVEVSX01BUFBJTkdfRk9SX1RPS0VOEAISHwobQUxURVJfVFNDT05GSUdfUkVQTEFDRV9ESUNUEAMSKQolQUxURVJfVFNDT05GSUdfUkVQTEFDRV9ESUNUX0ZPUl9UT0tFThAEEh8KG0FMVEVSX1RTQ09ORklHX0RST1BfTUFQUElORxAFKsoBChZQdWJsaWNhdGlvbk9ialNwZWNUeXBlEicKI1BVQkxJQ0FUSU9OX09CSl9TUEVDX1RZUEVfVU5ERUZJTkVEEAASGAoUUFVCTElDQVRJT05PQkpfVEFCTEUQARIjCh9QVUJMSUNBVElPTk9CSl9UQUJMRVNfSU5fU0NIRU1BEAISJwojUFVCTElDQVRJT05PQkpfVEFCTEVTX0lOX0NVUl9TQ0hFTUEQAxIfChtQVUJMSUNBVElPTk9CSl9DT05USU5VQVRJT04QBCp6ChZBbHRlclB1YmxpY2F0aW9uQWN0aW9uEiYKIkFMVEVSX1BVQkxJQ0FUSU9OX0FDVElPTl9VTkRFRklORUQQABIRCg1BUF9BZGRPYmplY3RzEAESEgoOQVBfRHJvcE9iamVjdHMQAhIRCg1BUF9TZXRPYmplY3RzEAMq1wIKFUFsdGVyU3Vic2NyaXB0aW9uVHlwZRIlCiFBTFRFUl9TVUJTQ1JJUFRJT05fVFlQRV9VTkRFRklORUQQABIeChpBTFRFUl9TVUJTQ1JJUFRJT05fT1BUSU9OUxABEiEKHUFMVEVSX1NVQlNDUklQVElPTl9DT05ORUNUSU9OEAISJgoiQUxURVJfU1VCU0NSSVBUSU9OX1NFVF9QVUJMSUNBVElPThADEiYKIkFMVEVSX1NVQlNDUklQVElPTl9BRERfUFVCTElDQVRJT04QBBInCiNBTFRFUl9TVUJTQ1JJUFRJT05fRFJPUF9QVUJMSUNBVElPThAFEh4KGkFMVEVSX1NVQlNDUklQVElPTl9SRUZSRVNIEAYSHgoaQUxURVJfU1VCU0NSSVBUSU9OX0VOQUJMRUQQBxIbChdBTFRFUl9TVUJTQ1JJUFRJT05fU0tJUBAIKowBCg5PbkNvbW1pdEFjdGlvbhIeChpPTl9DT01NSVRfQUNUSU9OX1VOREVGSU5FRBAAEhEKDU9OQ09NTUlUX05PT1AQARIaChZPTkNPTU1JVF9QUkVTRVJWRV9ST1dTEAISGAoUT05DT01NSVRfREVMRVRFX1JPV1MQAxIRCg1PTkNPTU1JVF9EUk9QEAQqbwoJUGFyYW1LaW5kEhgKFFBBUkFNX0tJTkRfVU5ERUZJTkVEEAASEAoMUEFSQU1fRVhURVJOEAESDgoKUEFSQU1fRVhFQxACEhEKDVBBUkFNX1NVQkxJTksQAxITCg9QQVJBTV9NVUxUSUVYUFIQBCqOAQoPQ29lcmNpb25Db250ZXh0Eh4KGkNPRVJDSU9OX0NPTlRFWFRfVU5ERUZJTkVEEAASFQoRQ09FUkNJT05fSU1QTElDSVQQARIXChNDT0VSQ0lPTl9BU1NJR05NRU5UEAISFAoQQ09FUkNJT05fUExQR1NRTBADEhUKEUNPRVJDSU9OX0VYUExJQ0lUEAQqkAEKDENvZXJjaW9uRm9ybRIbChdDT0VSQ0lPTl9GT1JNX1VOREVGSU5FRBAAEhgKFENPRVJDRV9FWFBMSUNJVF9DQUxMEAESGAoUQ09FUkNFX0VYUExJQ0lUX0NBU1QQAhIYChRDT0VSQ0VfSU1QTElDSVRfQ0FTVBADEhUKEUNPRVJDRV9TUUxfU1lOVEFYEAQqVQoMQm9vbEV4cHJUeXBlEhwKGEJPT0xfRVhQUl9UWVBFX1VOREVGSU5FRBAAEgwKCEFORF9FWFBSEAESCwoHT1JfRVhQUhACEgwKCE5PVF9FWFBSEAMqxQEKC1N1YkxpbmtUeXBlEhsKF1NVQl9MSU5LX1RZUEVfVU5ERUZJTkVEEAASEgoORVhJU1RTX1NVQkxJTksQARIPCgtBTExfU1VCTElOSxACEg8KC0FOWV9TVUJMSU5LEAMSFgoSUk9XQ09NUEFSRV9TVUJMSU5LEAQSEAoMRVhQUl9TVUJMSU5LEAUSFQoRTVVMVElFWFBSX1NVQkxJTksQBhIRCg1BUlJBWV9TVUJMSU5LEAcSDwoLQ1RFX1NVQkxJTksQCCqiAQoOUm93Q29tcGFyZVR5cGUSHgoaUk9XX0NPTVBBUkVfVFlQRV9VTkRFRklORUQQABIRCg1ST1dDT01QQVJFX0xUEAESEQoNUk9XQ09NUEFSRV9MRRACEhEKDVJPV0NPTVBBUkVfRVEQAxIRCg1ST1dDT01QQVJFX0dFEAQSEQoNUk9XQ09NUEFSRV9HVBAFEhEKDVJPV0NPTVBBUkVfTkUQBipDCghNaW5NYXhPcBIYChRNSU5fTUFYX09QX1VOREVGSU5FRBAAEg8KC0lTX0dSRUFURVNUEAESDAoISVNfTEVBU1QQAiqtAwoSU1FMVmFsdWVGdW5jdGlvbk9wEiIKHlNRTFZBTFVFX0ZVTkNUSU9OX09QX1VOREVGSU5FRBAAEhYKElNWRk9QX0NVUlJFTlRfREFURRABEhYKElNWRk9QX0NVUlJFTlRfVElNRRACEhgKFFNWRk9QX0NVUlJFTlRfVElNRV9OEAMSGwoXU1ZGT1BfQ1VSUkVOVF9USU1FU1RBTVAQBBIdChlTVkZPUF9DVVJSRU5UX1RJTUVTVEFNUF9OEAUSEwoPU1ZGT1BfTE9DQUxUSU1FEAYSFQoRU1ZGT1BfTE9DQUxUSU1FX04QBxIYChRTVkZPUF9MT0NBTFRJTUVTVEFNUBAIEhoKFlNWRk9QX0xPQ0FMVElNRVNUQU1QX04QCRIWChJTVkZPUF9DVVJSRU5UX1JPTEUQChIWChJTVkZPUF9DVVJSRU5UX1VTRVIQCxIOCgpTVkZPUF9VU0VSEAwSFgoSU1ZGT1BfU0VTU0lPTl9VU0VSEA0SGQoVU1ZGT1BfQ1VSUkVOVF9DQVRBTE9HEA4SGAoUU1ZGT1BfQ1VSUkVOVF9TQ0hFTUEQDyqyAQoJWG1sRXhwck9wEhkKFVhNTF9FWFBSX09QX1VOREVGSU5FRBAAEhAKDElTX1hNTENPTkNBVBABEhEKDUlTX1hNTEVMRU1FTlQQAhIQCgxJU19YTUxGT1JFU1QQAxIPCgtJU19YTUxQQVJTRRAEEgwKCElTX1hNTFBJEAUSDgoKSVNfWE1MUk9PVBAGEhMKD0lTX1hNTFNFUklBTElaRRAHEg8KC0lTX0RPQ1VNRU5UEAgqXQoNWG1sT3B0aW9uVHlwZRIdChlYTUxfT1BUSU9OX1RZUEVfVU5ERUZJTkVEEAASFgoSWE1MT1BUSU9OX0RPQ1VNRU5UEAESFQoRWE1MT1BUSU9OX0NPTlRFTlQQAip0CgxKc29uRW5jb2RpbmcSGwoXSlNPTl9FTkNPRElOR19VTkRFRklORUQQABISCg5KU19FTkNfREVGQVVMVBABEg8KC0pTX0VOQ19VVEY4EAISEAoMSlNfRU5DX1VURjE2EAMSEAoMSlNfRU5DX1VURjMyEAQqcAoOSnNvbkZvcm1hdFR5cGUSHgoaSlNPTl9GT1JNQVRfVFlQRV9VTkRFRklORUQQABIVChFKU19GT1JNQVRfREVGQVVMVBABEhIKDkpTX0ZPUk1BVF9KU09OEAISEwoPSlNfRk9STUFUX0pTT05CEAMqngEKE0pzb25Db25zdHJ1Y3RvclR5cGUSIwofSlNPTl9DT05TVFJVQ1RPUl9UWVBFX1VOREVGSU5FRBAAEhYKEkpTQ1RPUl9KU09OX09CSkVDVBABEhUKEUpTQ1RPUl9KU09OX0FSUkFZEAISGQoVSlNDVE9SX0pTT05fT0JKRUNUQUdHEAMSGAoUSlNDVE9SX0pTT05fQVJSQVlBR0cQBCp6Cg1Kc29uVmFsdWVUeXBlEh0KGUpTT05fVkFMVUVfVFlQRV9VTkRFRklORUQQABIPCgtKU19UWVBFX0FOWRABEhIKDkpTX1RZUEVfT0JKRUNUEAISEQoNSlNfVFlQRV9BUlJBWRADEhIKDkpTX1RZUEVfU0NBTEFSEAQqSgoMTnVsbFRlc3RUeXBlEhwKGE5VTExfVEVTVF9UWVBFX1VOREVGSU5FRBAAEgsKB0lTX05VTEwQARIPCgtJU19OT1RfTlVMTBACKo4BCgxCb29sVGVzdFR5cGUSHAoYQk9PTF9URVNUX1RZUEVfVU5ERUZJTkVEEAASCwoHSVNfVFJVRRABEg8KC0lTX05PVF9UUlVFEAISDAoISVNfRkFMU0UQAxIQCgxJU19OT1RfRkFMU0UQBBIOCgpJU19VTktOT1dOEAUSEgoOSVNfTk9UX1VOS05PV04QBiqjAQoHQ21kVHlwZRIWChJDTURfVFlQRV9VTkRFRklORUQQABIPCgtDTURfVU5LTk9XThABEg4KCkNNRF9TRUxFQ1QQAhIOCgpDTURfVVBEQVRFEAMSDgoKQ01EX0lOU0VSVBAEEg4KCkNNRF9ERUxFVEUQBRINCglDTURfTUVSR0UQBhIPCgtDTURfVVRJTElUWRAHEg8KC0NNRF9OT1RISU5HEAgqwgEKCEpvaW5UeXBlEhcKE0pPSU5fVFlQRV9VTkRFRklORUQQABIOCgpKT0lOX0lOTkVSEAESDQoJSk9JTl9MRUZUEAISDQoJSk9JTl9GVUxMEAMSDgoKSk9JTl9SSUdIVBAEEg0KCUpPSU5fU0VNSRAFEg0KCUpPSU5fQU5USRAGEhMKD0pPSU5fUklHSFRfQU5USRAHEhUKEUpPSU5fVU5JUVVFX09VVEVSEAgSFQoRSk9JTl9VTklRVUVfSU5ORVIQCSpnCgtBZ2dTdHJhdGVneRIaChZBR0dfU1RSQVRFR1lfVU5ERUZJTkVEEAASDQoJQUdHX1BMQUlOEAESDgoKQUdHX1NPUlRFRBACEg4KCkFHR19IQVNIRUQQAxINCglBR0dfTUlYRUQQBCpyCghBZ2dTcGxpdBIXChNBR0dfU1BMSVRfVU5ERUZJTkVEEAASEwoPQUdHU1BMSVRfU0lNUExFEAESGwoXQUdHU1BMSVRfSU5JVElBTF9TRVJJQUwQAhIbChdBR0dTUExJVF9GSU5BTF9ERVNFUklBTBADKoYBCghTZXRPcENtZBIYChRTRVRfT1BfQ01EX1VOREVGSU5FRBAAEhYKElNFVE9QQ01EX0lOVEVSU0VDVBABEhoKFlNFVE9QQ01EX0lOVEVSU0VDVF9BTEwQAhITCg9TRVRPUENNRF9FWENFUFQQAxIXChNTRVRPUENNRF9FWENFUFRfQUxMEAQqUgoNU2V0T3BTdHJhdGVneRIdChlTRVRfT1BfU1RSQVRFR1lfVU5ERUZJTkVEEAASEAoMU0VUT1BfU09SVEVEEAESEAoMU0VUT1BfSEFTSEVEEAIqeAoQT25Db25mbGljdEFjdGlvbhIgChxPTl9DT05GTElDVF9BQ1RJT05fVU5ERUZJTkVEEAASEwoPT05DT05GTElDVF9OT05FEAESFgoST05DT05GTElDVF9OT1RISU5HEAISFQoRT05DT05GTElDVF9VUERBVEUQAyp3CgtMaW1pdE9wdGlvbhIaChZMSU1JVF9PUFRJT05fVU5ERUZJTkVEEAASGAoUTElNSVRfT1BUSU9OX0RFRkFVTFQQARIWChJMSU1JVF9PUFRJT05fQ09VTlQQAhIaChZMSU1JVF9PUFRJT05fV0lUSF9USUVTEAMqmAEKEkxvY2tDbGF1c2VTdHJlbmd0aBIiCh5MT0NLX0NMQVVTRV9TVFJFTkdUSF9VTkRFRklORUQQABIMCghMQ1NfTk9ORRABEhMKD0xDU19GT1JLRVlTSEFSRRACEhAKDExDU19GT1JTSEFSRRADEhYKEkxDU19GT1JOT0tFWVVQREFURRAEEhEKDUxDU19GT1JVUERBVEUQBSpoCg5Mb2NrV2FpdFBvbGljeRIeChpMT0NLX1dBSVRfUE9MSUNZX1VOREVGSU5FRBAAEhEKDUxvY2tXYWl0QmxvY2sQARIQCgxMb2NrV2FpdFNraXAQAhIRCg1Mb2NrV2FpdEVycm9yEAMqjgEKDUxvY2tUdXBsZU1vZGUSHQoZTE9DS19UVVBMRV9NT0RFX1VOREVGSU5FRBAAEhUKEUxvY2tUdXBsZUtleVNoYXJlEAESEgoOTG9ja1R1cGxlU2hhcmUQAhIbChdMb2NrVHVwbGVOb0tleUV4Y2x1c2l2ZRADEhYKEkxvY2tUdXBsZUV4Y2x1c2l2ZRAEKn0KC0tleXdvcmRLaW5kEg4KCk5PX0tFWVdPUkQQABIWChJVTlJFU0VSVkVEX0tFWVdPUkQQARIUChBDT0xfTkFNRV9LRVlXT1JEEAISGgoWVFlQRV9GVU5DX05BTUVfS0VZV09SRBADEhQKEFJFU0VSVkVEX0tFWVdPUkQQBCq4OQoFVG9rZW4SBwoDTlVMEAASDAoIQVNDSUlfMzYQJBIMCghBU0NJSV8zNxAlEgwKCEFTQ0lJXzQwECgSDAoIQVNDSUlfNDEQKRIMCghBU0NJSV80MhAqEgwKCEFTQ0lJXzQzECsSDAoIQVNDSUlfNDQQLBIMCghBU0NJSV80NRAtEgwKCEFTQ0lJXzQ2EC4SDAoIQVNDSUlfNDcQLxIMCghBU0NJSV81OBA6EgwKCEFTQ0lJXzU5EDsSDAoIQVNDSUlfNjAQPBIMCghBU0NJSV82MRA9EgwKCEFTQ0lJXzYyED4SDAoIQVNDSUlfNjMQPxIMCghBU0NJSV85MRBbEgwKCEFTQ0lJXzkyEFwSDAoIQVNDSUlfOTMQXRIMCghBU0NJSV85NBBeEgoKBUlERU5UEIICEgsKBlVJREVOVBCDAhILCgZGQ09OU1QQhAISCwoGU0NPTlNUEIUCEgwKB1VTQ09OU1QQhgISCwoGQkNPTlNUEIcCEgsKBlhDT05TVBCIAhIHCgJPcBCJAhILCgZJQ09OU1QQigISCgoFUEFSQU0QiwISDQoIVFlQRUNBU1QQjAISDAoHRE9UX0RPVBCNAhIRCgxDT0xPTl9FUVVBTFMQjgISEwoORVFVQUxTX0dSRUFURVIQjwISEAoLTEVTU19FUVVBTFMQkAISEwoOR1JFQVRFUl9FUVVBTFMQkQISDwoKTk9UX0VRVUFMUxCSAhIQCgtTUUxfQ09NTUVOVBCTAhIOCglDX0NPTU1FTlQQlAISDAoHQUJPUlRfUBCVAhILCgZBQlNFTlQQlgISDwoKQUJTT0xVVEVfUBCXAhILCgZBQ0NFU1MQmAISCwoGQUNUSU9OEJkCEgoKBUFERF9QEJoCEgoKBUFETUlOEJsCEgoKBUFGVEVSEJwCEg4KCUFHR1JFR0FURRCdAhIICgNBTEwQngISCQoEQUxTTxCfAhIKCgVBTFRFUhCgAhILCgZBTFdBWVMQoQISDAoHQU5BTFlTRRCiAhIMCgdBTkFMWVpFEKMCEggKA0FORBCkAhIICgNBTlkQpQISCgoFQVJSQVkQpgISBwoCQVMQpwISCAoDQVNDEKgCEg8KCkFTRU5TSVRJVkUQqQISDgoJQVNTRVJUSU9OEKoCEg8KCkFTU0lHTk1FTlQQqwISDwoKQVNZTU1FVFJJQxCsAhILCgZBVE9NSUMQrQISBwoCQVQQrgISCwoGQVRUQUNIEK8CEg4KCUFUVFJJQlVURRCwAhISCg1BVVRIT1JJWkFUSU9OELECEg0KCEJBQ0tXQVJEELICEgsKBkJFRk9SRRCzAhIMCgdCRUdJTl9QELQCEgwKB0JFVFdFRU4QtQISCwoGQklHSU5UELYCEgsKBkJJTkFSWRC3AhIICgNCSVQQuAISDgoJQk9PTEVBTl9QELkCEgkKBEJPVEgQugISDAoHQlJFQURUSBC7AhIHCgJCWRC8AhIKCgVDQUNIRRC9AhIJCgRDQUxMEL4CEgsKBkNBTExFRBC/AhIMCgdDQVNDQURFEMACEg0KCENBU0NBREVEEMECEgkKBENBU0UQwgISCQoEQ0FTVBDDAhIOCglDQVRBTE9HX1AQxAISCgoFQ0hBSU4QxQISCwoGQ0hBUl9QEMYCEg4KCUNIQVJBQ1RFUhDHAhIUCg9DSEFSQUNURVJJU1RJQ1MQyAISCgoFQ0hFQ0sQyQISDwoKQ0hFQ0tQT0lOVBDKAhIKCgVDTEFTUxDLAhIKCgVDTE9TRRDMAhIMCgdDTFVTVEVSEM0CEg0KCENPQUxFU0NFEM4CEgwKB0NPTExBVEUQzwISDgoJQ09MTEFUSU9OENACEgsKBkNPTFVNThDRAhIMCgdDT0xVTU5TENICEgwKB0NPTU1FTlQQ0wISDQoIQ09NTUVOVFMQ1AISCwoGQ09NTUlUENUCEg4KCUNPTU1JVFRFRBDWAhIQCgtDT01QUkVTU0lPThDXAhIRCgxDT05DVVJSRU5UTFkQ2AISEgoNQ09ORklHVVJBVElPThDZAhINCghDT05GTElDVBDaAhIPCgpDT05ORUNUSU9OENsCEg8KCkNPTlNUUkFJTlQQ3AISEAoLQ09OU1RSQUlOVFMQ3QISDgoJQ09OVEVOVF9QEN4CEg8KCkNPTlRJTlVFX1AQ3wISEQoMQ09OVkVSU0lPTl9QEOACEgkKBENPUFkQ4QISCQoEQ09TVBDiAhILCgZDUkVBVEUQ4wISCgoFQ1JPU1MQ5AISCAoDQ1NWEOUCEgkKBENVQkUQ5gISDgoJQ1VSUkVOVF9QEOcCEhQKD0NVUlJFTlRfQ0FUQUxPRxDoAhIRCgxDVVJSRU5UX0RBVEUQ6QISEQoMQ1VSUkVOVF9ST0xFEOoCEhMKDkNVUlJFTlRfU0NIRU1BEOsCEhEKDENVUlJFTlRfVElNRRDsAhIWChFDVVJSRU5UX1RJTUVTVEFNUBDtAhIRCgxDVVJSRU5UX1VTRVIQ7gISCwoGQ1VSU09SEO8CEgoKBUNZQ0xFEPACEgsKBkRBVEFfUBDxAhINCghEQVRBQkFTRRDyAhIKCgVEQVlfUBDzAhIPCgpERUFMTE9DQVRFEPQCEggKA0RFQxD1AhIOCglERUNJTUFMX1AQ9gISDAoHREVDTEFSRRD3AhIMCgdERUZBVUxUEPgCEg0KCERFRkFVTFRTEPkCEg8KCkRFRkVSUkFCTEUQ+gISDQoIREVGRVJSRUQQ+wISDAoHREVGSU5FUhD8AhINCghERUxFVEVfUBD9AhIOCglERUxJTUlURVIQ/gISDwoKREVMSU1JVEVSUxD/AhIMCgdERVBFTkRTEIADEgoKBURFUFRIEIEDEgkKBERFU0MQggMSCwoGREVUQUNIEIMDEg8KCkRJQ1RJT05BUlkQhAMSDgoJRElTQUJMRV9QEIUDEgwKB0RJU0NBUkQQhgMSDQoIRElTVElOQ1QQhwMSBwoCRE8QiAMSDwoKRE9DVU1FTlRfUBCJAxINCghET01BSU5fUBCKAxINCghET1VCTEVfUBCLAxIJCgREUk9QEIwDEgkKBEVBQ0gQjQMSCQoERUxTRRCOAxINCghFTkFCTEVfUBCPAxINCghFTkNPRElORxCQAxIOCglFTkNSWVBURUQQkQMSCgoFRU5EX1AQkgMSCwoGRU5VTV9QEJMDEgsKBkVTQ0FQRRCUAxIKCgVFVkVOVBCVAxILCgZFWENFUFQQlgMSDAoHRVhDTFVERRCXAxIOCglFWENMVURJTkcQmAMSDgoJRVhDTFVTSVZFEJkDEgwKB0VYRUNVVEUQmgMSCwoGRVhJU1RTEJsDEgwKB0VYUExBSU4QnAMSDwoKRVhQUkVTU0lPThCdAxIOCglFWFRFTlNJT04QngMSDQoIRVhURVJOQUwQnwMSDAoHRVhUUkFDVBCgAxIMCgdGQUxTRV9QEKEDEgsKBkZBTUlMWRCiAxIKCgVGRVRDSBCjAxILCgZGSUxURVIQpAMSDQoIRklOQUxJWkUQpQMSDAoHRklSU1RfUBCmAxIMCgdGTE9BVF9QEKcDEg4KCUZPTExPV0lORxCoAxIICgNGT1IQqQMSCgoFRk9SQ0UQqgMSDAoHRk9SRUlHThCrAxILCgZGT1JNQVQQrAMSDAoHRk9SV0FSRBCtAxILCgZGUkVFWkUQrgMSCQoERlJPTRCvAxIJCgRGVUxMELADEg0KCEZVTkNUSU9OELEDEg4KCUZVTkNUSU9OUxCyAxIOCglHRU5FUkFURUQQswMSCwoGR0xPQkFMELQDEgoKBUdSQU5UELUDEgwKB0dSQU5URUQQtgMSDQoIR1JFQVRFU1QQtwMSDAoHR1JPVVBfUBC4AxINCghHUk9VUElORxC5AxILCgZHUk9VUFMQugMSDAoHSEFORExFUhC7AxILCgZIQVZJTkcQvAMSDQoISEVBREVSX1AQvQMSCQoESE9MRBC+AxILCgZIT1VSX1AQvwMSDwoKSURFTlRJVFlfUBDAAxIJCgRJRl9QEMEDEgoKBUlMSUtFEMIDEg4KCUlNTUVESUFURRDDAxIOCglJTU1VVEFCTEUQxAMSDwoKSU1QTElDSVRfUBDFAxINCghJTVBPUlRfUBDGAxIJCgRJTl9QEMcDEgwKB0lOQ0xVREUQyAMSDgoJSU5DTFVESU5HEMkDEg4KCUlOQ1JFTUVOVBDKAxILCgZJTkRFTlQQywMSCgoFSU5ERVgQzAMSDAoHSU5ERVhFUxDNAxIMCgdJTkhFUklUEM4DEg0KCElOSEVSSVRTEM8DEg4KCUlOSVRJQUxMWRDQAxINCghJTkxJTkVfUBDRAxIMCgdJTk5FUl9QENIDEgoKBUlOT1VUENMDEgwKB0lOUFVUX1AQ1AMSEAoLSU5TRU5TSVRJVkUQ1QMSCwoGSU5TRVJUENYDEgwKB0lOU1RFQUQQ1wMSCgoFSU5UX1AQ2AMSDAoHSU5URUdFUhDZAxIOCglJTlRFUlNFQ1QQ2gMSDQoISU5URVJWQUwQ2wMSCQoESU5UTxDcAxIMCgdJTlZPS0VSEN0DEgcKAklTEN4DEgsKBklTTlVMTBDfAxIOCglJU09MQVRJT04Q4AMSCQoESk9JThDhAxIJCgRKU09OEOIDEg8KCkpTT05fQVJSQVkQ4wMSEgoNSlNPTl9BUlJBWUFHRxDkAxIQCgtKU09OX09CSkVDVBDlAxITCg5KU09OX09CSkVDVEFHRxDmAxIICgNLRVkQ5wMSCQoES0VZUxDoAxIKCgVMQUJFTBDpAxINCghMQU5HVUFHRRDqAxIMCgdMQVJHRV9QEOsDEgsKBkxBU1RfUBDsAxIOCglMQVRFUkFMX1AQ7QMSDAoHTEVBRElORxDuAxIOCglMRUFLUFJPT0YQ7wMSCgoFTEVBU1QQ8AMSCQoETEVGVBDxAxIKCgVMRVZFTBDyAxIJCgRMSUtFEPMDEgoKBUxJTUlUEPQDEgsKBkxJU1RFThD1AxIJCgRMT0FEEPYDEgoKBUxPQ0FMEPcDEg4KCUxPQ0FMVElNRRD4AxITCg5MT0NBTFRJTUVTVEFNUBD5AxINCghMT0NBVElPThD6AxILCgZMT0NLX1AQ+wMSCwoGTE9DS0VEEPwDEgsKBkxPR0dFRBD9AxIMCgdNQVBQSU5HEP4DEgoKBU1BVENIEP8DEgwKB01BVENIRUQQgAQSEQoMTUFURVJJQUxJWkVEEIEEEg0KCE1BWFZBTFVFEIIEEgoKBU1FUkdFEIMEEgsKBk1FVEhPRBCEBBINCghNSU5VVEVfUBCFBBINCghNSU5WQUxVRRCGBBIJCgRNT0RFEIcEEgwKB01PTlRIX1AQiAQSCQoETU9WRRCJBBILCgZOQU1FX1AQigQSCgoFTkFNRVMQiwQSDQoITkFUSU9OQUwQjAQSDAoHTkFUVVJBTBCNBBIKCgVOQ0hBUhCOBBIICgNORVcQjwQSCQoETkVYVBCQBBIICgNORkMQkQQSCAoDTkZEEJIEEgkKBE5GS0MQkwQSCQoETkZLRBCUBBIHCgJOTxCVBBIJCgROT05FEJYEEg4KCU5PUk1BTElaRRCXBBIPCgpOT1JNQUxJWkVEEJgEEggKA05PVBCZBBIMCgdOT1RISU5HEJoEEgsKBk5PVElGWRCbBBIMCgdOT1ROVUxMEJwEEgsKBk5PV0FJVBCdBBILCgZOVUxMX1AQngQSCwoGTlVMTElGEJ8EEgwKB05VTExTX1AQoAQSDAoHTlVNRVJJQxChBBINCghPQkpFQ1RfUBCiBBIHCgJPRhCjBBIICgNPRkYQpAQSCwoGT0ZGU0VUEKUEEgkKBE9JRFMQpgQSCAoDT0xEEKcEEgcKAk9OEKgEEgkKBE9OTFkQqQQSDQoIT1BFUkFUT1IQqgQSCwoGT1BUSU9OEKsEEgwKB09QVElPTlMQrAQSBwoCT1IQrQQSCgoFT1JERVIQrgQSDwoKT1JESU5BTElUWRCvBBILCgZPVEhFUlMQsAQSCgoFT1VUX1AQsQQSDAoHT1VURVJfUBCyBBIJCgRPVkVSELMEEg0KCE9WRVJMQVBTELQEEgwKB09WRVJMQVkQtQQSDwoKT1ZFUlJJRElORxC2BBIKCgVPV05FRBC3BBIKCgVPV05FUhC4BBINCghQQVJBTExFTBC5BBIOCglQQVJBTUVURVIQugQSCwoGUEFSU0VSELsEEgwKB1BBUlRJQUwQvAQSDgoJUEFSVElUSU9OEL0EEgwKB1BBU1NJTkcQvgQSDQoIUEFTU1dPUkQQvwQSDAoHUExBQ0lORxDABBIKCgVQTEFOUxDBBBILCgZQT0xJQ1kQwgQSDQoIUE9TSVRJT04QwwQSDgoJUFJFQ0VESU5HEMQEEg4KCVBSRUNJU0lPThDFBBINCghQUkVTRVJWRRDGBBIMCgdQUkVQQVJFEMcEEg0KCFBSRVBBUkVEEMgEEgwKB1BSSU1BUlkQyQQSCgoFUFJJT1IQygQSDwoKUFJJVklMRUdFUxDLBBIPCgpQUk9DRURVUkFMEMwEEg4KCVBST0NFRFVSRRDNBBIPCgpQUk9DRURVUkVTEM4EEgwKB1BST0dSQU0QzwQSEAoLUFVCTElDQVRJT04Q0AQSCgoFUVVPVEUQ0QQSCgoFUkFOR0UQ0gQSCQoEUkVBRBDTBBIJCgRSRUFMENQEEg0KCFJFQVNTSUdOENUEEgwKB1JFQ0hFQ0sQ1gQSDgoJUkVDVVJTSVZFENcEEgoKBVJFRl9QENgEEg8KClJFRkVSRU5DRVMQ2QQSEAoLUkVGRVJFTkNJTkcQ2gQSDAoHUkVGUkVTSBDbBBIMCgdSRUlOREVYENwEEg8KClJFTEFUSVZFX1AQ3QQSDAoHUkVMRUFTRRDeBBILCgZSRU5BTUUQ3wQSDwoKUkVQRUFUQUJMRRDgBBIMCgdSRVBMQUNFEOEEEgwKB1JFUExJQ0EQ4gQSCgoFUkVTRVQQ4wQSDAoHUkVTVEFSVBDkBBINCghSRVNUUklDVBDlBBILCgZSRVRVUk4Q5gQSDgoJUkVUVVJOSU5HEOcEEgwKB1JFVFVSTlMQ6AQSCwoGUkVWT0tFEOkEEgoKBVJJR0hUEOoEEgkKBFJPTEUQ6wQSDQoIUk9MTEJBQ0sQ7AQSCwoGUk9MTFVQEO0EEgwKB1JPVVRJTkUQ7gQSDQoIUk9VVElORVMQ7wQSCAoDUk9XEPAEEgkKBFJPV1MQ8QQSCQoEUlVMRRDyBBIOCglTQVZFUE9JTlQQ8wQSCwoGU0NBTEFSEPQEEgsKBlNDSEVNQRD1BBIMCgdTQ0hFTUFTEPYEEgsKBlNDUk9MTBD3BBILCgZTRUFSQ0gQ+AQSDQoIU0VDT05EX1AQ+QQSDQoIU0VDVVJJVFkQ+gQSCwoGU0VMRUNUEPsEEg0KCFNFUVVFTkNFEPwEEg4KCVNFUVVFTkNFUxD9BBIRCgxTRVJJQUxJWkFCTEUQ/gQSCwoGU0VSVkVSEP8EEgwKB1NFU1NJT04QgAUSEQoMU0VTU0lPTl9VU0VSEIEFEggKA1NFVBCCBRIJCgRTRVRTEIMFEgoKBVNFVE9GEIQFEgoKBVNIQVJFEIUFEgkKBFNIT1cQhgUSDAoHU0lNSUxBUhCHBRILCgZTSU1QTEUQiAUSCQoEU0tJUBCJBRINCghTTUFMTElOVBCKBRINCghTTkFQU0hPVBCLBRIJCgRTT01FEIwFEgoKBVNRTF9QEI0FEgsKBlNUQUJMRRCOBRIRCgxTVEFOREFMT05FX1AQjwUSCgoFU1RBUlQQkAUSDgoJU1RBVEVNRU5UEJEFEg8KClNUQVRJU1RJQ1MQkgUSCgoFU1RESU4QkwUSCwoGU1RET1VUEJQFEgwKB1NUT1JBR0UQlQUSCwoGU1RPUkVEEJYFEg0KCFNUUklDVF9QEJcFEgwKB1NUUklQX1AQmAUSEQoMU1VCU0NSSVBUSU9OEJkFEg4KCVNVQlNUUklORxCaBRIMCgdTVVBQT1JUEJsFEg4KCVNZTU1FVFJJQxCcBRIKCgVTWVNJRBCdBRINCghTWVNURU1fUBCeBRIQCgtTWVNURU1fVVNFUhCfBRIKCgVUQUJMRRCgBRILCgZUQUJMRVMQoQUSEAoLVEFCTEVTQU1QTEUQogUSDwoKVEFCTEVTUEFDRRCjBRIJCgRURU1QEKQFEg0KCFRFTVBMQVRFEKUFEg4KCVRFTVBPUkFSWRCmBRILCgZURVhUX1AQpwUSCQoEVEhFThCoBRIJCgRUSUVTEKkFEgkKBFRJTUUQqgUSDgoJVElNRVNUQU1QEKsFEgcKAlRPEKwFEg0KCFRSQUlMSU5HEK0FEhAKC1RSQU5TQUNUSU9OEK4FEg4KCVRSQU5TRk9STRCvBRIKCgVUUkVBVBCwBRIMCgdUUklHR0VSELEFEgkKBFRSSU0QsgUSCwoGVFJVRV9QELMFEg0KCFRSVU5DQVRFELQFEgwKB1RSVVNURUQQtQUSCwoGVFlQRV9QELYFEgwKB1RZUEVTX1AQtwUSDAoHVUVTQ0FQRRC4BRIOCglVTkJPVU5ERUQQuQUSEAoLVU5DT01NSVRURUQQugUSEAoLVU5FTkNSWVBURUQQuwUSCgoFVU5JT04QvAUSCwoGVU5JUVVFEL0FEgwKB1VOS05PV04QvgUSDQoIVU5MSVNURU4QvwUSDQoIVU5MT0dHRUQQwAUSCgoFVU5USUwQwQUSCwoGVVBEQVRFEMIFEgkKBFVTRVIQwwUSCgoFVVNJTkcQxAUSCwoGVkFDVVVNEMUFEgoKBVZBTElEEMYFEg0KCFZBTElEQVRFEMcFEg4KCVZBTElEQVRPUhDIBRIMCgdWQUxVRV9QEMkFEgsKBlZBTFVFUxDKBRIMCgdWQVJDSEFSEMsFEg0KCFZBUklBRElDEMwFEgwKB1ZBUllJTkcQzQUSDAoHVkVSQk9TRRDOBRIOCglWRVJTSU9OX1AQzwUSCQoEVklFVxDQBRIKCgVWSUVXUxDRBRINCghWT0xBVElMRRDSBRIJCgRXSEVOENMFEgoKBVdIRVJFENQFEhEKDFdISVRFU1BBQ0VfUBDVBRILCgZXSU5ET1cQ1gUSCQoEV0lUSBDXBRILCgZXSVRISU4Q2AUSDAoHV0lUSE9VVBDZBRIJCgRXT1JLENoFEgwKB1dSQVBQRVIQ2wUSCgoFV1JJVEUQ3AUSCgoFWE1MX1AQ3QUSEgoNWE1MQVRUUklCVVRFUxDeBRIOCglYTUxDT05DQVQQ3wUSDwoKWE1MRUxFTUVOVBDgBRIOCglYTUxFWElTVFMQ4QUSDgoJWE1MRk9SRVNUEOIFEhIKDVhNTE5BTUVTUEFDRVMQ4wUSDQoIWE1MUEFSU0UQ5AUSCgoFWE1MUEkQ5QUSDAoHWE1MUk9PVBDmBRIRCgxYTUxTRVJJQUxJWkUQ5wUSDQoIWE1MVEFCTEUQ6AUSCwoGWUVBUl9QEOkFEgoKBVlFU19QEOoFEgkKBFpPTkUQ6wUSDgoJRk9STUFUX0xBEOwFEgsKBk5PVF9MQRDtBRINCghOVUxMU19MQRDuBRIMCgdXSVRIX0xBEO8FEg8KCldJVEhPVVRfTEEQ8AUSEwoOTU9ERV9UWVBFX05BTUUQ8QUSFgoRTU9ERV9QTFBHU1FMX0VYUFIQ8gUSGQoUTU9ERV9QTFBHU1FMX0FTU0lHTjEQ8wUSGQoUTU9ERV9QTFBHU1FMX0FTU0lHTjIQ9AUSGQoUTU9ERV9QTFBHU1FMX0FTU0lHTjMQ9QUSCwoGVU1JTlVTEPYFQlgKDGNvbS5wZ19xdWVyeUIMUGdRdWVyeVByb3RvUAGiAgNQWFiqAgdQZ1F1ZXJ5ygIHUGdRdWVyeeICE1BnUXVlcnlcR1BCTWV0YWRhdGHqAgdQZ1F1ZXJ5YgZwcm90bzM");

/**
 * @generated from message pg_query.ParseResult
 */
export type ParseResult = Message<"pg_query.ParseResult"> & {
  /**
   * @generated from field: int32 version = 1;
   */
  version: number;

  /**
   * @generated from field: repeated pg_query.RawStmt stmts = 2;
   */
  stmts: RawStmt[];
};

/**
 * @generated from message pg_query.ParseResult
 */
export type ParseResultJson = {
  /**
   * @generated from field: int32 version = 1;
   */
  version?: number;

  /**
   * @generated from field: repeated pg_query.RawStmt stmts = 2;
   */
  stmts?: RawStmtJson[];
};

/**
 * Describes the message pg_query.ParseResult.
 * Use `create(ParseResultSchema)` to create a new message.
 */
export const ParseResultSchema: GenMessage<ParseResult, ParseResultJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 0);

/**
 * @generated from message pg_query.ScanResult
 */
export type ScanResult = Message<"pg_query.ScanResult"> & {
  /**
   * @generated from field: int32 version = 1;
   */
  version: number;

  /**
   * @generated from field: repeated pg_query.ScanToken tokens = 2;
   */
  tokens: ScanToken[];
};

/**
 * @generated from message pg_query.ScanResult
 */
export type ScanResultJson = {
  /**
   * @generated from field: int32 version = 1;
   */
  version?: number;

  /**
   * @generated from field: repeated pg_query.ScanToken tokens = 2;
   */
  tokens?: ScanTokenJson[];
};

/**
 * Describes the message pg_query.ScanResult.
 * Use `create(ScanResultSchema)` to create a new message.
 */
export const ScanResultSchema: GenMessage<ScanResult, ScanResultJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 1);

/**
 * @generated from message pg_query.Node
 */
export type Node = Message<"pg_query.Node"> & {
  /**
   * @generated from oneof pg_query.Node.node
   */
  node: {
    /**
     * @generated from field: pg_query.Alias alias = 1 [json_name = "Alias"];
     */
    value: Alias;
    case: "alias";
  } | {
    /**
     * @generated from field: pg_query.RangeVar range_var = 2 [json_name = "RangeVar"];
     */
    value: RangeVar;
    case: "rangeVar";
  } | {
    /**
     * @generated from field: pg_query.TableFunc table_func = 3 [json_name = "TableFunc"];
     */
    value: TableFunc;
    case: "tableFunc";
  } | {
    /**
     * @generated from field: pg_query.IntoClause into_clause = 4 [json_name = "IntoClause"];
     */
    value: IntoClause;
    case: "intoClause";
  } | {
    /**
     * @generated from field: pg_query.Var var = 5 [json_name = "Var"];
     */
    value: Var;
    case: "var";
  } | {
    /**
     * @generated from field: pg_query.Param param = 6 [json_name = "Param"];
     */
    value: Param;
    case: "param";
  } | {
    /**
     * @generated from field: pg_query.Aggref aggref = 7 [json_name = "Aggref"];
     */
    value: Aggref;
    case: "aggref";
  } | {
    /**
     * @generated from field: pg_query.GroupingFunc grouping_func = 8 [json_name = "GroupingFunc"];
     */
    value: GroupingFunc;
    case: "groupingFunc";
  } | {
    /**
     * @generated from field: pg_query.WindowFunc window_func = 9 [json_name = "WindowFunc"];
     */
    value: WindowFunc;
    case: "windowFunc";
  } | {
    /**
     * @generated from field: pg_query.SubscriptingRef subscripting_ref = 10 [json_name = "SubscriptingRef"];
     */
    value: SubscriptingRef;
    case: "subscriptingRef";
  } | {
    /**
     * @generated from field: pg_query.FuncExpr func_expr = 11 [json_name = "FuncExpr"];
     */
    value: FuncExpr;
    case: "funcExpr";
  } | {
    /**
     * @generated from field: pg_query.NamedArgExpr named_arg_expr = 12 [json_name = "NamedArgExpr"];
     */
    value: NamedArgExpr;
    case: "namedArgExpr";
  } | {
    /**
     * @generated from field: pg_query.OpExpr op_expr = 13 [json_name = "OpExpr"];
     */
    value: OpExpr;
    case: "opExpr";
  } | {
    /**
     * @generated from field: pg_query.DistinctExpr distinct_expr = 14 [json_name = "DistinctExpr"];
     */
    value: DistinctExpr;
    case: "distinctExpr";
  } | {
    /**
     * @generated from field: pg_query.NullIfExpr null_if_expr = 15 [json_name = "NullIfExpr"];
     */
    value: NullIfExpr;
    case: "nullIfExpr";
  } | {
    /**
     * @generated from field: pg_query.ScalarArrayOpExpr scalar_array_op_expr = 16 [json_name = "ScalarArrayOpExpr"];
     */
    value: ScalarArrayOpExpr;
    case: "scalarArrayOpExpr";
  } | {
    /**
     * @generated from field: pg_query.BoolExpr bool_expr = 17 [json_name = "BoolExpr"];
     */
    value: BoolExpr;
    case: "boolExpr";
  } | {
    /**
     * @generated from field: pg_query.SubLink sub_link = 18 [json_name = "SubLink"];
     */
    value: SubLink;
    case: "subLink";
  } | {
    /**
     * @generated from field: pg_query.SubPlan sub_plan = 19 [json_name = "SubPlan"];
     */
    value: SubPlan;
    case: "subPlan";
  } | {
    /**
     * @generated from field: pg_query.AlternativeSubPlan alternative_sub_plan = 20 [json_name = "AlternativeSubPlan"];
     */
    value: AlternativeSubPlan;
    case: "alternativeSubPlan";
  } | {
    /**
     * @generated from field: pg_query.FieldSelect field_select = 21 [json_name = "FieldSelect"];
     */
    value: FieldSelect;
    case: "fieldSelect";
  } | {
    /**
     * @generated from field: pg_query.FieldStore field_store = 22 [json_name = "FieldStore"];
     */
    value: FieldStore;
    case: "fieldStore";
  } | {
    /**
     * @generated from field: pg_query.RelabelType relabel_type = 23 [json_name = "RelabelType"];
     */
    value: RelabelType;
    case: "relabelType";
  } | {
    /**
     * @generated from field: pg_query.CoerceViaIO coerce_via_io = 24 [json_name = "CoerceViaIO"];
     */
    value: CoerceViaIO;
    case: "coerceViaIo";
  } | {
    /**
     * @generated from field: pg_query.ArrayCoerceExpr array_coerce_expr = 25 [json_name = "ArrayCoerceExpr"];
     */
    value: ArrayCoerceExpr;
    case: "arrayCoerceExpr";
  } | {
    /**
     * @generated from field: pg_query.ConvertRowtypeExpr convert_rowtype_expr = 26 [json_name = "ConvertRowtypeExpr"];
     */
    value: ConvertRowtypeExpr;
    case: "convertRowtypeExpr";
  } | {
    /**
     * @generated from field: pg_query.CollateExpr collate_expr = 27 [json_name = "CollateExpr"];
     */
    value: CollateExpr;
    case: "collateExpr";
  } | {
    /**
     * @generated from field: pg_query.CaseExpr case_expr = 28 [json_name = "CaseExpr"];
     */
    value: CaseExpr;
    case: "caseExpr";
  } | {
    /**
     * @generated from field: pg_query.CaseWhen case_when = 29 [json_name = "CaseWhen"];
     */
    value: CaseWhen;
    case: "caseWhen";
  } | {
    /**
     * @generated from field: pg_query.CaseTestExpr case_test_expr = 30 [json_name = "CaseTestExpr"];
     */
    value: CaseTestExpr;
    case: "caseTestExpr";
  } | {
    /**
     * @generated from field: pg_query.ArrayExpr array_expr = 31 [json_name = "ArrayExpr"];
     */
    value: ArrayExpr;
    case: "arrayExpr";
  } | {
    /**
     * @generated from field: pg_query.RowExpr row_expr = 32 [json_name = "RowExpr"];
     */
    value: RowExpr;
    case: "rowExpr";
  } | {
    /**
     * @generated from field: pg_query.RowCompareExpr row_compare_expr = 33 [json_name = "RowCompareExpr"];
     */
    value: RowCompareExpr;
    case: "rowCompareExpr";
  } | {
    /**
     * @generated from field: pg_query.CoalesceExpr coalesce_expr = 34 [json_name = "CoalesceExpr"];
     */
    value: CoalesceExpr;
    case: "coalesceExpr";
  } | {
    /**
     * @generated from field: pg_query.MinMaxExpr min_max_expr = 35 [json_name = "MinMaxExpr"];
     */
    value: MinMaxExpr;
    case: "minMaxExpr";
  } | {
    /**
     * @generated from field: pg_query.SQLValueFunction sqlvalue_function = 36 [json_name = "SQLValueFunction"];
     */
    value: SQLValueFunction;
    case: "sqlvalueFunction";
  } | {
    /**
     * @generated from field: pg_query.XmlExpr xml_expr = 37 [json_name = "XmlExpr"];
     */
    value: XmlExpr;
    case: "xmlExpr";
  } | {
    /**
     * @generated from field: pg_query.JsonFormat json_format = 38 [json_name = "JsonFormat"];
     */
    value: JsonFormat;
    case: "jsonFormat";
  } | {
    /**
     * @generated from field: pg_query.JsonReturning json_returning = 39 [json_name = "JsonReturning"];
     */
    value: JsonReturning;
    case: "jsonReturning";
  } | {
    /**
     * @generated from field: pg_query.JsonValueExpr json_value_expr = 40 [json_name = "JsonValueExpr"];
     */
    value: JsonValueExpr;
    case: "jsonValueExpr";
  } | {
    /**
     * @generated from field: pg_query.JsonConstructorExpr json_constructor_expr = 41 [json_name = "JsonConstructorExpr"];
     */
    value: JsonConstructorExpr;
    case: "jsonConstructorExpr";
  } | {
    /**
     * @generated from field: pg_query.JsonIsPredicate json_is_predicate = 42 [json_name = "JsonIsPredicate"];
     */
    value: JsonIsPredicate;
    case: "jsonIsPredicate";
  } | {
    /**
     * @generated from field: pg_query.NullTest null_test = 43 [json_name = "NullTest"];
     */
    value: NullTest;
    case: "nullTest";
  } | {
    /**
     * @generated from field: pg_query.BooleanTest boolean_test = 44 [json_name = "BooleanTest"];
     */
    value: BooleanTest;
    case: "booleanTest";
  } | {
    /**
     * @generated from field: pg_query.CoerceToDomain coerce_to_domain = 45 [json_name = "CoerceToDomain"];
     */
    value: CoerceToDomain;
    case: "coerceToDomain";
  } | {
    /**
     * @generated from field: pg_query.CoerceToDomainValue coerce_to_domain_value = 46 [json_name = "CoerceToDomainValue"];
     */
    value: CoerceToDomainValue;
    case: "coerceToDomainValue";
  } | {
    /**
     * @generated from field: pg_query.SetToDefault set_to_default = 47 [json_name = "SetToDefault"];
     */
    value: SetToDefault;
    case: "setToDefault";
  } | {
    /**
     * @generated from field: pg_query.CurrentOfExpr current_of_expr = 48 [json_name = "CurrentOfExpr"];
     */
    value: CurrentOfExpr;
    case: "currentOfExpr";
  } | {
    /**
     * @generated from field: pg_query.NextValueExpr next_value_expr = 49 [json_name = "NextValueExpr"];
     */
    value: NextValueExpr;
    case: "nextValueExpr";
  } | {
    /**
     * @generated from field: pg_query.InferenceElem inference_elem = 50 [json_name = "InferenceElem"];
     */
    value: InferenceElem;
    case: "inferenceElem";
  } | {
    /**
     * @generated from field: pg_query.TargetEntry target_entry = 51 [json_name = "TargetEntry"];
     */
    value: TargetEntry;
    case: "targetEntry";
  } | {
    /**
     * @generated from field: pg_query.RangeTblRef range_tbl_ref = 52 [json_name = "RangeTblRef"];
     */
    value: RangeTblRef;
    case: "rangeTblRef";
  } | {
    /**
     * @generated from field: pg_query.JoinExpr join_expr = 53 [json_name = "JoinExpr"];
     */
    value: JoinExpr;
    case: "joinExpr";
  } | {
    /**
     * @generated from field: pg_query.FromExpr from_expr = 54 [json_name = "FromExpr"];
     */
    value: FromExpr;
    case: "fromExpr";
  } | {
    /**
     * @generated from field: pg_query.OnConflictExpr on_conflict_expr = 55 [json_name = "OnConflictExpr"];
     */
    value: OnConflictExpr;
    case: "onConflictExpr";
  } | {
    /**
     * @generated from field: pg_query.Query query = 56 [json_name = "Query"];
     */
    value: Query;
    case: "query";
  } | {
    /**
     * @generated from field: pg_query.TypeName type_name = 57 [json_name = "TypeName"];
     */
    value: TypeName;
    case: "typeName";
  } | {
    /**
     * @generated from field: pg_query.ColumnRef column_ref = 58 [json_name = "ColumnRef"];
     */
    value: ColumnRef;
    case: "columnRef";
  } | {
    /**
     * @generated from field: pg_query.ParamRef param_ref = 59 [json_name = "ParamRef"];
     */
    value: ParamRef;
    case: "paramRef";
  } | {
    /**
     * @generated from field: pg_query.A_Expr a_expr = 60 [json_name = "A_Expr"];
     */
    value: A_Expr;
    case: "aExpr";
  } | {
    /**
     * @generated from field: pg_query.TypeCast type_cast = 61 [json_name = "TypeCast"];
     */
    value: TypeCast;
    case: "typeCast";
  } | {
    /**
     * @generated from field: pg_query.CollateClause collate_clause = 62 [json_name = "CollateClause"];
     */
    value: CollateClause;
    case: "collateClause";
  } | {
    /**
     * @generated from field: pg_query.RoleSpec role_spec = 63 [json_name = "RoleSpec"];
     */
    value: RoleSpec;
    case: "roleSpec";
  } | {
    /**
     * @generated from field: pg_query.FuncCall func_call = 64 [json_name = "FuncCall"];
     */
    value: FuncCall;
    case: "funcCall";
  } | {
    /**
     * @generated from field: pg_query.A_Star a_star = 65 [json_name = "A_Star"];
     */
    value: A_Star;
    case: "aStar";
  } | {
    /**
     * @generated from field: pg_query.A_Indices a_indices = 66 [json_name = "A_Indices"];
     */
    value: A_Indices;
    case: "aIndices";
  } | {
    /**
     * @generated from field: pg_query.A_Indirection a_indirection = 67 [json_name = "A_Indirection"];
     */
    value: A_Indirection;
    case: "aIndirection";
  } | {
    /**
     * @generated from field: pg_query.A_ArrayExpr a_array_expr = 68 [json_name = "A_ArrayExpr"];
     */
    value: A_ArrayExpr;
    case: "aArrayExpr";
  } | {
    /**
     * @generated from field: pg_query.ResTarget res_target = 69 [json_name = "ResTarget"];
     */
    value: ResTarget;
    case: "resTarget";
  } | {
    /**
     * @generated from field: pg_query.MultiAssignRef multi_assign_ref = 70 [json_name = "MultiAssignRef"];
     */
    value: MultiAssignRef;
    case: "multiAssignRef";
  } | {
    /**
     * @generated from field: pg_query.SortBy sort_by = 71 [json_name = "SortBy"];
     */
    value: SortBy;
    case: "sortBy";
  } | {
    /**
     * @generated from field: pg_query.WindowDef window_def = 72 [json_name = "WindowDef"];
     */
    value: WindowDef;
    case: "windowDef";
  } | {
    /**
     * @generated from field: pg_query.RangeSubselect range_subselect = 73 [json_name = "RangeSubselect"];
     */
    value: RangeSubselect;
    case: "rangeSubselect";
  } | {
    /**
     * @generated from field: pg_query.RangeFunction range_function = 74 [json_name = "RangeFunction"];
     */
    value: RangeFunction;
    case: "rangeFunction";
  } | {
    /**
     * @generated from field: pg_query.RangeTableFunc range_table_func = 75 [json_name = "RangeTableFunc"];
     */
    value: RangeTableFunc;
    case: "rangeTableFunc";
  } | {
    /**
     * @generated from field: pg_query.RangeTableFuncCol range_table_func_col = 76 [json_name = "RangeTableFuncCol"];
     */
    value: RangeTableFuncCol;
    case: "rangeTableFuncCol";
  } | {
    /**
     * @generated from field: pg_query.RangeTableSample range_table_sample = 77 [json_name = "RangeTableSample"];
     */
    value: RangeTableSample;
    case: "rangeTableSample";
  } | {
    /**
     * @generated from field: pg_query.ColumnDef column_def = 78 [json_name = "ColumnDef"];
     */
    value: ColumnDef;
    case: "columnDef";
  } | {
    /**
     * @generated from field: pg_query.TableLikeClause table_like_clause = 79 [json_name = "TableLikeClause"];
     */
    value: TableLikeClause;
    case: "tableLikeClause";
  } | {
    /**
     * @generated from field: pg_query.IndexElem index_elem = 80 [json_name = "IndexElem"];
     */
    value: IndexElem;
    case: "indexElem";
  } | {
    /**
     * @generated from field: pg_query.DefElem def_elem = 81 [json_name = "DefElem"];
     */
    value: DefElem;
    case: "defElem";
  } | {
    /**
     * @generated from field: pg_query.LockingClause locking_clause = 82 [json_name = "LockingClause"];
     */
    value: LockingClause;
    case: "lockingClause";
  } | {
    /**
     * @generated from field: pg_query.XmlSerialize xml_serialize = 83 [json_name = "XmlSerialize"];
     */
    value: XmlSerialize;
    case: "xmlSerialize";
  } | {
    /**
     * @generated from field: pg_query.PartitionElem partition_elem = 84 [json_name = "PartitionElem"];
     */
    value: PartitionElem;
    case: "partitionElem";
  } | {
    /**
     * @generated from field: pg_query.PartitionSpec partition_spec = 85 [json_name = "PartitionSpec"];
     */
    value: PartitionSpec;
    case: "partitionSpec";
  } | {
    /**
     * @generated from field: pg_query.PartitionBoundSpec partition_bound_spec = 86 [json_name = "PartitionBoundSpec"];
     */
    value: PartitionBoundSpec;
    case: "partitionBoundSpec";
  } | {
    /**
     * @generated from field: pg_query.PartitionRangeDatum partition_range_datum = 87 [json_name = "PartitionRangeDatum"];
     */
    value: PartitionRangeDatum;
    case: "partitionRangeDatum";
  } | {
    /**
     * @generated from field: pg_query.PartitionCmd partition_cmd = 88 [json_name = "PartitionCmd"];
     */
    value: PartitionCmd;
    case: "partitionCmd";
  } | {
    /**
     * @generated from field: pg_query.RangeTblEntry range_tbl_entry = 89 [json_name = "RangeTblEntry"];
     */
    value: RangeTblEntry;
    case: "rangeTblEntry";
  } | {
    /**
     * @generated from field: pg_query.RTEPermissionInfo rtepermission_info = 90 [json_name = "RTEPermissionInfo"];
     */
    value: RTEPermissionInfo;
    case: "rtepermissionInfo";
  } | {
    /**
     * @generated from field: pg_query.RangeTblFunction range_tbl_function = 91 [json_name = "RangeTblFunction"];
     */
    value: RangeTblFunction;
    case: "rangeTblFunction";
  } | {
    /**
     * @generated from field: pg_query.TableSampleClause table_sample_clause = 92 [json_name = "TableSampleClause"];
     */
    value: TableSampleClause;
    case: "tableSampleClause";
  } | {
    /**
     * @generated from field: pg_query.WithCheckOption with_check_option = 93 [json_name = "WithCheckOption"];
     */
    value: WithCheckOption;
    case: "withCheckOption";
  } | {
    /**
     * @generated from field: pg_query.SortGroupClause sort_group_clause = 94 [json_name = "SortGroupClause"];
     */
    value: SortGroupClause;
    case: "sortGroupClause";
  } | {
    /**
     * @generated from field: pg_query.GroupingSet grouping_set = 95 [json_name = "GroupingSet"];
     */
    value: GroupingSet;
    case: "groupingSet";
  } | {
    /**
     * @generated from field: pg_query.WindowClause window_clause = 96 [json_name = "WindowClause"];
     */
    value: WindowClause;
    case: "windowClause";
  } | {
    /**
     * @generated from field: pg_query.RowMarkClause row_mark_clause = 97 [json_name = "RowMarkClause"];
     */
    value: RowMarkClause;
    case: "rowMarkClause";
  } | {
    /**
     * @generated from field: pg_query.WithClause with_clause = 98 [json_name = "WithClause"];
     */
    value: WithClause;
    case: "withClause";
  } | {
    /**
     * @generated from field: pg_query.InferClause infer_clause = 99 [json_name = "InferClause"];
     */
    value: InferClause;
    case: "inferClause";
  } | {
    /**
     * @generated from field: pg_query.OnConflictClause on_conflict_clause = 100 [json_name = "OnConflictClause"];
     */
    value: OnConflictClause;
    case: "onConflictClause";
  } | {
    /**
     * @generated from field: pg_query.CTESearchClause ctesearch_clause = 101 [json_name = "CTESearchClause"];
     */
    value: CTESearchClause;
    case: "ctesearchClause";
  } | {
    /**
     * @generated from field: pg_query.CTECycleClause ctecycle_clause = 102 [json_name = "CTECycleClause"];
     */
    value: CTECycleClause;
    case: "ctecycleClause";
  } | {
    /**
     * @generated from field: pg_query.CommonTableExpr common_table_expr = 103 [json_name = "CommonTableExpr"];
     */
    value: CommonTableExpr;
    case: "commonTableExpr";
  } | {
    /**
     * @generated from field: pg_query.MergeWhenClause merge_when_clause = 104 [json_name = "MergeWhenClause"];
     */
    value: MergeWhenClause;
    case: "mergeWhenClause";
  } | {
    /**
     * @generated from field: pg_query.MergeAction merge_action = 105 [json_name = "MergeAction"];
     */
    value: MergeAction;
    case: "mergeAction";
  } | {
    /**
     * @generated from field: pg_query.TriggerTransition trigger_transition = 106 [json_name = "TriggerTransition"];
     */
    value: TriggerTransition;
    case: "triggerTransition";
  } | {
    /**
     * @generated from field: pg_query.JsonOutput json_output = 107 [json_name = "JsonOutput"];
     */
    value: JsonOutput;
    case: "jsonOutput";
  } | {
    /**
     * @generated from field: pg_query.JsonKeyValue json_key_value = 108 [json_name = "JsonKeyValue"];
     */
    value: JsonKeyValue;
    case: "jsonKeyValue";
  } | {
    /**
     * @generated from field: pg_query.JsonObjectConstructor json_object_constructor = 109 [json_name = "JsonObjectConstructor"];
     */
    value: JsonObjectConstructor;
    case: "jsonObjectConstructor";
  } | {
    /**
     * @generated from field: pg_query.JsonArrayConstructor json_array_constructor = 110 [json_name = "JsonArrayConstructor"];
     */
    value: JsonArrayConstructor;
    case: "jsonArrayConstructor";
  } | {
    /**
     * @generated from field: pg_query.JsonArrayQueryConstructor json_array_query_constructor = 111 [json_name = "JsonArrayQueryConstructor"];
     */
    value: JsonArrayQueryConstructor;
    case: "jsonArrayQueryConstructor";
  } | {
    /**
     * @generated from field: pg_query.JsonAggConstructor json_agg_constructor = 112 [json_name = "JsonAggConstructor"];
     */
    value: JsonAggConstructor;
    case: "jsonAggConstructor";
  } | {
    /**
     * @generated from field: pg_query.JsonObjectAgg json_object_agg = 113 [json_name = "JsonObjectAgg"];
     */
    value: JsonObjectAgg;
    case: "jsonObjectAgg";
  } | {
    /**
     * @generated from field: pg_query.JsonArrayAgg json_array_agg = 114 [json_name = "JsonArrayAgg"];
     */
    value: JsonArrayAgg;
    case: "jsonArrayAgg";
  } | {
    /**
     * @generated from field: pg_query.RawStmt raw_stmt = 115 [json_name = "RawStmt"];
     */
    value: RawStmt;
    case: "rawStmt";
  } | {
    /**
     * @generated from field: pg_query.InsertStmt insert_stmt = 116 [json_name = "InsertStmt"];
     */
    value: InsertStmt;
    case: "insertStmt";
  } | {
    /**
     * @generated from field: pg_query.DeleteStmt delete_stmt = 117 [json_name = "DeleteStmt"];
     */
    value: DeleteStmt;
    case: "deleteStmt";
  } | {
    /**
     * @generated from field: pg_query.UpdateStmt update_stmt = 118 [json_name = "UpdateStmt"];
     */
    value: UpdateStmt;
    case: "updateStmt";
  } | {
    /**
     * @generated from field: pg_query.MergeStmt merge_stmt = 119 [json_name = "MergeStmt"];
     */
    value: MergeStmt;
    case: "mergeStmt";
  } | {
    /**
     * @generated from field: pg_query.SelectStmt select_stmt = 120 [json_name = "SelectStmt"];
     */
    value: SelectStmt;
    case: "selectStmt";
  } | {
    /**
     * @generated from field: pg_query.SetOperationStmt set_operation_stmt = 121 [json_name = "SetOperationStmt"];
     */
    value: SetOperationStmt;
    case: "setOperationStmt";
  } | {
    /**
     * @generated from field: pg_query.ReturnStmt return_stmt = 122 [json_name = "ReturnStmt"];
     */
    value: ReturnStmt;
    case: "returnStmt";
  } | {
    /**
     * @generated from field: pg_query.PLAssignStmt plassign_stmt = 123 [json_name = "PLAssignStmt"];
     */
    value: PLAssignStmt;
    case: "plassignStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateSchemaStmt create_schema_stmt = 124 [json_name = "CreateSchemaStmt"];
     */
    value: CreateSchemaStmt;
    case: "createSchemaStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterTableStmt alter_table_stmt = 125 [json_name = "AlterTableStmt"];
     */
    value: AlterTableStmt;
    case: "alterTableStmt";
  } | {
    /**
     * @generated from field: pg_query.ReplicaIdentityStmt replica_identity_stmt = 126 [json_name = "ReplicaIdentityStmt"];
     */
    value: ReplicaIdentityStmt;
    case: "replicaIdentityStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterTableCmd alter_table_cmd = 127 [json_name = "AlterTableCmd"];
     */
    value: AlterTableCmd;
    case: "alterTableCmd";
  } | {
    /**
     * @generated from field: pg_query.AlterCollationStmt alter_collation_stmt = 128 [json_name = "AlterCollationStmt"];
     */
    value: AlterCollationStmt;
    case: "alterCollationStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterDomainStmt alter_domain_stmt = 129 [json_name = "AlterDomainStmt"];
     */
    value: AlterDomainStmt;
    case: "alterDomainStmt";
  } | {
    /**
     * @generated from field: pg_query.GrantStmt grant_stmt = 130 [json_name = "GrantStmt"];
     */
    value: GrantStmt;
    case: "grantStmt";
  } | {
    /**
     * @generated from field: pg_query.ObjectWithArgs object_with_args = 131 [json_name = "ObjectWithArgs"];
     */
    value: ObjectWithArgs;
    case: "objectWithArgs";
  } | {
    /**
     * @generated from field: pg_query.AccessPriv access_priv = 132 [json_name = "AccessPriv"];
     */
    value: AccessPriv;
    case: "accessPriv";
  } | {
    /**
     * @generated from field: pg_query.GrantRoleStmt grant_role_stmt = 133 [json_name = "GrantRoleStmt"];
     */
    value: GrantRoleStmt;
    case: "grantRoleStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterDefaultPrivilegesStmt alter_default_privileges_stmt = 134 [json_name = "AlterDefaultPrivilegesStmt"];
     */
    value: AlterDefaultPrivilegesStmt;
    case: "alterDefaultPrivilegesStmt";
  } | {
    /**
     * @generated from field: pg_query.CopyStmt copy_stmt = 135 [json_name = "CopyStmt"];
     */
    value: CopyStmt;
    case: "copyStmt";
  } | {
    /**
     * @generated from field: pg_query.VariableSetStmt variable_set_stmt = 136 [json_name = "VariableSetStmt"];
     */
    value: VariableSetStmt;
    case: "variableSetStmt";
  } | {
    /**
     * @generated from field: pg_query.VariableShowStmt variable_show_stmt = 137 [json_name = "VariableShowStmt"];
     */
    value: VariableShowStmt;
    case: "variableShowStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateStmt create_stmt = 138 [json_name = "CreateStmt"];
     */
    value: CreateStmt;
    case: "createStmt";
  } | {
    /**
     * @generated from field: pg_query.Constraint constraint = 139 [json_name = "Constraint"];
     */
    value: Constraint;
    case: "constraint";
  } | {
    /**
     * @generated from field: pg_query.CreateTableSpaceStmt create_table_space_stmt = 140 [json_name = "CreateTableSpaceStmt"];
     */
    value: CreateTableSpaceStmt;
    case: "createTableSpaceStmt";
  } | {
    /**
     * @generated from field: pg_query.DropTableSpaceStmt drop_table_space_stmt = 141 [json_name = "DropTableSpaceStmt"];
     */
    value: DropTableSpaceStmt;
    case: "dropTableSpaceStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterTableSpaceOptionsStmt alter_table_space_options_stmt = 142 [json_name = "AlterTableSpaceOptionsStmt"];
     */
    value: AlterTableSpaceOptionsStmt;
    case: "alterTableSpaceOptionsStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterTableMoveAllStmt alter_table_move_all_stmt = 143 [json_name = "AlterTableMoveAllStmt"];
     */
    value: AlterTableMoveAllStmt;
    case: "alterTableMoveAllStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateExtensionStmt create_extension_stmt = 144 [json_name = "CreateExtensionStmt"];
     */
    value: CreateExtensionStmt;
    case: "createExtensionStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterExtensionStmt alter_extension_stmt = 145 [json_name = "AlterExtensionStmt"];
     */
    value: AlterExtensionStmt;
    case: "alterExtensionStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterExtensionContentsStmt alter_extension_contents_stmt = 146 [json_name = "AlterExtensionContentsStmt"];
     */
    value: AlterExtensionContentsStmt;
    case: "alterExtensionContentsStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateFdwStmt create_fdw_stmt = 147 [json_name = "CreateFdwStmt"];
     */
    value: CreateFdwStmt;
    case: "createFdwStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterFdwStmt alter_fdw_stmt = 148 [json_name = "AlterFdwStmt"];
     */
    value: AlterFdwStmt;
    case: "alterFdwStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateForeignServerStmt create_foreign_server_stmt = 149 [json_name = "CreateForeignServerStmt"];
     */
    value: CreateForeignServerStmt;
    case: "createForeignServerStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterForeignServerStmt alter_foreign_server_stmt = 150 [json_name = "AlterForeignServerStmt"];
     */
    value: AlterForeignServerStmt;
    case: "alterForeignServerStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateForeignTableStmt create_foreign_table_stmt = 151 [json_name = "CreateForeignTableStmt"];
     */
    value: CreateForeignTableStmt;
    case: "createForeignTableStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateUserMappingStmt create_user_mapping_stmt = 152 [json_name = "CreateUserMappingStmt"];
     */
    value: CreateUserMappingStmt;
    case: "createUserMappingStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterUserMappingStmt alter_user_mapping_stmt = 153 [json_name = "AlterUserMappingStmt"];
     */
    value: AlterUserMappingStmt;
    case: "alterUserMappingStmt";
  } | {
    /**
     * @generated from field: pg_query.DropUserMappingStmt drop_user_mapping_stmt = 154 [json_name = "DropUserMappingStmt"];
     */
    value: DropUserMappingStmt;
    case: "dropUserMappingStmt";
  } | {
    /**
     * @generated from field: pg_query.ImportForeignSchemaStmt import_foreign_schema_stmt = 155 [json_name = "ImportForeignSchemaStmt"];
     */
    value: ImportForeignSchemaStmt;
    case: "importForeignSchemaStmt";
  } | {
    /**
     * @generated from field: pg_query.CreatePolicyStmt create_policy_stmt = 156 [json_name = "CreatePolicyStmt"];
     */
    value: CreatePolicyStmt;
    case: "createPolicyStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterPolicyStmt alter_policy_stmt = 157 [json_name = "AlterPolicyStmt"];
     */
    value: AlterPolicyStmt;
    case: "alterPolicyStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateAmStmt create_am_stmt = 158 [json_name = "CreateAmStmt"];
     */
    value: CreateAmStmt;
    case: "createAmStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateTrigStmt create_trig_stmt = 159 [json_name = "CreateTrigStmt"];
     */
    value: CreateTrigStmt;
    case: "createTrigStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateEventTrigStmt create_event_trig_stmt = 160 [json_name = "CreateEventTrigStmt"];
     */
    value: CreateEventTrigStmt;
    case: "createEventTrigStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterEventTrigStmt alter_event_trig_stmt = 161 [json_name = "AlterEventTrigStmt"];
     */
    value: AlterEventTrigStmt;
    case: "alterEventTrigStmt";
  } | {
    /**
     * @generated from field: pg_query.CreatePLangStmt create_plang_stmt = 162 [json_name = "CreatePLangStmt"];
     */
    value: CreatePLangStmt;
    case: "createPlangStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateRoleStmt create_role_stmt = 163 [json_name = "CreateRoleStmt"];
     */
    value: CreateRoleStmt;
    case: "createRoleStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterRoleStmt alter_role_stmt = 164 [json_name = "AlterRoleStmt"];
     */
    value: AlterRoleStmt;
    case: "alterRoleStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterRoleSetStmt alter_role_set_stmt = 165 [json_name = "AlterRoleSetStmt"];
     */
    value: AlterRoleSetStmt;
    case: "alterRoleSetStmt";
  } | {
    /**
     * @generated from field: pg_query.DropRoleStmt drop_role_stmt = 166 [json_name = "DropRoleStmt"];
     */
    value: DropRoleStmt;
    case: "dropRoleStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateSeqStmt create_seq_stmt = 167 [json_name = "CreateSeqStmt"];
     */
    value: CreateSeqStmt;
    case: "createSeqStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterSeqStmt alter_seq_stmt = 168 [json_name = "AlterSeqStmt"];
     */
    value: AlterSeqStmt;
    case: "alterSeqStmt";
  } | {
    /**
     * @generated from field: pg_query.DefineStmt define_stmt = 169 [json_name = "DefineStmt"];
     */
    value: DefineStmt;
    case: "defineStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateDomainStmt create_domain_stmt = 170 [json_name = "CreateDomainStmt"];
     */
    value: CreateDomainStmt;
    case: "createDomainStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateOpClassStmt create_op_class_stmt = 171 [json_name = "CreateOpClassStmt"];
     */
    value: CreateOpClassStmt;
    case: "createOpClassStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateOpClassItem create_op_class_item = 172 [json_name = "CreateOpClassItem"];
     */
    value: CreateOpClassItem;
    case: "createOpClassItem";
  } | {
    /**
     * @generated from field: pg_query.CreateOpFamilyStmt create_op_family_stmt = 173 [json_name = "CreateOpFamilyStmt"];
     */
    value: CreateOpFamilyStmt;
    case: "createOpFamilyStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterOpFamilyStmt alter_op_family_stmt = 174 [json_name = "AlterOpFamilyStmt"];
     */
    value: AlterOpFamilyStmt;
    case: "alterOpFamilyStmt";
  } | {
    /**
     * @generated from field: pg_query.DropStmt drop_stmt = 175 [json_name = "DropStmt"];
     */
    value: DropStmt;
    case: "dropStmt";
  } | {
    /**
     * @generated from field: pg_query.TruncateStmt truncate_stmt = 176 [json_name = "TruncateStmt"];
     */
    value: TruncateStmt;
    case: "truncateStmt";
  } | {
    /**
     * @generated from field: pg_query.CommentStmt comment_stmt = 177 [json_name = "CommentStmt"];
     */
    value: CommentStmt;
    case: "commentStmt";
  } | {
    /**
     * @generated from field: pg_query.SecLabelStmt sec_label_stmt = 178 [json_name = "SecLabelStmt"];
     */
    value: SecLabelStmt;
    case: "secLabelStmt";
  } | {
    /**
     * @generated from field: pg_query.DeclareCursorStmt declare_cursor_stmt = 179 [json_name = "DeclareCursorStmt"];
     */
    value: DeclareCursorStmt;
    case: "declareCursorStmt";
  } | {
    /**
     * @generated from field: pg_query.ClosePortalStmt close_portal_stmt = 180 [json_name = "ClosePortalStmt"];
     */
    value: ClosePortalStmt;
    case: "closePortalStmt";
  } | {
    /**
     * @generated from field: pg_query.FetchStmt fetch_stmt = 181 [json_name = "FetchStmt"];
     */
    value: FetchStmt;
    case: "fetchStmt";
  } | {
    /**
     * @generated from field: pg_query.IndexStmt index_stmt = 182 [json_name = "IndexStmt"];
     */
    value: IndexStmt;
    case: "indexStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateStatsStmt create_stats_stmt = 183 [json_name = "CreateStatsStmt"];
     */
    value: CreateStatsStmt;
    case: "createStatsStmt";
  } | {
    /**
     * @generated from field: pg_query.StatsElem stats_elem = 184 [json_name = "StatsElem"];
     */
    value: StatsElem;
    case: "statsElem";
  } | {
    /**
     * @generated from field: pg_query.AlterStatsStmt alter_stats_stmt = 185 [json_name = "AlterStatsStmt"];
     */
    value: AlterStatsStmt;
    case: "alterStatsStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateFunctionStmt create_function_stmt = 186 [json_name = "CreateFunctionStmt"];
     */
    value: CreateFunctionStmt;
    case: "createFunctionStmt";
  } | {
    /**
     * @generated from field: pg_query.FunctionParameter function_parameter = 187 [json_name = "FunctionParameter"];
     */
    value: FunctionParameter;
    case: "functionParameter";
  } | {
    /**
     * @generated from field: pg_query.AlterFunctionStmt alter_function_stmt = 188 [json_name = "AlterFunctionStmt"];
     */
    value: AlterFunctionStmt;
    case: "alterFunctionStmt";
  } | {
    /**
     * @generated from field: pg_query.DoStmt do_stmt = 189 [json_name = "DoStmt"];
     */
    value: DoStmt;
    case: "doStmt";
  } | {
    /**
     * @generated from field: pg_query.InlineCodeBlock inline_code_block = 190 [json_name = "InlineCodeBlock"];
     */
    value: InlineCodeBlock;
    case: "inlineCodeBlock";
  } | {
    /**
     * @generated from field: pg_query.CallStmt call_stmt = 191 [json_name = "CallStmt"];
     */
    value: CallStmt;
    case: "callStmt";
  } | {
    /**
     * @generated from field: pg_query.CallContext call_context = 192 [json_name = "CallContext"];
     */
    value: CallContext;
    case: "callContext";
  } | {
    /**
     * @generated from field: pg_query.RenameStmt rename_stmt = 193 [json_name = "RenameStmt"];
     */
    value: RenameStmt;
    case: "renameStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterObjectDependsStmt alter_object_depends_stmt = 194 [json_name = "AlterObjectDependsStmt"];
     */
    value: AlterObjectDependsStmt;
    case: "alterObjectDependsStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterObjectSchemaStmt alter_object_schema_stmt = 195 [json_name = "AlterObjectSchemaStmt"];
     */
    value: AlterObjectSchemaStmt;
    case: "alterObjectSchemaStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterOwnerStmt alter_owner_stmt = 196 [json_name = "AlterOwnerStmt"];
     */
    value: AlterOwnerStmt;
    case: "alterOwnerStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterOperatorStmt alter_operator_stmt = 197 [json_name = "AlterOperatorStmt"];
     */
    value: AlterOperatorStmt;
    case: "alterOperatorStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterTypeStmt alter_type_stmt = 198 [json_name = "AlterTypeStmt"];
     */
    value: AlterTypeStmt;
    case: "alterTypeStmt";
  } | {
    /**
     * @generated from field: pg_query.RuleStmt rule_stmt = 199 [json_name = "RuleStmt"];
     */
    value: RuleStmt;
    case: "ruleStmt";
  } | {
    /**
     * @generated from field: pg_query.NotifyStmt notify_stmt = 200 [json_name = "NotifyStmt"];
     */
    value: NotifyStmt;
    case: "notifyStmt";
  } | {
    /**
     * @generated from field: pg_query.ListenStmt listen_stmt = 201 [json_name = "ListenStmt"];
     */
    value: ListenStmt;
    case: "listenStmt";
  } | {
    /**
     * @generated from field: pg_query.UnlistenStmt unlisten_stmt = 202 [json_name = "UnlistenStmt"];
     */
    value: UnlistenStmt;
    case: "unlistenStmt";
  } | {
    /**
     * @generated from field: pg_query.TransactionStmt transaction_stmt = 203 [json_name = "TransactionStmt"];
     */
    value: TransactionStmt;
    case: "transactionStmt";
  } | {
    /**
     * @generated from field: pg_query.CompositeTypeStmt composite_type_stmt = 204 [json_name = "CompositeTypeStmt"];
     */
    value: CompositeTypeStmt;
    case: "compositeTypeStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateEnumStmt create_enum_stmt = 205 [json_name = "CreateEnumStmt"];
     */
    value: CreateEnumStmt;
    case: "createEnumStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateRangeStmt create_range_stmt = 206 [json_name = "CreateRangeStmt"];
     */
    value: CreateRangeStmt;
    case: "createRangeStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterEnumStmt alter_enum_stmt = 207 [json_name = "AlterEnumStmt"];
     */
    value: AlterEnumStmt;
    case: "alterEnumStmt";
  } | {
    /**
     * @generated from field: pg_query.ViewStmt view_stmt = 208 [json_name = "ViewStmt"];
     */
    value: ViewStmt;
    case: "viewStmt";
  } | {
    /**
     * @generated from field: pg_query.LoadStmt load_stmt = 209 [json_name = "LoadStmt"];
     */
    value: LoadStmt;
    case: "loadStmt";
  } | {
    /**
     * @generated from field: pg_query.CreatedbStmt createdb_stmt = 210 [json_name = "CreatedbStmt"];
     */
    value: CreatedbStmt;
    case: "createdbStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterDatabaseStmt alter_database_stmt = 211 [json_name = "AlterDatabaseStmt"];
     */
    value: AlterDatabaseStmt;
    case: "alterDatabaseStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterDatabaseRefreshCollStmt alter_database_refresh_coll_stmt = 212 [json_name = "AlterDatabaseRefreshCollStmt"];
     */
    value: AlterDatabaseRefreshCollStmt;
    case: "alterDatabaseRefreshCollStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterDatabaseSetStmt alter_database_set_stmt = 213 [json_name = "AlterDatabaseSetStmt"];
     */
    value: AlterDatabaseSetStmt;
    case: "alterDatabaseSetStmt";
  } | {
    /**
     * @generated from field: pg_query.DropdbStmt dropdb_stmt = 214 [json_name = "DropdbStmt"];
     */
    value: DropdbStmt;
    case: "dropdbStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterSystemStmt alter_system_stmt = 215 [json_name = "AlterSystemStmt"];
     */
    value: AlterSystemStmt;
    case: "alterSystemStmt";
  } | {
    /**
     * @generated from field: pg_query.ClusterStmt cluster_stmt = 216 [json_name = "ClusterStmt"];
     */
    value: ClusterStmt;
    case: "clusterStmt";
  } | {
    /**
     * @generated from field: pg_query.VacuumStmt vacuum_stmt = 217 [json_name = "VacuumStmt"];
     */
    value: VacuumStmt;
    case: "vacuumStmt";
  } | {
    /**
     * @generated from field: pg_query.VacuumRelation vacuum_relation = 218 [json_name = "VacuumRelation"];
     */
    value: VacuumRelation;
    case: "vacuumRelation";
  } | {
    /**
     * @generated from field: pg_query.ExplainStmt explain_stmt = 219 [json_name = "ExplainStmt"];
     */
    value: ExplainStmt;
    case: "explainStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateTableAsStmt create_table_as_stmt = 220 [json_name = "CreateTableAsStmt"];
     */
    value: CreateTableAsStmt;
    case: "createTableAsStmt";
  } | {
    /**
     * @generated from field: pg_query.RefreshMatViewStmt refresh_mat_view_stmt = 221 [json_name = "RefreshMatViewStmt"];
     */
    value: RefreshMatViewStmt;
    case: "refreshMatViewStmt";
  } | {
    /**
     * @generated from field: pg_query.CheckPointStmt check_point_stmt = 222 [json_name = "CheckPointStmt"];
     */
    value: CheckPointStmt;
    case: "checkPointStmt";
  } | {
    /**
     * @generated from field: pg_query.DiscardStmt discard_stmt = 223 [json_name = "DiscardStmt"];
     */
    value: DiscardStmt;
    case: "discardStmt";
  } | {
    /**
     * @generated from field: pg_query.LockStmt lock_stmt = 224 [json_name = "LockStmt"];
     */
    value: LockStmt;
    case: "lockStmt";
  } | {
    /**
     * @generated from field: pg_query.ConstraintsSetStmt constraints_set_stmt = 225 [json_name = "ConstraintsSetStmt"];
     */
    value: ConstraintsSetStmt;
    case: "constraintsSetStmt";
  } | {
    /**
     * @generated from field: pg_query.ReindexStmt reindex_stmt = 226 [json_name = "ReindexStmt"];
     */
    value: ReindexStmt;
    case: "reindexStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateConversionStmt create_conversion_stmt = 227 [json_name = "CreateConversionStmt"];
     */
    value: CreateConversionStmt;
    case: "createConversionStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateCastStmt create_cast_stmt = 228 [json_name = "CreateCastStmt"];
     */
    value: CreateCastStmt;
    case: "createCastStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateTransformStmt create_transform_stmt = 229 [json_name = "CreateTransformStmt"];
     */
    value: CreateTransformStmt;
    case: "createTransformStmt";
  } | {
    /**
     * @generated from field: pg_query.PrepareStmt prepare_stmt = 230 [json_name = "PrepareStmt"];
     */
    value: PrepareStmt;
    case: "prepareStmt";
  } | {
    /**
     * @generated from field: pg_query.ExecuteStmt execute_stmt = 231 [json_name = "ExecuteStmt"];
     */
    value: ExecuteStmt;
    case: "executeStmt";
  } | {
    /**
     * @generated from field: pg_query.DeallocateStmt deallocate_stmt = 232 [json_name = "DeallocateStmt"];
     */
    value: DeallocateStmt;
    case: "deallocateStmt";
  } | {
    /**
     * @generated from field: pg_query.DropOwnedStmt drop_owned_stmt = 233 [json_name = "DropOwnedStmt"];
     */
    value: DropOwnedStmt;
    case: "dropOwnedStmt";
  } | {
    /**
     * @generated from field: pg_query.ReassignOwnedStmt reassign_owned_stmt = 234 [json_name = "ReassignOwnedStmt"];
     */
    value: ReassignOwnedStmt;
    case: "reassignOwnedStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterTSDictionaryStmt alter_tsdictionary_stmt = 235 [json_name = "AlterTSDictionaryStmt"];
     */
    value: AlterTSDictionaryStmt;
    case: "alterTsdictionaryStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterTSConfigurationStmt alter_tsconfiguration_stmt = 236 [json_name = "AlterTSConfigurationStmt"];
     */
    value: AlterTSConfigurationStmt;
    case: "alterTsconfigurationStmt";
  } | {
    /**
     * @generated from field: pg_query.PublicationTable publication_table = 237 [json_name = "PublicationTable"];
     */
    value: PublicationTable;
    case: "publicationTable";
  } | {
    /**
     * @generated from field: pg_query.PublicationObjSpec publication_obj_spec = 238 [json_name = "PublicationObjSpec"];
     */
    value: PublicationObjSpec;
    case: "publicationObjSpec";
  } | {
    /**
     * @generated from field: pg_query.CreatePublicationStmt create_publication_stmt = 239 [json_name = "CreatePublicationStmt"];
     */
    value: CreatePublicationStmt;
    case: "createPublicationStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterPublicationStmt alter_publication_stmt = 240 [json_name = "AlterPublicationStmt"];
     */
    value: AlterPublicationStmt;
    case: "alterPublicationStmt";
  } | {
    /**
     * @generated from field: pg_query.CreateSubscriptionStmt create_subscription_stmt = 241 [json_name = "CreateSubscriptionStmt"];
     */
    value: CreateSubscriptionStmt;
    case: "createSubscriptionStmt";
  } | {
    /**
     * @generated from field: pg_query.AlterSubscriptionStmt alter_subscription_stmt = 242 [json_name = "AlterSubscriptionStmt"];
     */
    value: AlterSubscriptionStmt;
    case: "alterSubscriptionStmt";
  } | {
    /**
     * @generated from field: pg_query.DropSubscriptionStmt drop_subscription_stmt = 243 [json_name = "DropSubscriptionStmt"];
     */
    value: DropSubscriptionStmt;
    case: "dropSubscriptionStmt";
  } | {
    /**
     * @generated from field: pg_query.Integer integer = 244 [json_name = "Integer"];
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: pg_query.Float float = 245 [json_name = "Float"];
     */
    value: Float;
    case: "float";
  } | {
    /**
     * @generated from field: pg_query.Boolean boolean = 246 [json_name = "Boolean"];
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: pg_query.String string = 247 [json_name = "String"];
     */
    value: String;
    case: "string";
  } | {
    /**
     * @generated from field: pg_query.BitString bit_string = 248 [json_name = "BitString"];
     */
    value: BitString;
    case: "bitString";
  } | {
    /**
     * @generated from field: pg_query.List list = 249 [json_name = "List"];
     */
    value: List;
    case: "list";
  } | {
    /**
     * @generated from field: pg_query.IntList int_list = 250 [json_name = "IntList"];
     */
    value: IntList;
    case: "intList";
  } | {
    /**
     * @generated from field: pg_query.OidList oid_list = 251 [json_name = "OidList"];
     */
    value: OidList;
    case: "oidList";
  } | {
    /**
     * @generated from field: pg_query.A_Const a_const = 252 [json_name = "A_Const"];
     */
    value: A_Const;
    case: "aConst";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message pg_query.Node
 */
export type NodeJson = {
  /**
   * @generated from field: pg_query.Alias alias = 1 [json_name = "Alias"];
   */
  Alias?: AliasJson;

  /**
   * @generated from field: pg_query.RangeVar range_var = 2 [json_name = "RangeVar"];
   */
  RangeVar?: RangeVarJson;

  /**
   * @generated from field: pg_query.TableFunc table_func = 3 [json_name = "TableFunc"];
   */
  TableFunc?: TableFuncJson;

  /**
   * @generated from field: pg_query.IntoClause into_clause = 4 [json_name = "IntoClause"];
   */
  IntoClause?: IntoClauseJson;

  /**
   * @generated from field: pg_query.Var var = 5 [json_name = "Var"];
   */
  Var?: VarJson;

  /**
   * @generated from field: pg_query.Param param = 6 [json_name = "Param"];
   */
  Param?: ParamJson;

  /**
   * @generated from field: pg_query.Aggref aggref = 7 [json_name = "Aggref"];
   */
  Aggref?: AggrefJson;

  /**
   * @generated from field: pg_query.GroupingFunc grouping_func = 8 [json_name = "GroupingFunc"];
   */
  GroupingFunc?: GroupingFuncJson;

  /**
   * @generated from field: pg_query.WindowFunc window_func = 9 [json_name = "WindowFunc"];
   */
  WindowFunc?: WindowFuncJson;

  /**
   * @generated from field: pg_query.SubscriptingRef subscripting_ref = 10 [json_name = "SubscriptingRef"];
   */
  SubscriptingRef?: SubscriptingRefJson;

  /**
   * @generated from field: pg_query.FuncExpr func_expr = 11 [json_name = "FuncExpr"];
   */
  FuncExpr?: FuncExprJson;

  /**
   * @generated from field: pg_query.NamedArgExpr named_arg_expr = 12 [json_name = "NamedArgExpr"];
   */
  NamedArgExpr?: NamedArgExprJson;

  /**
   * @generated from field: pg_query.OpExpr op_expr = 13 [json_name = "OpExpr"];
   */
  OpExpr?: OpExprJson;

  /**
   * @generated from field: pg_query.DistinctExpr distinct_expr = 14 [json_name = "DistinctExpr"];
   */
  DistinctExpr?: DistinctExprJson;

  /**
   * @generated from field: pg_query.NullIfExpr null_if_expr = 15 [json_name = "NullIfExpr"];
   */
  NullIfExpr?: NullIfExprJson;

  /**
   * @generated from field: pg_query.ScalarArrayOpExpr scalar_array_op_expr = 16 [json_name = "ScalarArrayOpExpr"];
   */
  ScalarArrayOpExpr?: ScalarArrayOpExprJson;

  /**
   * @generated from field: pg_query.BoolExpr bool_expr = 17 [json_name = "BoolExpr"];
   */
  BoolExpr?: BoolExprJson;

  /**
   * @generated from field: pg_query.SubLink sub_link = 18 [json_name = "SubLink"];
   */
  SubLink?: SubLinkJson;

  /**
   * @generated from field: pg_query.SubPlan sub_plan = 19 [json_name = "SubPlan"];
   */
  SubPlan?: SubPlanJson;

  /**
   * @generated from field: pg_query.AlternativeSubPlan alternative_sub_plan = 20 [json_name = "AlternativeSubPlan"];
   */
  AlternativeSubPlan?: AlternativeSubPlanJson;

  /**
   * @generated from field: pg_query.FieldSelect field_select = 21 [json_name = "FieldSelect"];
   */
  FieldSelect?: FieldSelectJson;

  /**
   * @generated from field: pg_query.FieldStore field_store = 22 [json_name = "FieldStore"];
   */
  FieldStore?: FieldStoreJson;

  /**
   * @generated from field: pg_query.RelabelType relabel_type = 23 [json_name = "RelabelType"];
   */
  RelabelType?: RelabelTypeJson;

  /**
   * @generated from field: pg_query.CoerceViaIO coerce_via_io = 24 [json_name = "CoerceViaIO"];
   */
  CoerceViaIO?: CoerceViaIOJson;

  /**
   * @generated from field: pg_query.ArrayCoerceExpr array_coerce_expr = 25 [json_name = "ArrayCoerceExpr"];
   */
  ArrayCoerceExpr?: ArrayCoerceExprJson;

  /**
   * @generated from field: pg_query.ConvertRowtypeExpr convert_rowtype_expr = 26 [json_name = "ConvertRowtypeExpr"];
   */
  ConvertRowtypeExpr?: ConvertRowtypeExprJson;

  /**
   * @generated from field: pg_query.CollateExpr collate_expr = 27 [json_name = "CollateExpr"];
   */
  CollateExpr?: CollateExprJson;

  /**
   * @generated from field: pg_query.CaseExpr case_expr = 28 [json_name = "CaseExpr"];
   */
  CaseExpr?: CaseExprJson;

  /**
   * @generated from field: pg_query.CaseWhen case_when = 29 [json_name = "CaseWhen"];
   */
  CaseWhen?: CaseWhenJson;

  /**
   * @generated from field: pg_query.CaseTestExpr case_test_expr = 30 [json_name = "CaseTestExpr"];
   */
  CaseTestExpr?: CaseTestExprJson;

  /**
   * @generated from field: pg_query.ArrayExpr array_expr = 31 [json_name = "ArrayExpr"];
   */
  ArrayExpr?: ArrayExprJson;

  /**
   * @generated from field: pg_query.RowExpr row_expr = 32 [json_name = "RowExpr"];
   */
  RowExpr?: RowExprJson;

  /**
   * @generated from field: pg_query.RowCompareExpr row_compare_expr = 33 [json_name = "RowCompareExpr"];
   */
  RowCompareExpr?: RowCompareExprJson;

  /**
   * @generated from field: pg_query.CoalesceExpr coalesce_expr = 34 [json_name = "CoalesceExpr"];
   */
  CoalesceExpr?: CoalesceExprJson;

  /**
   * @generated from field: pg_query.MinMaxExpr min_max_expr = 35 [json_name = "MinMaxExpr"];
   */
  MinMaxExpr?: MinMaxExprJson;

  /**
   * @generated from field: pg_query.SQLValueFunction sqlvalue_function = 36 [json_name = "SQLValueFunction"];
   */
  SQLValueFunction?: SQLValueFunctionJson;

  /**
   * @generated from field: pg_query.XmlExpr xml_expr = 37 [json_name = "XmlExpr"];
   */
  XmlExpr?: XmlExprJson;

  /**
   * @generated from field: pg_query.JsonFormat json_format = 38 [json_name = "JsonFormat"];
   */
  JsonFormat?: JsonFormatJson;

  /**
   * @generated from field: pg_query.JsonReturning json_returning = 39 [json_name = "JsonReturning"];
   */
  JsonReturning?: JsonReturningJson;

  /**
   * @generated from field: pg_query.JsonValueExpr json_value_expr = 40 [json_name = "JsonValueExpr"];
   */
  JsonValueExpr?: JsonValueExprJson;

  /**
   * @generated from field: pg_query.JsonConstructorExpr json_constructor_expr = 41 [json_name = "JsonConstructorExpr"];
   */
  JsonConstructorExpr?: JsonConstructorExprJson;

  /**
   * @generated from field: pg_query.JsonIsPredicate json_is_predicate = 42 [json_name = "JsonIsPredicate"];
   */
  JsonIsPredicate?: JsonIsPredicateJson;

  /**
   * @generated from field: pg_query.NullTest null_test = 43 [json_name = "NullTest"];
   */
  NullTest?: NullTestJson;

  /**
   * @generated from field: pg_query.BooleanTest boolean_test = 44 [json_name = "BooleanTest"];
   */
  BooleanTest?: BooleanTestJson;

  /**
   * @generated from field: pg_query.CoerceToDomain coerce_to_domain = 45 [json_name = "CoerceToDomain"];
   */
  CoerceToDomain?: CoerceToDomainJson;

  /**
   * @generated from field: pg_query.CoerceToDomainValue coerce_to_domain_value = 46 [json_name = "CoerceToDomainValue"];
   */
  CoerceToDomainValue?: CoerceToDomainValueJson;

  /**
   * @generated from field: pg_query.SetToDefault set_to_default = 47 [json_name = "SetToDefault"];
   */
  SetToDefault?: SetToDefaultJson;

  /**
   * @generated from field: pg_query.CurrentOfExpr current_of_expr = 48 [json_name = "CurrentOfExpr"];
   */
  CurrentOfExpr?: CurrentOfExprJson;

  /**
   * @generated from field: pg_query.NextValueExpr next_value_expr = 49 [json_name = "NextValueExpr"];
   */
  NextValueExpr?: NextValueExprJson;

  /**
   * @generated from field: pg_query.InferenceElem inference_elem = 50 [json_name = "InferenceElem"];
   */
  InferenceElem?: InferenceElemJson;

  /**
   * @generated from field: pg_query.TargetEntry target_entry = 51 [json_name = "TargetEntry"];
   */
  TargetEntry?: TargetEntryJson;

  /**
   * @generated from field: pg_query.RangeTblRef range_tbl_ref = 52 [json_name = "RangeTblRef"];
   */
  RangeTblRef?: RangeTblRefJson;

  /**
   * @generated from field: pg_query.JoinExpr join_expr = 53 [json_name = "JoinExpr"];
   */
  JoinExpr?: JoinExprJson;

  /**
   * @generated from field: pg_query.FromExpr from_expr = 54 [json_name = "FromExpr"];
   */
  FromExpr?: FromExprJson;

  /**
   * @generated from field: pg_query.OnConflictExpr on_conflict_expr = 55 [json_name = "OnConflictExpr"];
   */
  OnConflictExpr?: OnConflictExprJson;

  /**
   * @generated from field: pg_query.Query query = 56 [json_name = "Query"];
   */
  Query?: QueryJson;

  /**
   * @generated from field: pg_query.TypeName type_name = 57 [json_name = "TypeName"];
   */
  TypeName?: TypeNameJson;

  /**
   * @generated from field: pg_query.ColumnRef column_ref = 58 [json_name = "ColumnRef"];
   */
  ColumnRef?: ColumnRefJson;

  /**
   * @generated from field: pg_query.ParamRef param_ref = 59 [json_name = "ParamRef"];
   */
  ParamRef?: ParamRefJson;

  /**
   * @generated from field: pg_query.A_Expr a_expr = 60 [json_name = "A_Expr"];
   */
  A_Expr?: A_ExprJson;

  /**
   * @generated from field: pg_query.TypeCast type_cast = 61 [json_name = "TypeCast"];
   */
  TypeCast?: TypeCastJson;

  /**
   * @generated from field: pg_query.CollateClause collate_clause = 62 [json_name = "CollateClause"];
   */
  CollateClause?: CollateClauseJson;

  /**
   * @generated from field: pg_query.RoleSpec role_spec = 63 [json_name = "RoleSpec"];
   */
  RoleSpec?: RoleSpecJson;

  /**
   * @generated from field: pg_query.FuncCall func_call = 64 [json_name = "FuncCall"];
   */
  FuncCall?: FuncCallJson;

  /**
   * @generated from field: pg_query.A_Star a_star = 65 [json_name = "A_Star"];
   */
  A_Star?: A_StarJson;

  /**
   * @generated from field: pg_query.A_Indices a_indices = 66 [json_name = "A_Indices"];
   */
  A_Indices?: A_IndicesJson;

  /**
   * @generated from field: pg_query.A_Indirection a_indirection = 67 [json_name = "A_Indirection"];
   */
  A_Indirection?: A_IndirectionJson;

  /**
   * @generated from field: pg_query.A_ArrayExpr a_array_expr = 68 [json_name = "A_ArrayExpr"];
   */
  A_ArrayExpr?: A_ArrayExprJson;

  /**
   * @generated from field: pg_query.ResTarget res_target = 69 [json_name = "ResTarget"];
   */
  ResTarget?: ResTargetJson;

  /**
   * @generated from field: pg_query.MultiAssignRef multi_assign_ref = 70 [json_name = "MultiAssignRef"];
   */
  MultiAssignRef?: MultiAssignRefJson;

  /**
   * @generated from field: pg_query.SortBy sort_by = 71 [json_name = "SortBy"];
   */
  SortBy?: SortByJson;

  /**
   * @generated from field: pg_query.WindowDef window_def = 72 [json_name = "WindowDef"];
   */
  WindowDef?: WindowDefJson;

  /**
   * @generated from field: pg_query.RangeSubselect range_subselect = 73 [json_name = "RangeSubselect"];
   */
  RangeSubselect?: RangeSubselectJson;

  /**
   * @generated from field: pg_query.RangeFunction range_function = 74 [json_name = "RangeFunction"];
   */
  RangeFunction?: RangeFunctionJson;

  /**
   * @generated from field: pg_query.RangeTableFunc range_table_func = 75 [json_name = "RangeTableFunc"];
   */
  RangeTableFunc?: RangeTableFuncJson;

  /**
   * @generated from field: pg_query.RangeTableFuncCol range_table_func_col = 76 [json_name = "RangeTableFuncCol"];
   */
  RangeTableFuncCol?: RangeTableFuncColJson;

  /**
   * @generated from field: pg_query.RangeTableSample range_table_sample = 77 [json_name = "RangeTableSample"];
   */
  RangeTableSample?: RangeTableSampleJson;

  /**
   * @generated from field: pg_query.ColumnDef column_def = 78 [json_name = "ColumnDef"];
   */
  ColumnDef?: ColumnDefJson;

  /**
   * @generated from field: pg_query.TableLikeClause table_like_clause = 79 [json_name = "TableLikeClause"];
   */
  TableLikeClause?: TableLikeClauseJson;

  /**
   * @generated from field: pg_query.IndexElem index_elem = 80 [json_name = "IndexElem"];
   */
  IndexElem?: IndexElemJson;

  /**
   * @generated from field: pg_query.DefElem def_elem = 81 [json_name = "DefElem"];
   */
  DefElem?: DefElemJson;

  /**
   * @generated from field: pg_query.LockingClause locking_clause = 82 [json_name = "LockingClause"];
   */
  LockingClause?: LockingClauseJson;

  /**
   * @generated from field: pg_query.XmlSerialize xml_serialize = 83 [json_name = "XmlSerialize"];
   */
  XmlSerialize?: XmlSerializeJson;

  /**
   * @generated from field: pg_query.PartitionElem partition_elem = 84 [json_name = "PartitionElem"];
   */
  PartitionElem?: PartitionElemJson;

  /**
   * @generated from field: pg_query.PartitionSpec partition_spec = 85 [json_name = "PartitionSpec"];
   */
  PartitionSpec?: PartitionSpecJson;

  /**
   * @generated from field: pg_query.PartitionBoundSpec partition_bound_spec = 86 [json_name = "PartitionBoundSpec"];
   */
  PartitionBoundSpec?: PartitionBoundSpecJson;

  /**
   * @generated from field: pg_query.PartitionRangeDatum partition_range_datum = 87 [json_name = "PartitionRangeDatum"];
   */
  PartitionRangeDatum?: PartitionRangeDatumJson;

  /**
   * @generated from field: pg_query.PartitionCmd partition_cmd = 88 [json_name = "PartitionCmd"];
   */
  PartitionCmd?: PartitionCmdJson;

  /**
   * @generated from field: pg_query.RangeTblEntry range_tbl_entry = 89 [json_name = "RangeTblEntry"];
   */
  RangeTblEntry?: RangeTblEntryJson;

  /**
   * @generated from field: pg_query.RTEPermissionInfo rtepermission_info = 90 [json_name = "RTEPermissionInfo"];
   */
  RTEPermissionInfo?: RTEPermissionInfoJson;

  /**
   * @generated from field: pg_query.RangeTblFunction range_tbl_function = 91 [json_name = "RangeTblFunction"];
   */
  RangeTblFunction?: RangeTblFunctionJson;

  /**
   * @generated from field: pg_query.TableSampleClause table_sample_clause = 92 [json_name = "TableSampleClause"];
   */
  TableSampleClause?: TableSampleClauseJson;

  /**
   * @generated from field: pg_query.WithCheckOption with_check_option = 93 [json_name = "WithCheckOption"];
   */
  WithCheckOption?: WithCheckOptionJson;

  /**
   * @generated from field: pg_query.SortGroupClause sort_group_clause = 94 [json_name = "SortGroupClause"];
   */
  SortGroupClause?: SortGroupClauseJson;

  /**
   * @generated from field: pg_query.GroupingSet grouping_set = 95 [json_name = "GroupingSet"];
   */
  GroupingSet?: GroupingSetJson;

  /**
   * @generated from field: pg_query.WindowClause window_clause = 96 [json_name = "WindowClause"];
   */
  WindowClause?: WindowClauseJson;

  /**
   * @generated from field: pg_query.RowMarkClause row_mark_clause = 97 [json_name = "RowMarkClause"];
   */
  RowMarkClause?: RowMarkClauseJson;

  /**
   * @generated from field: pg_query.WithClause with_clause = 98 [json_name = "WithClause"];
   */
  WithClause?: WithClauseJson;

  /**
   * @generated from field: pg_query.InferClause infer_clause = 99 [json_name = "InferClause"];
   */
  InferClause?: InferClauseJson;

  /**
   * @generated from field: pg_query.OnConflictClause on_conflict_clause = 100 [json_name = "OnConflictClause"];
   */
  OnConflictClause?: OnConflictClauseJson;

  /**
   * @generated from field: pg_query.CTESearchClause ctesearch_clause = 101 [json_name = "CTESearchClause"];
   */
  CTESearchClause?: CTESearchClauseJson;

  /**
   * @generated from field: pg_query.CTECycleClause ctecycle_clause = 102 [json_name = "CTECycleClause"];
   */
  CTECycleClause?: CTECycleClauseJson;

  /**
   * @generated from field: pg_query.CommonTableExpr common_table_expr = 103 [json_name = "CommonTableExpr"];
   */
  CommonTableExpr?: CommonTableExprJson;

  /**
   * @generated from field: pg_query.MergeWhenClause merge_when_clause = 104 [json_name = "MergeWhenClause"];
   */
  MergeWhenClause?: MergeWhenClauseJson;

  /**
   * @generated from field: pg_query.MergeAction merge_action = 105 [json_name = "MergeAction"];
   */
  MergeAction?: MergeActionJson;

  /**
   * @generated from field: pg_query.TriggerTransition trigger_transition = 106 [json_name = "TriggerTransition"];
   */
  TriggerTransition?: TriggerTransitionJson;

  /**
   * @generated from field: pg_query.JsonOutput json_output = 107 [json_name = "JsonOutput"];
   */
  JsonOutput?: JsonOutputJson;

  /**
   * @generated from field: pg_query.JsonKeyValue json_key_value = 108 [json_name = "JsonKeyValue"];
   */
  JsonKeyValue?: JsonKeyValueJson;

  /**
   * @generated from field: pg_query.JsonObjectConstructor json_object_constructor = 109 [json_name = "JsonObjectConstructor"];
   */
  JsonObjectConstructor?: JsonObjectConstructorJson;

  /**
   * @generated from field: pg_query.JsonArrayConstructor json_array_constructor = 110 [json_name = "JsonArrayConstructor"];
   */
  JsonArrayConstructor?: JsonArrayConstructorJson;

  /**
   * @generated from field: pg_query.JsonArrayQueryConstructor json_array_query_constructor = 111 [json_name = "JsonArrayQueryConstructor"];
   */
  JsonArrayQueryConstructor?: JsonArrayQueryConstructorJson;

  /**
   * @generated from field: pg_query.JsonAggConstructor json_agg_constructor = 112 [json_name = "JsonAggConstructor"];
   */
  JsonAggConstructor?: JsonAggConstructorJson;

  /**
   * @generated from field: pg_query.JsonObjectAgg json_object_agg = 113 [json_name = "JsonObjectAgg"];
   */
  JsonObjectAgg?: JsonObjectAggJson;

  /**
   * @generated from field: pg_query.JsonArrayAgg json_array_agg = 114 [json_name = "JsonArrayAgg"];
   */
  JsonArrayAgg?: JsonArrayAggJson;

  /**
   * @generated from field: pg_query.RawStmt raw_stmt = 115 [json_name = "RawStmt"];
   */
  RawStmt?: RawStmtJson;

  /**
   * @generated from field: pg_query.InsertStmt insert_stmt = 116 [json_name = "InsertStmt"];
   */
  InsertStmt?: InsertStmtJson;

  /**
   * @generated from field: pg_query.DeleteStmt delete_stmt = 117 [json_name = "DeleteStmt"];
   */
  DeleteStmt?: DeleteStmtJson;

  /**
   * @generated from field: pg_query.UpdateStmt update_stmt = 118 [json_name = "UpdateStmt"];
   */
  UpdateStmt?: UpdateStmtJson;

  /**
   * @generated from field: pg_query.MergeStmt merge_stmt = 119 [json_name = "MergeStmt"];
   */
  MergeStmt?: MergeStmtJson;

  /**
   * @generated from field: pg_query.SelectStmt select_stmt = 120 [json_name = "SelectStmt"];
   */
  SelectStmt?: SelectStmtJson;

  /**
   * @generated from field: pg_query.SetOperationStmt set_operation_stmt = 121 [json_name = "SetOperationStmt"];
   */
  SetOperationStmt?: SetOperationStmtJson;

  /**
   * @generated from field: pg_query.ReturnStmt return_stmt = 122 [json_name = "ReturnStmt"];
   */
  ReturnStmt?: ReturnStmtJson;

  /**
   * @generated from field: pg_query.PLAssignStmt plassign_stmt = 123 [json_name = "PLAssignStmt"];
   */
  PLAssignStmt?: PLAssignStmtJson;

  /**
   * @generated from field: pg_query.CreateSchemaStmt create_schema_stmt = 124 [json_name = "CreateSchemaStmt"];
   */
  CreateSchemaStmt?: CreateSchemaStmtJson;

  /**
   * @generated from field: pg_query.AlterTableStmt alter_table_stmt = 125 [json_name = "AlterTableStmt"];
   */
  AlterTableStmt?: AlterTableStmtJson;

  /**
   * @generated from field: pg_query.ReplicaIdentityStmt replica_identity_stmt = 126 [json_name = "ReplicaIdentityStmt"];
   */
  ReplicaIdentityStmt?: ReplicaIdentityStmtJson;

  /**
   * @generated from field: pg_query.AlterTableCmd alter_table_cmd = 127 [json_name = "AlterTableCmd"];
   */
  AlterTableCmd?: AlterTableCmdJson;

  /**
   * @generated from field: pg_query.AlterCollationStmt alter_collation_stmt = 128 [json_name = "AlterCollationStmt"];
   */
  AlterCollationStmt?: AlterCollationStmtJson;

  /**
   * @generated from field: pg_query.AlterDomainStmt alter_domain_stmt = 129 [json_name = "AlterDomainStmt"];
   */
  AlterDomainStmt?: AlterDomainStmtJson;

  /**
   * @generated from field: pg_query.GrantStmt grant_stmt = 130 [json_name = "GrantStmt"];
   */
  GrantStmt?: GrantStmtJson;

  /**
   * @generated from field: pg_query.ObjectWithArgs object_with_args = 131 [json_name = "ObjectWithArgs"];
   */
  ObjectWithArgs?: ObjectWithArgsJson;

  /**
   * @generated from field: pg_query.AccessPriv access_priv = 132 [json_name = "AccessPriv"];
   */
  AccessPriv?: AccessPrivJson;

  /**
   * @generated from field: pg_query.GrantRoleStmt grant_role_stmt = 133 [json_name = "GrantRoleStmt"];
   */
  GrantRoleStmt?: GrantRoleStmtJson;

  /**
   * @generated from field: pg_query.AlterDefaultPrivilegesStmt alter_default_privileges_stmt = 134 [json_name = "AlterDefaultPrivilegesStmt"];
   */
  AlterDefaultPrivilegesStmt?: AlterDefaultPrivilegesStmtJson;

  /**
   * @generated from field: pg_query.CopyStmt copy_stmt = 135 [json_name = "CopyStmt"];
   */
  CopyStmt?: CopyStmtJson;

  /**
   * @generated from field: pg_query.VariableSetStmt variable_set_stmt = 136 [json_name = "VariableSetStmt"];
   */
  VariableSetStmt?: VariableSetStmtJson;

  /**
   * @generated from field: pg_query.VariableShowStmt variable_show_stmt = 137 [json_name = "VariableShowStmt"];
   */
  VariableShowStmt?: VariableShowStmtJson;

  /**
   * @generated from field: pg_query.CreateStmt create_stmt = 138 [json_name = "CreateStmt"];
   */
  CreateStmt?: CreateStmtJson;

  /**
   * @generated from field: pg_query.Constraint constraint = 139 [json_name = "Constraint"];
   */
  Constraint?: ConstraintJson;

  /**
   * @generated from field: pg_query.CreateTableSpaceStmt create_table_space_stmt = 140 [json_name = "CreateTableSpaceStmt"];
   */
  CreateTableSpaceStmt?: CreateTableSpaceStmtJson;

  /**
   * @generated from field: pg_query.DropTableSpaceStmt drop_table_space_stmt = 141 [json_name = "DropTableSpaceStmt"];
   */
  DropTableSpaceStmt?: DropTableSpaceStmtJson;

  /**
   * @generated from field: pg_query.AlterTableSpaceOptionsStmt alter_table_space_options_stmt = 142 [json_name = "AlterTableSpaceOptionsStmt"];
   */
  AlterTableSpaceOptionsStmt?: AlterTableSpaceOptionsStmtJson;

  /**
   * @generated from field: pg_query.AlterTableMoveAllStmt alter_table_move_all_stmt = 143 [json_name = "AlterTableMoveAllStmt"];
   */
  AlterTableMoveAllStmt?: AlterTableMoveAllStmtJson;

  /**
   * @generated from field: pg_query.CreateExtensionStmt create_extension_stmt = 144 [json_name = "CreateExtensionStmt"];
   */
  CreateExtensionStmt?: CreateExtensionStmtJson;

  /**
   * @generated from field: pg_query.AlterExtensionStmt alter_extension_stmt = 145 [json_name = "AlterExtensionStmt"];
   */
  AlterExtensionStmt?: AlterExtensionStmtJson;

  /**
   * @generated from field: pg_query.AlterExtensionContentsStmt alter_extension_contents_stmt = 146 [json_name = "AlterExtensionContentsStmt"];
   */
  AlterExtensionContentsStmt?: AlterExtensionContentsStmtJson;

  /**
   * @generated from field: pg_query.CreateFdwStmt create_fdw_stmt = 147 [json_name = "CreateFdwStmt"];
   */
  CreateFdwStmt?: CreateFdwStmtJson;

  /**
   * @generated from field: pg_query.AlterFdwStmt alter_fdw_stmt = 148 [json_name = "AlterFdwStmt"];
   */
  AlterFdwStmt?: AlterFdwStmtJson;

  /**
   * @generated from field: pg_query.CreateForeignServerStmt create_foreign_server_stmt = 149 [json_name = "CreateForeignServerStmt"];
   */
  CreateForeignServerStmt?: CreateForeignServerStmtJson;

  /**
   * @generated from field: pg_query.AlterForeignServerStmt alter_foreign_server_stmt = 150 [json_name = "AlterForeignServerStmt"];
   */
  AlterForeignServerStmt?: AlterForeignServerStmtJson;

  /**
   * @generated from field: pg_query.CreateForeignTableStmt create_foreign_table_stmt = 151 [json_name = "CreateForeignTableStmt"];
   */
  CreateForeignTableStmt?: CreateForeignTableStmtJson;

  /**
   * @generated from field: pg_query.CreateUserMappingStmt create_user_mapping_stmt = 152 [json_name = "CreateUserMappingStmt"];
   */
  CreateUserMappingStmt?: CreateUserMappingStmtJson;

  /**
   * @generated from field: pg_query.AlterUserMappingStmt alter_user_mapping_stmt = 153 [json_name = "AlterUserMappingStmt"];
   */
  AlterUserMappingStmt?: AlterUserMappingStmtJson;

  /**
   * @generated from field: pg_query.DropUserMappingStmt drop_user_mapping_stmt = 154 [json_name = "DropUserMappingStmt"];
   */
  DropUserMappingStmt?: DropUserMappingStmtJson;

  /**
   * @generated from field: pg_query.ImportForeignSchemaStmt import_foreign_schema_stmt = 155 [json_name = "ImportForeignSchemaStmt"];
   */
  ImportForeignSchemaStmt?: ImportForeignSchemaStmtJson;

  /**
   * @generated from field: pg_query.CreatePolicyStmt create_policy_stmt = 156 [json_name = "CreatePolicyStmt"];
   */
  CreatePolicyStmt?: CreatePolicyStmtJson;

  /**
   * @generated from field: pg_query.AlterPolicyStmt alter_policy_stmt = 157 [json_name = "AlterPolicyStmt"];
   */
  AlterPolicyStmt?: AlterPolicyStmtJson;

  /**
   * @generated from field: pg_query.CreateAmStmt create_am_stmt = 158 [json_name = "CreateAmStmt"];
   */
  CreateAmStmt?: CreateAmStmtJson;

  /**
   * @generated from field: pg_query.CreateTrigStmt create_trig_stmt = 159 [json_name = "CreateTrigStmt"];
   */
  CreateTrigStmt?: CreateTrigStmtJson;

  /**
   * @generated from field: pg_query.CreateEventTrigStmt create_event_trig_stmt = 160 [json_name = "CreateEventTrigStmt"];
   */
  CreateEventTrigStmt?: CreateEventTrigStmtJson;

  /**
   * @generated from field: pg_query.AlterEventTrigStmt alter_event_trig_stmt = 161 [json_name = "AlterEventTrigStmt"];
   */
  AlterEventTrigStmt?: AlterEventTrigStmtJson;

  /**
   * @generated from field: pg_query.CreatePLangStmt create_plang_stmt = 162 [json_name = "CreatePLangStmt"];
   */
  CreatePLangStmt?: CreatePLangStmtJson;

  /**
   * @generated from field: pg_query.CreateRoleStmt create_role_stmt = 163 [json_name = "CreateRoleStmt"];
   */
  CreateRoleStmt?: CreateRoleStmtJson;

  /**
   * @generated from field: pg_query.AlterRoleStmt alter_role_stmt = 164 [json_name = "AlterRoleStmt"];
   */
  AlterRoleStmt?: AlterRoleStmtJson;

  /**
   * @generated from field: pg_query.AlterRoleSetStmt alter_role_set_stmt = 165 [json_name = "AlterRoleSetStmt"];
   */
  AlterRoleSetStmt?: AlterRoleSetStmtJson;

  /**
   * @generated from field: pg_query.DropRoleStmt drop_role_stmt = 166 [json_name = "DropRoleStmt"];
   */
  DropRoleStmt?: DropRoleStmtJson;

  /**
   * @generated from field: pg_query.CreateSeqStmt create_seq_stmt = 167 [json_name = "CreateSeqStmt"];
   */
  CreateSeqStmt?: CreateSeqStmtJson;

  /**
   * @generated from field: pg_query.AlterSeqStmt alter_seq_stmt = 168 [json_name = "AlterSeqStmt"];
   */
  AlterSeqStmt?: AlterSeqStmtJson;

  /**
   * @generated from field: pg_query.DefineStmt define_stmt = 169 [json_name = "DefineStmt"];
   */
  DefineStmt?: DefineStmtJson;

  /**
   * @generated from field: pg_query.CreateDomainStmt create_domain_stmt = 170 [json_name = "CreateDomainStmt"];
   */
  CreateDomainStmt?: CreateDomainStmtJson;

  /**
   * @generated from field: pg_query.CreateOpClassStmt create_op_class_stmt = 171 [json_name = "CreateOpClassStmt"];
   */
  CreateOpClassStmt?: CreateOpClassStmtJson;

  /**
   * @generated from field: pg_query.CreateOpClassItem create_op_class_item = 172 [json_name = "CreateOpClassItem"];
   */
  CreateOpClassItem?: CreateOpClassItemJson;

  /**
   * @generated from field: pg_query.CreateOpFamilyStmt create_op_family_stmt = 173 [json_name = "CreateOpFamilyStmt"];
   */
  CreateOpFamilyStmt?: CreateOpFamilyStmtJson;

  /**
   * @generated from field: pg_query.AlterOpFamilyStmt alter_op_family_stmt = 174 [json_name = "AlterOpFamilyStmt"];
   */
  AlterOpFamilyStmt?: AlterOpFamilyStmtJson;

  /**
   * @generated from field: pg_query.DropStmt drop_stmt = 175 [json_name = "DropStmt"];
   */
  DropStmt?: DropStmtJson;

  /**
   * @generated from field: pg_query.TruncateStmt truncate_stmt = 176 [json_name = "TruncateStmt"];
   */
  TruncateStmt?: TruncateStmtJson;

  /**
   * @generated from field: pg_query.CommentStmt comment_stmt = 177 [json_name = "CommentStmt"];
   */
  CommentStmt?: CommentStmtJson;

  /**
   * @generated from field: pg_query.SecLabelStmt sec_label_stmt = 178 [json_name = "SecLabelStmt"];
   */
  SecLabelStmt?: SecLabelStmtJson;

  /**
   * @generated from field: pg_query.DeclareCursorStmt declare_cursor_stmt = 179 [json_name = "DeclareCursorStmt"];
   */
  DeclareCursorStmt?: DeclareCursorStmtJson;

  /**
   * @generated from field: pg_query.ClosePortalStmt close_portal_stmt = 180 [json_name = "ClosePortalStmt"];
   */
  ClosePortalStmt?: ClosePortalStmtJson;

  /**
   * @generated from field: pg_query.FetchStmt fetch_stmt = 181 [json_name = "FetchStmt"];
   */
  FetchStmt?: FetchStmtJson;

  /**
   * @generated from field: pg_query.IndexStmt index_stmt = 182 [json_name = "IndexStmt"];
   */
  IndexStmt?: IndexStmtJson;

  /**
   * @generated from field: pg_query.CreateStatsStmt create_stats_stmt = 183 [json_name = "CreateStatsStmt"];
   */
  CreateStatsStmt?: CreateStatsStmtJson;

  /**
   * @generated from field: pg_query.StatsElem stats_elem = 184 [json_name = "StatsElem"];
   */
  StatsElem?: StatsElemJson;

  /**
   * @generated from field: pg_query.AlterStatsStmt alter_stats_stmt = 185 [json_name = "AlterStatsStmt"];
   */
  AlterStatsStmt?: AlterStatsStmtJson;

  /**
   * @generated from field: pg_query.CreateFunctionStmt create_function_stmt = 186 [json_name = "CreateFunctionStmt"];
   */
  CreateFunctionStmt?: CreateFunctionStmtJson;

  /**
   * @generated from field: pg_query.FunctionParameter function_parameter = 187 [json_name = "FunctionParameter"];
   */
  FunctionParameter?: FunctionParameterJson;

  /**
   * @generated from field: pg_query.AlterFunctionStmt alter_function_stmt = 188 [json_name = "AlterFunctionStmt"];
   */
  AlterFunctionStmt?: AlterFunctionStmtJson;

  /**
   * @generated from field: pg_query.DoStmt do_stmt = 189 [json_name = "DoStmt"];
   */
  DoStmt?: DoStmtJson;

  /**
   * @generated from field: pg_query.InlineCodeBlock inline_code_block = 190 [json_name = "InlineCodeBlock"];
   */
  InlineCodeBlock?: InlineCodeBlockJson;

  /**
   * @generated from field: pg_query.CallStmt call_stmt = 191 [json_name = "CallStmt"];
   */
  CallStmt?: CallStmtJson;

  /**
   * @generated from field: pg_query.CallContext call_context = 192 [json_name = "CallContext"];
   */
  CallContext?: CallContextJson;

  /**
   * @generated from field: pg_query.RenameStmt rename_stmt = 193 [json_name = "RenameStmt"];
   */
  RenameStmt?: RenameStmtJson;

  /**
   * @generated from field: pg_query.AlterObjectDependsStmt alter_object_depends_stmt = 194 [json_name = "AlterObjectDependsStmt"];
   */
  AlterObjectDependsStmt?: AlterObjectDependsStmtJson;

  /**
   * @generated from field: pg_query.AlterObjectSchemaStmt alter_object_schema_stmt = 195 [json_name = "AlterObjectSchemaStmt"];
   */
  AlterObjectSchemaStmt?: AlterObjectSchemaStmtJson;

  /**
   * @generated from field: pg_query.AlterOwnerStmt alter_owner_stmt = 196 [json_name = "AlterOwnerStmt"];
   */
  AlterOwnerStmt?: AlterOwnerStmtJson;

  /**
   * @generated from field: pg_query.AlterOperatorStmt alter_operator_stmt = 197 [json_name = "AlterOperatorStmt"];
   */
  AlterOperatorStmt?: AlterOperatorStmtJson;

  /**
   * @generated from field: pg_query.AlterTypeStmt alter_type_stmt = 198 [json_name = "AlterTypeStmt"];
   */
  AlterTypeStmt?: AlterTypeStmtJson;

  /**
   * @generated from field: pg_query.RuleStmt rule_stmt = 199 [json_name = "RuleStmt"];
   */
  RuleStmt?: RuleStmtJson;

  /**
   * @generated from field: pg_query.NotifyStmt notify_stmt = 200 [json_name = "NotifyStmt"];
   */
  NotifyStmt?: NotifyStmtJson;

  /**
   * @generated from field: pg_query.ListenStmt listen_stmt = 201 [json_name = "ListenStmt"];
   */
  ListenStmt?: ListenStmtJson;

  /**
   * @generated from field: pg_query.UnlistenStmt unlisten_stmt = 202 [json_name = "UnlistenStmt"];
   */
  UnlistenStmt?: UnlistenStmtJson;

  /**
   * @generated from field: pg_query.TransactionStmt transaction_stmt = 203 [json_name = "TransactionStmt"];
   */
  TransactionStmt?: TransactionStmtJson;

  /**
   * @generated from field: pg_query.CompositeTypeStmt composite_type_stmt = 204 [json_name = "CompositeTypeStmt"];
   */
  CompositeTypeStmt?: CompositeTypeStmtJson;

  /**
   * @generated from field: pg_query.CreateEnumStmt create_enum_stmt = 205 [json_name = "CreateEnumStmt"];
   */
  CreateEnumStmt?: CreateEnumStmtJson;

  /**
   * @generated from field: pg_query.CreateRangeStmt create_range_stmt = 206 [json_name = "CreateRangeStmt"];
   */
  CreateRangeStmt?: CreateRangeStmtJson;

  /**
   * @generated from field: pg_query.AlterEnumStmt alter_enum_stmt = 207 [json_name = "AlterEnumStmt"];
   */
  AlterEnumStmt?: AlterEnumStmtJson;

  /**
   * @generated from field: pg_query.ViewStmt view_stmt = 208 [json_name = "ViewStmt"];
   */
  ViewStmt?: ViewStmtJson;

  /**
   * @generated from field: pg_query.LoadStmt load_stmt = 209 [json_name = "LoadStmt"];
   */
  LoadStmt?: LoadStmtJson;

  /**
   * @generated from field: pg_query.CreatedbStmt createdb_stmt = 210 [json_name = "CreatedbStmt"];
   */
  CreatedbStmt?: CreatedbStmtJson;

  /**
   * @generated from field: pg_query.AlterDatabaseStmt alter_database_stmt = 211 [json_name = "AlterDatabaseStmt"];
   */
  AlterDatabaseStmt?: AlterDatabaseStmtJson;

  /**
   * @generated from field: pg_query.AlterDatabaseRefreshCollStmt alter_database_refresh_coll_stmt = 212 [json_name = "AlterDatabaseRefreshCollStmt"];
   */
  AlterDatabaseRefreshCollStmt?: AlterDatabaseRefreshCollStmtJson;

  /**
   * @generated from field: pg_query.AlterDatabaseSetStmt alter_database_set_stmt = 213 [json_name = "AlterDatabaseSetStmt"];
   */
  AlterDatabaseSetStmt?: AlterDatabaseSetStmtJson;

  /**
   * @generated from field: pg_query.DropdbStmt dropdb_stmt = 214 [json_name = "DropdbStmt"];
   */
  DropdbStmt?: DropdbStmtJson;

  /**
   * @generated from field: pg_query.AlterSystemStmt alter_system_stmt = 215 [json_name = "AlterSystemStmt"];
   */
  AlterSystemStmt?: AlterSystemStmtJson;

  /**
   * @generated from field: pg_query.ClusterStmt cluster_stmt = 216 [json_name = "ClusterStmt"];
   */
  ClusterStmt?: ClusterStmtJson;

  /**
   * @generated from field: pg_query.VacuumStmt vacuum_stmt = 217 [json_name = "VacuumStmt"];
   */
  VacuumStmt?: VacuumStmtJson;

  /**
   * @generated from field: pg_query.VacuumRelation vacuum_relation = 218 [json_name = "VacuumRelation"];
   */
  VacuumRelation?: VacuumRelationJson;

  /**
   * @generated from field: pg_query.ExplainStmt explain_stmt = 219 [json_name = "ExplainStmt"];
   */
  ExplainStmt?: ExplainStmtJson;

  /**
   * @generated from field: pg_query.CreateTableAsStmt create_table_as_stmt = 220 [json_name = "CreateTableAsStmt"];
   */
  CreateTableAsStmt?: CreateTableAsStmtJson;

  /**
   * @generated from field: pg_query.RefreshMatViewStmt refresh_mat_view_stmt = 221 [json_name = "RefreshMatViewStmt"];
   */
  RefreshMatViewStmt?: RefreshMatViewStmtJson;

  /**
   * @generated from field: pg_query.CheckPointStmt check_point_stmt = 222 [json_name = "CheckPointStmt"];
   */
  CheckPointStmt?: CheckPointStmtJson;

  /**
   * @generated from field: pg_query.DiscardStmt discard_stmt = 223 [json_name = "DiscardStmt"];
   */
  DiscardStmt?: DiscardStmtJson;

  /**
   * @generated from field: pg_query.LockStmt lock_stmt = 224 [json_name = "LockStmt"];
   */
  LockStmt?: LockStmtJson;

  /**
   * @generated from field: pg_query.ConstraintsSetStmt constraints_set_stmt = 225 [json_name = "ConstraintsSetStmt"];
   */
  ConstraintsSetStmt?: ConstraintsSetStmtJson;

  /**
   * @generated from field: pg_query.ReindexStmt reindex_stmt = 226 [json_name = "ReindexStmt"];
   */
  ReindexStmt?: ReindexStmtJson;

  /**
   * @generated from field: pg_query.CreateConversionStmt create_conversion_stmt = 227 [json_name = "CreateConversionStmt"];
   */
  CreateConversionStmt?: CreateConversionStmtJson;

  /**
   * @generated from field: pg_query.CreateCastStmt create_cast_stmt = 228 [json_name = "CreateCastStmt"];
   */
  CreateCastStmt?: CreateCastStmtJson;

  /**
   * @generated from field: pg_query.CreateTransformStmt create_transform_stmt = 229 [json_name = "CreateTransformStmt"];
   */
  CreateTransformStmt?: CreateTransformStmtJson;

  /**
   * @generated from field: pg_query.PrepareStmt prepare_stmt = 230 [json_name = "PrepareStmt"];
   */
  PrepareStmt?: PrepareStmtJson;

  /**
   * @generated from field: pg_query.ExecuteStmt execute_stmt = 231 [json_name = "ExecuteStmt"];
   */
  ExecuteStmt?: ExecuteStmtJson;

  /**
   * @generated from field: pg_query.DeallocateStmt deallocate_stmt = 232 [json_name = "DeallocateStmt"];
   */
  DeallocateStmt?: DeallocateStmtJson;

  /**
   * @generated from field: pg_query.DropOwnedStmt drop_owned_stmt = 233 [json_name = "DropOwnedStmt"];
   */
  DropOwnedStmt?: DropOwnedStmtJson;

  /**
   * @generated from field: pg_query.ReassignOwnedStmt reassign_owned_stmt = 234 [json_name = "ReassignOwnedStmt"];
   */
  ReassignOwnedStmt?: ReassignOwnedStmtJson;

  /**
   * @generated from field: pg_query.AlterTSDictionaryStmt alter_tsdictionary_stmt = 235 [json_name = "AlterTSDictionaryStmt"];
   */
  AlterTSDictionaryStmt?: AlterTSDictionaryStmtJson;

  /**
   * @generated from field: pg_query.AlterTSConfigurationStmt alter_tsconfiguration_stmt = 236 [json_name = "AlterTSConfigurationStmt"];
   */
  AlterTSConfigurationStmt?: AlterTSConfigurationStmtJson;

  /**
   * @generated from field: pg_query.PublicationTable publication_table = 237 [json_name = "PublicationTable"];
   */
  PublicationTable?: PublicationTableJson;

  /**
   * @generated from field: pg_query.PublicationObjSpec publication_obj_spec = 238 [json_name = "PublicationObjSpec"];
   */
  PublicationObjSpec?: PublicationObjSpecJson;

  /**
   * @generated from field: pg_query.CreatePublicationStmt create_publication_stmt = 239 [json_name = "CreatePublicationStmt"];
   */
  CreatePublicationStmt?: CreatePublicationStmtJson;

  /**
   * @generated from field: pg_query.AlterPublicationStmt alter_publication_stmt = 240 [json_name = "AlterPublicationStmt"];
   */
  AlterPublicationStmt?: AlterPublicationStmtJson;

  /**
   * @generated from field: pg_query.CreateSubscriptionStmt create_subscription_stmt = 241 [json_name = "CreateSubscriptionStmt"];
   */
  CreateSubscriptionStmt?: CreateSubscriptionStmtJson;

  /**
   * @generated from field: pg_query.AlterSubscriptionStmt alter_subscription_stmt = 242 [json_name = "AlterSubscriptionStmt"];
   */
  AlterSubscriptionStmt?: AlterSubscriptionStmtJson;

  /**
   * @generated from field: pg_query.DropSubscriptionStmt drop_subscription_stmt = 243 [json_name = "DropSubscriptionStmt"];
   */
  DropSubscriptionStmt?: DropSubscriptionStmtJson;

  /**
   * @generated from field: pg_query.Integer integer = 244 [json_name = "Integer"];
   */
  Integer?: IntegerJson;

  /**
   * @generated from field: pg_query.Float float = 245 [json_name = "Float"];
   */
  Float?: FloatJson;

  /**
   * @generated from field: pg_query.Boolean boolean = 246 [json_name = "Boolean"];
   */
  Boolean?: BooleanJson;

  /**
   * @generated from field: pg_query.String string = 247 [json_name = "String"];
   */
  String?: StringJson;

  /**
   * @generated from field: pg_query.BitString bit_string = 248 [json_name = "BitString"];
   */
  BitString?: BitStringJson;

  /**
   * @generated from field: pg_query.List list = 249 [json_name = "List"];
   */
  List?: ListJson;

  /**
   * @generated from field: pg_query.IntList int_list = 250 [json_name = "IntList"];
   */
  IntList?: IntListJson;

  /**
   * @generated from field: pg_query.OidList oid_list = 251 [json_name = "OidList"];
   */
  OidList?: OidListJson;

  /**
   * @generated from field: pg_query.A_Const a_const = 252 [json_name = "A_Const"];
   */
  A_Const?: A_ConstJson;
};

/**
 * Describes the message pg_query.Node.
 * Use `create(NodeSchema)` to create a new message.
 */
export const NodeSchema: GenMessage<Node, NodeJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 2);

/**
 * @generated from message pg_query.Integer
 */
export type Integer = Message<"pg_query.Integer"> & {
  /**
   * machine integer 
   *
   * @generated from field: int32 ival = 1;
   */
  ival: number;
};

/**
 * @generated from message pg_query.Integer
 */
export type IntegerJson = {
  /**
   * machine integer 
   *
   * @generated from field: int32 ival = 1;
   */
  ival?: number;
};

/**
 * Describes the message pg_query.Integer.
 * Use `create(IntegerSchema)` to create a new message.
 */
export const IntegerSchema: GenMessage<Integer, IntegerJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 3);

/**
 * @generated from message pg_query.Float
 */
export type Float = Message<"pg_query.Float"> & {
  /**
   * string 
   *
   * @generated from field: string fval = 1;
   */
  fval: string;
};

/**
 * @generated from message pg_query.Float
 */
export type FloatJson = {
  /**
   * string 
   *
   * @generated from field: string fval = 1;
   */
  fval?: string;
};

/**
 * Describes the message pg_query.Float.
 * Use `create(FloatSchema)` to create a new message.
 */
export const FloatSchema: GenMessage<Float, FloatJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 4);

/**
 * @generated from message pg_query.Boolean
 */
export type Boolean = Message<"pg_query.Boolean"> & {
  /**
   * @generated from field: bool boolval = 1;
   */
  boolval: boolean;
};

/**
 * @generated from message pg_query.Boolean
 */
export type BooleanJson = {
  /**
   * @generated from field: bool boolval = 1;
   */
  boolval?: boolean;
};

/**
 * Describes the message pg_query.Boolean.
 * Use `create(BooleanSchema)` to create a new message.
 */
export const BooleanSchema: GenMessage<Boolean, BooleanJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 5);

/**
 * @generated from message pg_query.String
 */
export type String = Message<"pg_query.String"> & {
  /**
   * string 
   *
   * @generated from field: string sval = 1;
   */
  sval: string;
};

/**
 * @generated from message pg_query.String
 */
export type StringJson = {
  /**
   * string 
   *
   * @generated from field: string sval = 1;
   */
  sval?: string;
};

/**
 * Describes the message pg_query.String.
 * Use `create(StringSchema)` to create a new message.
 */
export const StringSchema: GenMessage<String, StringJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 6);

/**
 * @generated from message pg_query.BitString
 */
export type BitString = Message<"pg_query.BitString"> & {
  /**
   * string 
   *
   * @generated from field: string bsval = 1;
   */
  bsval: string;
};

/**
 * @generated from message pg_query.BitString
 */
export type BitStringJson = {
  /**
   * string 
   *
   * @generated from field: string bsval = 1;
   */
  bsval?: string;
};

/**
 * Describes the message pg_query.BitString.
 * Use `create(BitStringSchema)` to create a new message.
 */
export const BitStringSchema: GenMessage<BitString, BitStringJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 7);

/**
 * @generated from message pg_query.List
 */
export type List = Message<"pg_query.List"> & {
  /**
   * @generated from field: repeated pg_query.Node items = 1;
   */
  items: Node[];
};

/**
 * @generated from message pg_query.List
 */
export type ListJson = {
  /**
   * @generated from field: repeated pg_query.Node items = 1;
   */
  items?: NodeJson[];
};

/**
 * Describes the message pg_query.List.
 * Use `create(ListSchema)` to create a new message.
 */
export const ListSchema: GenMessage<List, ListJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 8);

/**
 * @generated from message pg_query.OidList
 */
export type OidList = Message<"pg_query.OidList"> & {
  /**
   * @generated from field: repeated pg_query.Node items = 1;
   */
  items: Node[];
};

/**
 * @generated from message pg_query.OidList
 */
export type OidListJson = {
  /**
   * @generated from field: repeated pg_query.Node items = 1;
   */
  items?: NodeJson[];
};

/**
 * Describes the message pg_query.OidList.
 * Use `create(OidListSchema)` to create a new message.
 */
export const OidListSchema: GenMessage<OidList, OidListJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 9);

/**
 * @generated from message pg_query.IntList
 */
export type IntList = Message<"pg_query.IntList"> & {
  /**
   * @generated from field: repeated pg_query.Node items = 1;
   */
  items: Node[];
};

/**
 * @generated from message pg_query.IntList
 */
export type IntListJson = {
  /**
   * @generated from field: repeated pg_query.Node items = 1;
   */
  items?: NodeJson[];
};

/**
 * Describes the message pg_query.IntList.
 * Use `create(IntListSchema)` to create a new message.
 */
export const IntListSchema: GenMessage<IntList, IntListJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 10);

/**
 * @generated from message pg_query.A_Const
 */
export type A_Const = Message<"pg_query.A_Const"> & {
  /**
   * @generated from oneof pg_query.A_Const.val
   */
  val: {
    /**
     * @generated from field: pg_query.Integer ival = 1;
     */
    value: Integer;
    case: "ival";
  } | {
    /**
     * @generated from field: pg_query.Float fval = 2;
     */
    value: Float;
    case: "fval";
  } | {
    /**
     * @generated from field: pg_query.Boolean boolval = 3;
     */
    value: Boolean;
    case: "boolval";
  } | {
    /**
     * @generated from field: pg_query.String sval = 4;
     */
    value: String;
    case: "sval";
  } | {
    /**
     * @generated from field: pg_query.BitString bsval = 5;
     */
    value: BitString;
    case: "bsval";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: bool isnull = 10;
   */
  isnull: boolean;

  /**
   * @generated from field: int32 location = 11;
   */
  location: number;
};

/**
 * @generated from message pg_query.A_Const
 */
export type A_ConstJson = {
  /**
   * @generated from field: pg_query.Integer ival = 1;
   */
  ival?: IntegerJson;

  /**
   * @generated from field: pg_query.Float fval = 2;
   */
  fval?: FloatJson;

  /**
   * @generated from field: pg_query.Boolean boolval = 3;
   */
  boolval?: BooleanJson;

  /**
   * @generated from field: pg_query.String sval = 4;
   */
  sval?: StringJson;

  /**
   * @generated from field: pg_query.BitString bsval = 5;
   */
  bsval?: BitStringJson;

  /**
   * @generated from field: bool isnull = 10;
   */
  isnull?: boolean;

  /**
   * @generated from field: int32 location = 11;
   */
  location?: number;
};

/**
 * Describes the message pg_query.A_Const.
 * Use `create(A_ConstSchema)` to create a new message.
 */
export const A_ConstSchema: GenMessage<A_Const, A_ConstJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 11);

/**
 * @generated from message pg_query.Alias
 */
export type Alias = Message<"pg_query.Alias"> & {
  /**
   * @generated from field: string aliasname = 1;
   */
  aliasname: string;

  /**
   * @generated from field: repeated pg_query.Node colnames = 2;
   */
  colnames: Node[];
};

/**
 * @generated from message pg_query.Alias
 */
export type AliasJson = {
  /**
   * @generated from field: string aliasname = 1;
   */
  aliasname?: string;

  /**
   * @generated from field: repeated pg_query.Node colnames = 2;
   */
  colnames?: NodeJson[];
};

/**
 * Describes the message pg_query.Alias.
 * Use `create(AliasSchema)` to create a new message.
 */
export const AliasSchema: GenMessage<Alias, AliasJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 12);

/**
 * @generated from message pg_query.RangeVar
 */
export type RangeVar = Message<"pg_query.RangeVar"> & {
  /**
   * @generated from field: string catalogname = 1;
   */
  catalogname: string;

  /**
   * @generated from field: string schemaname = 2;
   */
  schemaname: string;

  /**
   * @generated from field: string relname = 3;
   */
  relname: string;

  /**
   * @generated from field: bool inh = 4;
   */
  inh: boolean;

  /**
   * @generated from field: string relpersistence = 5;
   */
  relpersistence: string;

  /**
   * @generated from field: pg_query.Alias alias = 6;
   */
  alias?: Alias;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * @generated from message pg_query.RangeVar
 */
export type RangeVarJson = {
  /**
   * @generated from field: string catalogname = 1;
   */
  catalogname?: string;

  /**
   * @generated from field: string schemaname = 2;
   */
  schemaname?: string;

  /**
   * @generated from field: string relname = 3;
   */
  relname?: string;

  /**
   * @generated from field: bool inh = 4;
   */
  inh?: boolean;

  /**
   * @generated from field: string relpersistence = 5;
   */
  relpersistence?: string;

  /**
   * @generated from field: pg_query.Alias alias = 6;
   */
  alias?: AliasJson;

  /**
   * @generated from field: int32 location = 7;
   */
  location?: number;
};

/**
 * Describes the message pg_query.RangeVar.
 * Use `create(RangeVarSchema)` to create a new message.
 */
export const RangeVarSchema: GenMessage<RangeVar, RangeVarJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 13);

/**
 * @generated from message pg_query.TableFunc
 */
export type TableFunc = Message<"pg_query.TableFunc"> & {
  /**
   * @generated from field: repeated pg_query.Node ns_uris = 1 [json_name = "ns_uris"];
   */
  nsUris: Node[];

  /**
   * @generated from field: repeated pg_query.Node ns_names = 2 [json_name = "ns_names"];
   */
  nsNames: Node[];

  /**
   * @generated from field: pg_query.Node docexpr = 3;
   */
  docexpr?: Node;

  /**
   * @generated from field: pg_query.Node rowexpr = 4;
   */
  rowexpr?: Node;

  /**
   * @generated from field: repeated pg_query.Node colnames = 5;
   */
  colnames: Node[];

  /**
   * @generated from field: repeated pg_query.Node coltypes = 6;
   */
  coltypes: Node[];

  /**
   * @generated from field: repeated pg_query.Node coltypmods = 7;
   */
  coltypmods: Node[];

  /**
   * @generated from field: repeated pg_query.Node colcollations = 8;
   */
  colcollations: Node[];

  /**
   * @generated from field: repeated pg_query.Node colexprs = 9;
   */
  colexprs: Node[];

  /**
   * @generated from field: repeated pg_query.Node coldefexprs = 10;
   */
  coldefexprs: Node[];

  /**
   * @generated from field: repeated uint64 notnulls = 11;
   */
  notnulls: bigint[];

  /**
   * @generated from field: int32 ordinalitycol = 12;
   */
  ordinalitycol: number;

  /**
   * @generated from field: int32 location = 13;
   */
  location: number;
};

/**
 * @generated from message pg_query.TableFunc
 */
export type TableFuncJson = {
  /**
   * @generated from field: repeated pg_query.Node ns_uris = 1 [json_name = "ns_uris"];
   */
  ns_uris?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node ns_names = 2 [json_name = "ns_names"];
   */
  ns_names?: NodeJson[];

  /**
   * @generated from field: pg_query.Node docexpr = 3;
   */
  docexpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node rowexpr = 4;
   */
  rowexpr?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node colnames = 5;
   */
  colnames?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node coltypes = 6;
   */
  coltypes?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node coltypmods = 7;
   */
  coltypmods?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node colcollations = 8;
   */
  colcollations?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node colexprs = 9;
   */
  colexprs?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node coldefexprs = 10;
   */
  coldefexprs?: NodeJson[];

  /**
   * @generated from field: repeated uint64 notnulls = 11;
   */
  notnulls?: string[];

  /**
   * @generated from field: int32 ordinalitycol = 12;
   */
  ordinalitycol?: number;

  /**
   * @generated from field: int32 location = 13;
   */
  location?: number;
};

/**
 * Describes the message pg_query.TableFunc.
 * Use `create(TableFuncSchema)` to create a new message.
 */
export const TableFuncSchema: GenMessage<TableFunc, TableFuncJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 14);

/**
 * @generated from message pg_query.IntoClause
 */
export type IntoClause = Message<"pg_query.IntoClause"> & {
  /**
   * @generated from field: pg_query.RangeVar rel = 1;
   */
  rel?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node col_names = 2;
   */
  colNames: Node[];

  /**
   * @generated from field: string access_method = 3;
   */
  accessMethod: string;

  /**
   * @generated from field: repeated pg_query.Node options = 4;
   */
  options: Node[];

  /**
   * @generated from field: pg_query.OnCommitAction on_commit = 5;
   */
  onCommit: OnCommitAction;

  /**
   * @generated from field: string table_space_name = 6;
   */
  tableSpaceName: string;

  /**
   * @generated from field: pg_query.Node view_query = 7;
   */
  viewQuery?: Node;

  /**
   * @generated from field: bool skip_data = 8;
   */
  skipData: boolean;
};

/**
 * @generated from message pg_query.IntoClause
 */
export type IntoClauseJson = {
  /**
   * @generated from field: pg_query.RangeVar rel = 1;
   */
  rel?: RangeVarJson;

  /**
   * @generated from field: repeated pg_query.Node col_names = 2;
   */
  colNames?: NodeJson[];

  /**
   * @generated from field: string access_method = 3;
   */
  accessMethod?: string;

  /**
   * @generated from field: repeated pg_query.Node options = 4;
   */
  options?: NodeJson[];

  /**
   * @generated from field: pg_query.OnCommitAction on_commit = 5;
   */
  onCommit?: OnCommitActionJson;

  /**
   * @generated from field: string table_space_name = 6;
   */
  tableSpaceName?: string;

  /**
   * @generated from field: pg_query.Node view_query = 7;
   */
  viewQuery?: NodeJson;

  /**
   * @generated from field: bool skip_data = 8;
   */
  skipData?: boolean;
};

/**
 * Describes the message pg_query.IntoClause.
 * Use `create(IntoClauseSchema)` to create a new message.
 */
export const IntoClauseSchema: GenMessage<IntoClause, IntoClauseJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 15);

/**
 * @generated from message pg_query.Var
 */
export type Var = Message<"pg_query.Var"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: int32 varno = 2;
   */
  varno: number;

  /**
   * @generated from field: int32 varattno = 3;
   */
  varattno: number;

  /**
   * @generated from field: uint32 vartype = 4;
   */
  vartype: number;

  /**
   * @generated from field: int32 vartypmod = 5;
   */
  vartypmod: number;

  /**
   * @generated from field: uint32 varcollid = 6;
   */
  varcollid: number;

  /**
   * @generated from field: repeated uint64 varnullingrels = 7;
   */
  varnullingrels: bigint[];

  /**
   * @generated from field: uint32 varlevelsup = 8;
   */
  varlevelsup: number;

  /**
   * @generated from field: int32 location = 9;
   */
  location: number;
};

/**
 * @generated from message pg_query.Var
 */
export type VarJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: int32 varno = 2;
   */
  varno?: number;

  /**
   * @generated from field: int32 varattno = 3;
   */
  varattno?: number;

  /**
   * @generated from field: uint32 vartype = 4;
   */
  vartype?: number;

  /**
   * @generated from field: int32 vartypmod = 5;
   */
  vartypmod?: number;

  /**
   * @generated from field: uint32 varcollid = 6;
   */
  varcollid?: number;

  /**
   * @generated from field: repeated uint64 varnullingrels = 7;
   */
  varnullingrels?: string[];

  /**
   * @generated from field: uint32 varlevelsup = 8;
   */
  varlevelsup?: number;

  /**
   * @generated from field: int32 location = 9;
   */
  location?: number;
};

/**
 * Describes the message pg_query.Var.
 * Use `create(VarSchema)` to create a new message.
 */
export const VarSchema: GenMessage<Var, VarJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 16);

/**
 * @generated from message pg_query.Param
 */
export type Param = Message<"pg_query.Param"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.ParamKind paramkind = 2;
   */
  paramkind: ParamKind;

  /**
   * @generated from field: int32 paramid = 3;
   */
  paramid: number;

  /**
   * @generated from field: uint32 paramtype = 4;
   */
  paramtype: number;

  /**
   * @generated from field: int32 paramtypmod = 5;
   */
  paramtypmod: number;

  /**
   * @generated from field: uint32 paramcollid = 6;
   */
  paramcollid: number;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * @generated from message pg_query.Param
 */
export type ParamJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.ParamKind paramkind = 2;
   */
  paramkind?: ParamKindJson;

  /**
   * @generated from field: int32 paramid = 3;
   */
  paramid?: number;

  /**
   * @generated from field: uint32 paramtype = 4;
   */
  paramtype?: number;

  /**
   * @generated from field: int32 paramtypmod = 5;
   */
  paramtypmod?: number;

  /**
   * @generated from field: uint32 paramcollid = 6;
   */
  paramcollid?: number;

  /**
   * @generated from field: int32 location = 7;
   */
  location?: number;
};

/**
 * Describes the message pg_query.Param.
 * Use `create(ParamSchema)` to create a new message.
 */
export const ParamSchema: GenMessage<Param, ParamJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 17);

/**
 * @generated from message pg_query.Aggref
 */
export type Aggref = Message<"pg_query.Aggref"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 aggfnoid = 2;
   */
  aggfnoid: number;

  /**
   * @generated from field: uint32 aggtype = 3;
   */
  aggtype: number;

  /**
   * @generated from field: uint32 aggcollid = 4;
   */
  aggcollid: number;

  /**
   * @generated from field: uint32 inputcollid = 5;
   */
  inputcollid: number;

  /**
   * @generated from field: repeated pg_query.Node aggargtypes = 6;
   */
  aggargtypes: Node[];

  /**
   * @generated from field: repeated pg_query.Node aggdirectargs = 7;
   */
  aggdirectargs: Node[];

  /**
   * @generated from field: repeated pg_query.Node args = 8;
   */
  args: Node[];

  /**
   * @generated from field: repeated pg_query.Node aggorder = 9;
   */
  aggorder: Node[];

  /**
   * @generated from field: repeated pg_query.Node aggdistinct = 10;
   */
  aggdistinct: Node[];

  /**
   * @generated from field: pg_query.Node aggfilter = 11;
   */
  aggfilter?: Node;

  /**
   * @generated from field: bool aggstar = 12;
   */
  aggstar: boolean;

  /**
   * @generated from field: bool aggvariadic = 13;
   */
  aggvariadic: boolean;

  /**
   * @generated from field: string aggkind = 14;
   */
  aggkind: string;

  /**
   * @generated from field: uint32 agglevelsup = 15;
   */
  agglevelsup: number;

  /**
   * @generated from field: pg_query.AggSplit aggsplit = 16;
   */
  aggsplit: AggSplit;

  /**
   * @generated from field: int32 aggno = 17;
   */
  aggno: number;

  /**
   * @generated from field: int32 aggtransno = 18;
   */
  aggtransno: number;

  /**
   * @generated from field: int32 location = 19;
   */
  location: number;
};

/**
 * @generated from message pg_query.Aggref
 */
export type AggrefJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: uint32 aggfnoid = 2;
   */
  aggfnoid?: number;

  /**
   * @generated from field: uint32 aggtype = 3;
   */
  aggtype?: number;

  /**
   * @generated from field: uint32 aggcollid = 4;
   */
  aggcollid?: number;

  /**
   * @generated from field: uint32 inputcollid = 5;
   */
  inputcollid?: number;

  /**
   * @generated from field: repeated pg_query.Node aggargtypes = 6;
   */
  aggargtypes?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node aggdirectargs = 7;
   */
  aggdirectargs?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node args = 8;
   */
  args?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node aggorder = 9;
   */
  aggorder?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node aggdistinct = 10;
   */
  aggdistinct?: NodeJson[];

  /**
   * @generated from field: pg_query.Node aggfilter = 11;
   */
  aggfilter?: NodeJson;

  /**
   * @generated from field: bool aggstar = 12;
   */
  aggstar?: boolean;

  /**
   * @generated from field: bool aggvariadic = 13;
   */
  aggvariadic?: boolean;

  /**
   * @generated from field: string aggkind = 14;
   */
  aggkind?: string;

  /**
   * @generated from field: uint32 agglevelsup = 15;
   */
  agglevelsup?: number;

  /**
   * @generated from field: pg_query.AggSplit aggsplit = 16;
   */
  aggsplit?: AggSplitJson;

  /**
   * @generated from field: int32 aggno = 17;
   */
  aggno?: number;

  /**
   * @generated from field: int32 aggtransno = 18;
   */
  aggtransno?: number;

  /**
   * @generated from field: int32 location = 19;
   */
  location?: number;
};

/**
 * Describes the message pg_query.Aggref.
 * Use `create(AggrefSchema)` to create a new message.
 */
export const AggrefSchema: GenMessage<Aggref, AggrefJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 18);

/**
 * @generated from message pg_query.GroupingFunc
 */
export type GroupingFunc = Message<"pg_query.GroupingFunc"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: repeated pg_query.Node args = 2;
   */
  args: Node[];

  /**
   * @generated from field: repeated pg_query.Node refs = 3;
   */
  refs: Node[];

  /**
   * @generated from field: uint32 agglevelsup = 4;
   */
  agglevelsup: number;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.GroupingFunc
 */
export type GroupingFuncJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node args = 2;
   */
  args?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node refs = 3;
   */
  refs?: NodeJson[];

  /**
   * @generated from field: uint32 agglevelsup = 4;
   */
  agglevelsup?: number;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.GroupingFunc.
 * Use `create(GroupingFuncSchema)` to create a new message.
 */
export const GroupingFuncSchema: GenMessage<GroupingFunc, GroupingFuncJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 19);

/**
 * @generated from message pg_query.WindowFunc
 */
export type WindowFunc = Message<"pg_query.WindowFunc"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 winfnoid = 2;
   */
  winfnoid: number;

  /**
   * @generated from field: uint32 wintype = 3;
   */
  wintype: number;

  /**
   * @generated from field: uint32 wincollid = 4;
   */
  wincollid: number;

  /**
   * @generated from field: uint32 inputcollid = 5;
   */
  inputcollid: number;

  /**
   * @generated from field: repeated pg_query.Node args = 6;
   */
  args: Node[];

  /**
   * @generated from field: pg_query.Node aggfilter = 7;
   */
  aggfilter?: Node;

  /**
   * @generated from field: uint32 winref = 8;
   */
  winref: number;

  /**
   * @generated from field: bool winstar = 9;
   */
  winstar: boolean;

  /**
   * @generated from field: bool winagg = 10;
   */
  winagg: boolean;

  /**
   * @generated from field: int32 location = 11;
   */
  location: number;
};

/**
 * @generated from message pg_query.WindowFunc
 */
export type WindowFuncJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: uint32 winfnoid = 2;
   */
  winfnoid?: number;

  /**
   * @generated from field: uint32 wintype = 3;
   */
  wintype?: number;

  /**
   * @generated from field: uint32 wincollid = 4;
   */
  wincollid?: number;

  /**
   * @generated from field: uint32 inputcollid = 5;
   */
  inputcollid?: number;

  /**
   * @generated from field: repeated pg_query.Node args = 6;
   */
  args?: NodeJson[];

  /**
   * @generated from field: pg_query.Node aggfilter = 7;
   */
  aggfilter?: NodeJson;

  /**
   * @generated from field: uint32 winref = 8;
   */
  winref?: number;

  /**
   * @generated from field: bool winstar = 9;
   */
  winstar?: boolean;

  /**
   * @generated from field: bool winagg = 10;
   */
  winagg?: boolean;

  /**
   * @generated from field: int32 location = 11;
   */
  location?: number;
};

/**
 * Describes the message pg_query.WindowFunc.
 * Use `create(WindowFuncSchema)` to create a new message.
 */
export const WindowFuncSchema: GenMessage<WindowFunc, WindowFuncJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 20);

/**
 * @generated from message pg_query.SubscriptingRef
 */
export type SubscriptingRef = Message<"pg_query.SubscriptingRef"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 refcontainertype = 2;
   */
  refcontainertype: number;

  /**
   * @generated from field: uint32 refelemtype = 3;
   */
  refelemtype: number;

  /**
   * @generated from field: uint32 refrestype = 4;
   */
  refrestype: number;

  /**
   * @generated from field: int32 reftypmod = 5;
   */
  reftypmod: number;

  /**
   * @generated from field: uint32 refcollid = 6;
   */
  refcollid: number;

  /**
   * @generated from field: repeated pg_query.Node refupperindexpr = 7;
   */
  refupperindexpr: Node[];

  /**
   * @generated from field: repeated pg_query.Node reflowerindexpr = 8;
   */
  reflowerindexpr: Node[];

  /**
   * @generated from field: pg_query.Node refexpr = 9;
   */
  refexpr?: Node;

  /**
   * @generated from field: pg_query.Node refassgnexpr = 10;
   */
  refassgnexpr?: Node;
};

/**
 * @generated from message pg_query.SubscriptingRef
 */
export type SubscriptingRefJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: uint32 refcontainertype = 2;
   */
  refcontainertype?: number;

  /**
   * @generated from field: uint32 refelemtype = 3;
   */
  refelemtype?: number;

  /**
   * @generated from field: uint32 refrestype = 4;
   */
  refrestype?: number;

  /**
   * @generated from field: int32 reftypmod = 5;
   */
  reftypmod?: number;

  /**
   * @generated from field: uint32 refcollid = 6;
   */
  refcollid?: number;

  /**
   * @generated from field: repeated pg_query.Node refupperindexpr = 7;
   */
  refupperindexpr?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node reflowerindexpr = 8;
   */
  reflowerindexpr?: NodeJson[];

  /**
   * @generated from field: pg_query.Node refexpr = 9;
   */
  refexpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node refassgnexpr = 10;
   */
  refassgnexpr?: NodeJson;
};

/**
 * Describes the message pg_query.SubscriptingRef.
 * Use `create(SubscriptingRefSchema)` to create a new message.
 */
export const SubscriptingRefSchema: GenMessage<SubscriptingRef, SubscriptingRefJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 21);

/**
 * @generated from message pg_query.FuncExpr
 */
export type FuncExpr = Message<"pg_query.FuncExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 funcid = 2;
   */
  funcid: number;

  /**
   * @generated from field: uint32 funcresulttype = 3;
   */
  funcresulttype: number;

  /**
   * @generated from field: bool funcretset = 4;
   */
  funcretset: boolean;

  /**
   * @generated from field: bool funcvariadic = 5;
   */
  funcvariadic: boolean;

  /**
   * @generated from field: pg_query.CoercionForm funcformat = 6;
   */
  funcformat: CoercionForm;

  /**
   * @generated from field: uint32 funccollid = 7;
   */
  funccollid: number;

  /**
   * @generated from field: uint32 inputcollid = 8;
   */
  inputcollid: number;

  /**
   * @generated from field: repeated pg_query.Node args = 9;
   */
  args: Node[];

  /**
   * @generated from field: int32 location = 10;
   */
  location: number;
};

/**
 * @generated from message pg_query.FuncExpr
 */
export type FuncExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: uint32 funcid = 2;
   */
  funcid?: number;

  /**
   * @generated from field: uint32 funcresulttype = 3;
   */
  funcresulttype?: number;

  /**
   * @generated from field: bool funcretset = 4;
   */
  funcretset?: boolean;

  /**
   * @generated from field: bool funcvariadic = 5;
   */
  funcvariadic?: boolean;

  /**
   * @generated from field: pg_query.CoercionForm funcformat = 6;
   */
  funcformat?: CoercionFormJson;

  /**
   * @generated from field: uint32 funccollid = 7;
   */
  funccollid?: number;

  /**
   * @generated from field: uint32 inputcollid = 8;
   */
  inputcollid?: number;

  /**
   * @generated from field: repeated pg_query.Node args = 9;
   */
  args?: NodeJson[];

  /**
   * @generated from field: int32 location = 10;
   */
  location?: number;
};

/**
 * Describes the message pg_query.FuncExpr.
 * Use `create(FuncExprSchema)` to create a new message.
 */
export const FuncExprSchema: GenMessage<FuncExpr, FuncExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 22);

/**
 * @generated from message pg_query.NamedArgExpr
 */
export type NamedArgExpr = Message<"pg_query.NamedArgExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: int32 argnumber = 4;
   */
  argnumber: number;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.NamedArgExpr
 */
export type NamedArgExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: NodeJson;

  /**
   * @generated from field: string name = 3;
   */
  name?: string;

  /**
   * @generated from field: int32 argnumber = 4;
   */
  argnumber?: number;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.NamedArgExpr.
 * Use `create(NamedArgExprSchema)` to create a new message.
 */
export const NamedArgExprSchema: GenMessage<NamedArgExpr, NamedArgExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 23);

/**
 * @generated from message pg_query.OpExpr
 */
export type OpExpr = Message<"pg_query.OpExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 opno = 2;
   */
  opno: number;

  /**
   * @generated from field: uint32 opresulttype = 3;
   */
  opresulttype: number;

  /**
   * @generated from field: bool opretset = 4;
   */
  opretset: boolean;

  /**
   * @generated from field: uint32 opcollid = 5;
   */
  opcollid: number;

  /**
   * @generated from field: uint32 inputcollid = 6;
   */
  inputcollid: number;

  /**
   * @generated from field: repeated pg_query.Node args = 7;
   */
  args: Node[];

  /**
   * @generated from field: int32 location = 8;
   */
  location: number;
};

/**
 * @generated from message pg_query.OpExpr
 */
export type OpExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: uint32 opno = 2;
   */
  opno?: number;

  /**
   * @generated from field: uint32 opresulttype = 3;
   */
  opresulttype?: number;

  /**
   * @generated from field: bool opretset = 4;
   */
  opretset?: boolean;

  /**
   * @generated from field: uint32 opcollid = 5;
   */
  opcollid?: number;

  /**
   * @generated from field: uint32 inputcollid = 6;
   */
  inputcollid?: number;

  /**
   * @generated from field: repeated pg_query.Node args = 7;
   */
  args?: NodeJson[];

  /**
   * @generated from field: int32 location = 8;
   */
  location?: number;
};

/**
 * Describes the message pg_query.OpExpr.
 * Use `create(OpExprSchema)` to create a new message.
 */
export const OpExprSchema: GenMessage<OpExpr, OpExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 24);

/**
 * @generated from message pg_query.DistinctExpr
 */
export type DistinctExpr = Message<"pg_query.DistinctExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 opno = 2;
   */
  opno: number;

  /**
   * @generated from field: uint32 opresulttype = 3;
   */
  opresulttype: number;

  /**
   * @generated from field: bool opretset = 4;
   */
  opretset: boolean;

  /**
   * @generated from field: uint32 opcollid = 5;
   */
  opcollid: number;

  /**
   * @generated from field: uint32 inputcollid = 6;
   */
  inputcollid: number;

  /**
   * @generated from field: repeated pg_query.Node args = 7;
   */
  args: Node[];

  /**
   * @generated from field: int32 location = 8;
   */
  location: number;
};

/**
 * @generated from message pg_query.DistinctExpr
 */
export type DistinctExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: uint32 opno = 2;
   */
  opno?: number;

  /**
   * @generated from field: uint32 opresulttype = 3;
   */
  opresulttype?: number;

  /**
   * @generated from field: bool opretset = 4;
   */
  opretset?: boolean;

  /**
   * @generated from field: uint32 opcollid = 5;
   */
  opcollid?: number;

  /**
   * @generated from field: uint32 inputcollid = 6;
   */
  inputcollid?: number;

  /**
   * @generated from field: repeated pg_query.Node args = 7;
   */
  args?: NodeJson[];

  /**
   * @generated from field: int32 location = 8;
   */
  location?: number;
};

/**
 * Describes the message pg_query.DistinctExpr.
 * Use `create(DistinctExprSchema)` to create a new message.
 */
export const DistinctExprSchema: GenMessage<DistinctExpr, DistinctExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 25);

/**
 * @generated from message pg_query.NullIfExpr
 */
export type NullIfExpr = Message<"pg_query.NullIfExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 opno = 2;
   */
  opno: number;

  /**
   * @generated from field: uint32 opresulttype = 3;
   */
  opresulttype: number;

  /**
   * @generated from field: bool opretset = 4;
   */
  opretset: boolean;

  /**
   * @generated from field: uint32 opcollid = 5;
   */
  opcollid: number;

  /**
   * @generated from field: uint32 inputcollid = 6;
   */
  inputcollid: number;

  /**
   * @generated from field: repeated pg_query.Node args = 7;
   */
  args: Node[];

  /**
   * @generated from field: int32 location = 8;
   */
  location: number;
};

/**
 * @generated from message pg_query.NullIfExpr
 */
export type NullIfExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: uint32 opno = 2;
   */
  opno?: number;

  /**
   * @generated from field: uint32 opresulttype = 3;
   */
  opresulttype?: number;

  /**
   * @generated from field: bool opretset = 4;
   */
  opretset?: boolean;

  /**
   * @generated from field: uint32 opcollid = 5;
   */
  opcollid?: number;

  /**
   * @generated from field: uint32 inputcollid = 6;
   */
  inputcollid?: number;

  /**
   * @generated from field: repeated pg_query.Node args = 7;
   */
  args?: NodeJson[];

  /**
   * @generated from field: int32 location = 8;
   */
  location?: number;
};

/**
 * Describes the message pg_query.NullIfExpr.
 * Use `create(NullIfExprSchema)` to create a new message.
 */
export const NullIfExprSchema: GenMessage<NullIfExpr, NullIfExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 26);

/**
 * @generated from message pg_query.ScalarArrayOpExpr
 */
export type ScalarArrayOpExpr = Message<"pg_query.ScalarArrayOpExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 opno = 2;
   */
  opno: number;

  /**
   * @generated from field: bool use_or = 3;
   */
  useOr: boolean;

  /**
   * @generated from field: uint32 inputcollid = 4;
   */
  inputcollid: number;

  /**
   * @generated from field: repeated pg_query.Node args = 5;
   */
  args: Node[];

  /**
   * @generated from field: int32 location = 6;
   */
  location: number;
};

/**
 * @generated from message pg_query.ScalarArrayOpExpr
 */
export type ScalarArrayOpExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: uint32 opno = 2;
   */
  opno?: number;

  /**
   * @generated from field: bool use_or = 3;
   */
  useOr?: boolean;

  /**
   * @generated from field: uint32 inputcollid = 4;
   */
  inputcollid?: number;

  /**
   * @generated from field: repeated pg_query.Node args = 5;
   */
  args?: NodeJson[];

  /**
   * @generated from field: int32 location = 6;
   */
  location?: number;
};

/**
 * Describes the message pg_query.ScalarArrayOpExpr.
 * Use `create(ScalarArrayOpExprSchema)` to create a new message.
 */
export const ScalarArrayOpExprSchema: GenMessage<ScalarArrayOpExpr, ScalarArrayOpExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 27);

/**
 * @generated from message pg_query.BoolExpr
 */
export type BoolExpr = Message<"pg_query.BoolExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.BoolExprType boolop = 2;
   */
  boolop: BoolExprType;

  /**
   * @generated from field: repeated pg_query.Node args = 3;
   */
  args: Node[];

  /**
   * @generated from field: int32 location = 4;
   */
  location: number;
};

/**
 * @generated from message pg_query.BoolExpr
 */
export type BoolExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.BoolExprType boolop = 2;
   */
  boolop?: BoolExprTypeJson;

  /**
   * @generated from field: repeated pg_query.Node args = 3;
   */
  args?: NodeJson[];

  /**
   * @generated from field: int32 location = 4;
   */
  location?: number;
};

/**
 * Describes the message pg_query.BoolExpr.
 * Use `create(BoolExprSchema)` to create a new message.
 */
export const BoolExprSchema: GenMessage<BoolExpr, BoolExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 28);

/**
 * @generated from message pg_query.SubLink
 */
export type SubLink = Message<"pg_query.SubLink"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.SubLinkType sub_link_type = 2;
   */
  subLinkType: SubLinkType;

  /**
   * @generated from field: int32 sub_link_id = 3;
   */
  subLinkId: number;

  /**
   * @generated from field: pg_query.Node testexpr = 4;
   */
  testexpr?: Node;

  /**
   * @generated from field: repeated pg_query.Node oper_name = 5;
   */
  operName: Node[];

  /**
   * @generated from field: pg_query.Node subselect = 6;
   */
  subselect?: Node;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * @generated from message pg_query.SubLink
 */
export type SubLinkJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.SubLinkType sub_link_type = 2;
   */
  subLinkType?: SubLinkTypeJson;

  /**
   * @generated from field: int32 sub_link_id = 3;
   */
  subLinkId?: number;

  /**
   * @generated from field: pg_query.Node testexpr = 4;
   */
  testexpr?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node oper_name = 5;
   */
  operName?: NodeJson[];

  /**
   * @generated from field: pg_query.Node subselect = 6;
   */
  subselect?: NodeJson;

  /**
   * @generated from field: int32 location = 7;
   */
  location?: number;
};

/**
 * Describes the message pg_query.SubLink.
 * Use `create(SubLinkSchema)` to create a new message.
 */
export const SubLinkSchema: GenMessage<SubLink, SubLinkJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 29);

/**
 * @generated from message pg_query.SubPlan
 */
export type SubPlan = Message<"pg_query.SubPlan"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.SubLinkType sub_link_type = 2;
   */
  subLinkType: SubLinkType;

  /**
   * @generated from field: pg_query.Node testexpr = 3;
   */
  testexpr?: Node;

  /**
   * @generated from field: repeated pg_query.Node param_ids = 4;
   */
  paramIds: Node[];

  /**
   * @generated from field: int32 plan_id = 5 [json_name = "plan_id"];
   */
  planId: number;

  /**
   * @generated from field: string plan_name = 6 [json_name = "plan_name"];
   */
  planName: string;

  /**
   * @generated from field: uint32 first_col_type = 7;
   */
  firstColType: number;

  /**
   * @generated from field: int32 first_col_typmod = 8;
   */
  firstColTypmod: number;

  /**
   * @generated from field: uint32 first_col_collation = 9;
   */
  firstColCollation: number;

  /**
   * @generated from field: bool use_hash_table = 10;
   */
  useHashTable: boolean;

  /**
   * @generated from field: bool unknown_eq_false = 11;
   */
  unknownEqFalse: boolean;

  /**
   * @generated from field: bool parallel_safe = 12 [json_name = "parallel_safe"];
   */
  parallelSafe: boolean;

  /**
   * @generated from field: repeated pg_query.Node set_param = 13;
   */
  setParam: Node[];

  /**
   * @generated from field: repeated pg_query.Node par_param = 14;
   */
  parParam: Node[];

  /**
   * @generated from field: repeated pg_query.Node args = 15;
   */
  args: Node[];

  /**
   * @generated from field: double startup_cost = 16 [json_name = "startup_cost"];
   */
  startupCost: number;

  /**
   * @generated from field: double per_call_cost = 17 [json_name = "per_call_cost"];
   */
  perCallCost: number;
};

/**
 * @generated from message pg_query.SubPlan
 */
export type SubPlanJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.SubLinkType sub_link_type = 2;
   */
  subLinkType?: SubLinkTypeJson;

  /**
   * @generated from field: pg_query.Node testexpr = 3;
   */
  testexpr?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node param_ids = 4;
   */
  paramIds?: NodeJson[];

  /**
   * @generated from field: int32 plan_id = 5 [json_name = "plan_id"];
   */
  plan_id?: number;

  /**
   * @generated from field: string plan_name = 6 [json_name = "plan_name"];
   */
  plan_name?: string;

  /**
   * @generated from field: uint32 first_col_type = 7;
   */
  firstColType?: number;

  /**
   * @generated from field: int32 first_col_typmod = 8;
   */
  firstColTypmod?: number;

  /**
   * @generated from field: uint32 first_col_collation = 9;
   */
  firstColCollation?: number;

  /**
   * @generated from field: bool use_hash_table = 10;
   */
  useHashTable?: boolean;

  /**
   * @generated from field: bool unknown_eq_false = 11;
   */
  unknownEqFalse?: boolean;

  /**
   * @generated from field: bool parallel_safe = 12 [json_name = "parallel_safe"];
   */
  parallel_safe?: boolean;

  /**
   * @generated from field: repeated pg_query.Node set_param = 13;
   */
  setParam?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node par_param = 14;
   */
  parParam?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node args = 15;
   */
  args?: NodeJson[];

  /**
   * @generated from field: double startup_cost = 16 [json_name = "startup_cost"];
   */
  startup_cost?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: double per_call_cost = 17 [json_name = "per_call_cost"];
   */
  per_call_cost?: number | "NaN" | "Infinity" | "-Infinity";
};

/**
 * Describes the message pg_query.SubPlan.
 * Use `create(SubPlanSchema)` to create a new message.
 */
export const SubPlanSchema: GenMessage<SubPlan, SubPlanJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 30);

/**
 * @generated from message pg_query.AlternativeSubPlan
 */
export type AlternativeSubPlan = Message<"pg_query.AlternativeSubPlan"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: repeated pg_query.Node subplans = 2;
   */
  subplans: Node[];
};

/**
 * @generated from message pg_query.AlternativeSubPlan
 */
export type AlternativeSubPlanJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node subplans = 2;
   */
  subplans?: NodeJson[];
};

/**
 * Describes the message pg_query.AlternativeSubPlan.
 * Use `create(AlternativeSubPlanSchema)` to create a new message.
 */
export const AlternativeSubPlanSchema: GenMessage<AlternativeSubPlan, AlternativeSubPlanJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 31);

/**
 * @generated from message pg_query.FieldSelect
 */
export type FieldSelect = Message<"pg_query.FieldSelect"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: int32 fieldnum = 3;
   */
  fieldnum: number;

  /**
   * @generated from field: uint32 resulttype = 4;
   */
  resulttype: number;

  /**
   * @generated from field: int32 resulttypmod = 5;
   */
  resulttypmod: number;

  /**
   * @generated from field: uint32 resultcollid = 6;
   */
  resultcollid: number;
};

/**
 * @generated from message pg_query.FieldSelect
 */
export type FieldSelectJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: NodeJson;

  /**
   * @generated from field: int32 fieldnum = 3;
   */
  fieldnum?: number;

  /**
   * @generated from field: uint32 resulttype = 4;
   */
  resulttype?: number;

  /**
   * @generated from field: int32 resulttypmod = 5;
   */
  resulttypmod?: number;

  /**
   * @generated from field: uint32 resultcollid = 6;
   */
  resultcollid?: number;
};

/**
 * Describes the message pg_query.FieldSelect.
 * Use `create(FieldSelectSchema)` to create a new message.
 */
export const FieldSelectSchema: GenMessage<FieldSelect, FieldSelectJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 32);

/**
 * @generated from message pg_query.FieldStore
 */
export type FieldStore = Message<"pg_query.FieldStore"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: repeated pg_query.Node newvals = 3;
   */
  newvals: Node[];

  /**
   * @generated from field: repeated pg_query.Node fieldnums = 4;
   */
  fieldnums: Node[];

  /**
   * @generated from field: uint32 resulttype = 5;
   */
  resulttype: number;
};

/**
 * @generated from message pg_query.FieldStore
 */
export type FieldStoreJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node newvals = 3;
   */
  newvals?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node fieldnums = 4;
   */
  fieldnums?: NodeJson[];

  /**
   * @generated from field: uint32 resulttype = 5;
   */
  resulttype?: number;
};

/**
 * Describes the message pg_query.FieldStore.
 * Use `create(FieldStoreSchema)` to create a new message.
 */
export const FieldStoreSchema: GenMessage<FieldStore, FieldStoreJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 33);

/**
 * @generated from message pg_query.RelabelType
 */
export type RelabelType = Message<"pg_query.RelabelType"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: uint32 resulttype = 3;
   */
  resulttype: number;

  /**
   * @generated from field: int32 resulttypmod = 4;
   */
  resulttypmod: number;

  /**
   * @generated from field: uint32 resultcollid = 5;
   */
  resultcollid: number;

  /**
   * @generated from field: pg_query.CoercionForm relabelformat = 6;
   */
  relabelformat: CoercionForm;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * @generated from message pg_query.RelabelType
 */
export type RelabelTypeJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: NodeJson;

  /**
   * @generated from field: uint32 resulttype = 3;
   */
  resulttype?: number;

  /**
   * @generated from field: int32 resulttypmod = 4;
   */
  resulttypmod?: number;

  /**
   * @generated from field: uint32 resultcollid = 5;
   */
  resultcollid?: number;

  /**
   * @generated from field: pg_query.CoercionForm relabelformat = 6;
   */
  relabelformat?: CoercionFormJson;

  /**
   * @generated from field: int32 location = 7;
   */
  location?: number;
};

/**
 * Describes the message pg_query.RelabelType.
 * Use `create(RelabelTypeSchema)` to create a new message.
 */
export const RelabelTypeSchema: GenMessage<RelabelType, RelabelTypeJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 34);

/**
 * @generated from message pg_query.CoerceViaIO
 */
export type CoerceViaIO = Message<"pg_query.CoerceViaIO"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: uint32 resulttype = 3;
   */
  resulttype: number;

  /**
   * @generated from field: uint32 resultcollid = 4;
   */
  resultcollid: number;

  /**
   * @generated from field: pg_query.CoercionForm coerceformat = 5;
   */
  coerceformat: CoercionForm;

  /**
   * @generated from field: int32 location = 6;
   */
  location: number;
};

/**
 * @generated from message pg_query.CoerceViaIO
 */
export type CoerceViaIOJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: NodeJson;

  /**
   * @generated from field: uint32 resulttype = 3;
   */
  resulttype?: number;

  /**
   * @generated from field: uint32 resultcollid = 4;
   */
  resultcollid?: number;

  /**
   * @generated from field: pg_query.CoercionForm coerceformat = 5;
   */
  coerceformat?: CoercionFormJson;

  /**
   * @generated from field: int32 location = 6;
   */
  location?: number;
};

/**
 * Describes the message pg_query.CoerceViaIO.
 * Use `create(CoerceViaIOSchema)` to create a new message.
 */
export const CoerceViaIOSchema: GenMessage<CoerceViaIO, CoerceViaIOJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 35);

/**
 * @generated from message pg_query.ArrayCoerceExpr
 */
export type ArrayCoerceExpr = Message<"pg_query.ArrayCoerceExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: pg_query.Node elemexpr = 3;
   */
  elemexpr?: Node;

  /**
   * @generated from field: uint32 resulttype = 4;
   */
  resulttype: number;

  /**
   * @generated from field: int32 resulttypmod = 5;
   */
  resulttypmod: number;

  /**
   * @generated from field: uint32 resultcollid = 6;
   */
  resultcollid: number;

  /**
   * @generated from field: pg_query.CoercionForm coerceformat = 7;
   */
  coerceformat: CoercionForm;

  /**
   * @generated from field: int32 location = 8;
   */
  location: number;
};

/**
 * @generated from message pg_query.ArrayCoerceExpr
 */
export type ArrayCoerceExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: NodeJson;

  /**
   * @generated from field: pg_query.Node elemexpr = 3;
   */
  elemexpr?: NodeJson;

  /**
   * @generated from field: uint32 resulttype = 4;
   */
  resulttype?: number;

  /**
   * @generated from field: int32 resulttypmod = 5;
   */
  resulttypmod?: number;

  /**
   * @generated from field: uint32 resultcollid = 6;
   */
  resultcollid?: number;

  /**
   * @generated from field: pg_query.CoercionForm coerceformat = 7;
   */
  coerceformat?: CoercionFormJson;

  /**
   * @generated from field: int32 location = 8;
   */
  location?: number;
};

/**
 * Describes the message pg_query.ArrayCoerceExpr.
 * Use `create(ArrayCoerceExprSchema)` to create a new message.
 */
export const ArrayCoerceExprSchema: GenMessage<ArrayCoerceExpr, ArrayCoerceExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 36);

/**
 * @generated from message pg_query.ConvertRowtypeExpr
 */
export type ConvertRowtypeExpr = Message<"pg_query.ConvertRowtypeExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: uint32 resulttype = 3;
   */
  resulttype: number;

  /**
   * @generated from field: pg_query.CoercionForm convertformat = 4;
   */
  convertformat: CoercionForm;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.ConvertRowtypeExpr
 */
export type ConvertRowtypeExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: NodeJson;

  /**
   * @generated from field: uint32 resulttype = 3;
   */
  resulttype?: number;

  /**
   * @generated from field: pg_query.CoercionForm convertformat = 4;
   */
  convertformat?: CoercionFormJson;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.ConvertRowtypeExpr.
 * Use `create(ConvertRowtypeExprSchema)` to create a new message.
 */
export const ConvertRowtypeExprSchema: GenMessage<ConvertRowtypeExpr, ConvertRowtypeExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 37);

/**
 * @generated from message pg_query.CollateExpr
 */
export type CollateExpr = Message<"pg_query.CollateExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: uint32 coll_oid = 3;
   */
  collOid: number;

  /**
   * @generated from field: int32 location = 4;
   */
  location: number;
};

/**
 * @generated from message pg_query.CollateExpr
 */
export type CollateExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: NodeJson;

  /**
   * @generated from field: uint32 coll_oid = 3;
   */
  collOid?: number;

  /**
   * @generated from field: int32 location = 4;
   */
  location?: number;
};

/**
 * Describes the message pg_query.CollateExpr.
 * Use `create(CollateExprSchema)` to create a new message.
 */
export const CollateExprSchema: GenMessage<CollateExpr, CollateExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 38);

/**
 * @generated from message pg_query.CaseExpr
 */
export type CaseExpr = Message<"pg_query.CaseExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 casetype = 2;
   */
  casetype: number;

  /**
   * @generated from field: uint32 casecollid = 3;
   */
  casecollid: number;

  /**
   * @generated from field: pg_query.Node arg = 4;
   */
  arg?: Node;

  /**
   * @generated from field: repeated pg_query.Node args = 5;
   */
  args: Node[];

  /**
   * @generated from field: pg_query.Node defresult = 6;
   */
  defresult?: Node;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * @generated from message pg_query.CaseExpr
 */
export type CaseExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: uint32 casetype = 2;
   */
  casetype?: number;

  /**
   * @generated from field: uint32 casecollid = 3;
   */
  casecollid?: number;

  /**
   * @generated from field: pg_query.Node arg = 4;
   */
  arg?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node args = 5;
   */
  args?: NodeJson[];

  /**
   * @generated from field: pg_query.Node defresult = 6;
   */
  defresult?: NodeJson;

  /**
   * @generated from field: int32 location = 7;
   */
  location?: number;
};

/**
 * Describes the message pg_query.CaseExpr.
 * Use `create(CaseExprSchema)` to create a new message.
 */
export const CaseExprSchema: GenMessage<CaseExpr, CaseExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 39);

/**
 * @generated from message pg_query.CaseWhen
 */
export type CaseWhen = Message<"pg_query.CaseWhen"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: Node;

  /**
   * @generated from field: pg_query.Node result = 3;
   */
  result?: Node;

  /**
   * @generated from field: int32 location = 4;
   */
  location: number;
};

/**
 * @generated from message pg_query.CaseWhen
 */
export type CaseWhenJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: NodeJson;

  /**
   * @generated from field: pg_query.Node result = 3;
   */
  result?: NodeJson;

  /**
   * @generated from field: int32 location = 4;
   */
  location?: number;
};

/**
 * Describes the message pg_query.CaseWhen.
 * Use `create(CaseWhenSchema)` to create a new message.
 */
export const CaseWhenSchema: GenMessage<CaseWhen, CaseWhenJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 40);

/**
 * @generated from message pg_query.CaseTestExpr
 */
export type CaseTestExpr = Message<"pg_query.CaseTestExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 type_id = 2;
   */
  typeId: number;

  /**
   * @generated from field: int32 type_mod = 3;
   */
  typeMod: number;

  /**
   * @generated from field: uint32 collation = 4;
   */
  collation: number;
};

/**
 * @generated from message pg_query.CaseTestExpr
 */
export type CaseTestExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: uint32 type_id = 2;
   */
  typeId?: number;

  /**
   * @generated from field: int32 type_mod = 3;
   */
  typeMod?: number;

  /**
   * @generated from field: uint32 collation = 4;
   */
  collation?: number;
};

/**
 * Describes the message pg_query.CaseTestExpr.
 * Use `create(CaseTestExprSchema)` to create a new message.
 */
export const CaseTestExprSchema: GenMessage<CaseTestExpr, CaseTestExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 41);

/**
 * @generated from message pg_query.ArrayExpr
 */
export type ArrayExpr = Message<"pg_query.ArrayExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 array_typeid = 2 [json_name = "array_typeid"];
   */
  arrayTypeid: number;

  /**
   * @generated from field: uint32 array_collid = 3 [json_name = "array_collid"];
   */
  arrayCollid: number;

  /**
   * @generated from field: uint32 element_typeid = 4 [json_name = "element_typeid"];
   */
  elementTypeid: number;

  /**
   * @generated from field: repeated pg_query.Node elements = 5;
   */
  elements: Node[];

  /**
   * @generated from field: bool multidims = 6;
   */
  multidims: boolean;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * @generated from message pg_query.ArrayExpr
 */
export type ArrayExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: uint32 array_typeid = 2 [json_name = "array_typeid"];
   */
  array_typeid?: number;

  /**
   * @generated from field: uint32 array_collid = 3 [json_name = "array_collid"];
   */
  array_collid?: number;

  /**
   * @generated from field: uint32 element_typeid = 4 [json_name = "element_typeid"];
   */
  element_typeid?: number;

  /**
   * @generated from field: repeated pg_query.Node elements = 5;
   */
  elements?: NodeJson[];

  /**
   * @generated from field: bool multidims = 6;
   */
  multidims?: boolean;

  /**
   * @generated from field: int32 location = 7;
   */
  location?: number;
};

/**
 * Describes the message pg_query.ArrayExpr.
 * Use `create(ArrayExprSchema)` to create a new message.
 */
export const ArrayExprSchema: GenMessage<ArrayExpr, ArrayExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 42);

/**
 * @generated from message pg_query.RowExpr
 */
export type RowExpr = Message<"pg_query.RowExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: repeated pg_query.Node args = 2;
   */
  args: Node[];

  /**
   * @generated from field: uint32 row_typeid = 3 [json_name = "row_typeid"];
   */
  rowTypeid: number;

  /**
   * @generated from field: pg_query.CoercionForm row_format = 4 [json_name = "row_format"];
   */
  rowFormat: CoercionForm;

  /**
   * @generated from field: repeated pg_query.Node colnames = 5;
   */
  colnames: Node[];

  /**
   * @generated from field: int32 location = 6;
   */
  location: number;
};

/**
 * @generated from message pg_query.RowExpr
 */
export type RowExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node args = 2;
   */
  args?: NodeJson[];

  /**
   * @generated from field: uint32 row_typeid = 3 [json_name = "row_typeid"];
   */
  row_typeid?: number;

  /**
   * @generated from field: pg_query.CoercionForm row_format = 4 [json_name = "row_format"];
   */
  row_format?: CoercionFormJson;

  /**
   * @generated from field: repeated pg_query.Node colnames = 5;
   */
  colnames?: NodeJson[];

  /**
   * @generated from field: int32 location = 6;
   */
  location?: number;
};

/**
 * Describes the message pg_query.RowExpr.
 * Use `create(RowExprSchema)` to create a new message.
 */
export const RowExprSchema: GenMessage<RowExpr, RowExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 43);

/**
 * @generated from message pg_query.RowCompareExpr
 */
export type RowCompareExpr = Message<"pg_query.RowCompareExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.RowCompareType rctype = 2;
   */
  rctype: RowCompareType;

  /**
   * @generated from field: repeated pg_query.Node opnos = 3;
   */
  opnos: Node[];

  /**
   * @generated from field: repeated pg_query.Node opfamilies = 4;
   */
  opfamilies: Node[];

  /**
   * @generated from field: repeated pg_query.Node inputcollids = 5;
   */
  inputcollids: Node[];

  /**
   * @generated from field: repeated pg_query.Node largs = 6;
   */
  largs: Node[];

  /**
   * @generated from field: repeated pg_query.Node rargs = 7;
   */
  rargs: Node[];
};

/**
 * @generated from message pg_query.RowCompareExpr
 */
export type RowCompareExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.RowCompareType rctype = 2;
   */
  rctype?: RowCompareTypeJson;

  /**
   * @generated from field: repeated pg_query.Node opnos = 3;
   */
  opnos?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node opfamilies = 4;
   */
  opfamilies?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node inputcollids = 5;
   */
  inputcollids?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node largs = 6;
   */
  largs?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node rargs = 7;
   */
  rargs?: NodeJson[];
};

/**
 * Describes the message pg_query.RowCompareExpr.
 * Use `create(RowCompareExprSchema)` to create a new message.
 */
export const RowCompareExprSchema: GenMessage<RowCompareExpr, RowCompareExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 44);

/**
 * @generated from message pg_query.CoalesceExpr
 */
export type CoalesceExpr = Message<"pg_query.CoalesceExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 coalescetype = 2;
   */
  coalescetype: number;

  /**
   * @generated from field: uint32 coalescecollid = 3;
   */
  coalescecollid: number;

  /**
   * @generated from field: repeated pg_query.Node args = 4;
   */
  args: Node[];

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.CoalesceExpr
 */
export type CoalesceExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: uint32 coalescetype = 2;
   */
  coalescetype?: number;

  /**
   * @generated from field: uint32 coalescecollid = 3;
   */
  coalescecollid?: number;

  /**
   * @generated from field: repeated pg_query.Node args = 4;
   */
  args?: NodeJson[];

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.CoalesceExpr.
 * Use `create(CoalesceExprSchema)` to create a new message.
 */
export const CoalesceExprSchema: GenMessage<CoalesceExpr, CoalesceExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 45);

/**
 * @generated from message pg_query.MinMaxExpr
 */
export type MinMaxExpr = Message<"pg_query.MinMaxExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 minmaxtype = 2;
   */
  minmaxtype: number;

  /**
   * @generated from field: uint32 minmaxcollid = 3;
   */
  minmaxcollid: number;

  /**
   * @generated from field: uint32 inputcollid = 4;
   */
  inputcollid: number;

  /**
   * @generated from field: pg_query.MinMaxOp op = 5;
   */
  op: MinMaxOp;

  /**
   * @generated from field: repeated pg_query.Node args = 6;
   */
  args: Node[];

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * @generated from message pg_query.MinMaxExpr
 */
export type MinMaxExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: uint32 minmaxtype = 2;
   */
  minmaxtype?: number;

  /**
   * @generated from field: uint32 minmaxcollid = 3;
   */
  minmaxcollid?: number;

  /**
   * @generated from field: uint32 inputcollid = 4;
   */
  inputcollid?: number;

  /**
   * @generated from field: pg_query.MinMaxOp op = 5;
   */
  op?: MinMaxOpJson;

  /**
   * @generated from field: repeated pg_query.Node args = 6;
   */
  args?: NodeJson[];

  /**
   * @generated from field: int32 location = 7;
   */
  location?: number;
};

/**
 * Describes the message pg_query.MinMaxExpr.
 * Use `create(MinMaxExprSchema)` to create a new message.
 */
export const MinMaxExprSchema: GenMessage<MinMaxExpr, MinMaxExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 46);

/**
 * @generated from message pg_query.SQLValueFunction
 */
export type SQLValueFunction = Message<"pg_query.SQLValueFunction"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.SQLValueFunctionOp op = 2;
   */
  op: SQLValueFunctionOp;

  /**
   * @generated from field: uint32 type = 3;
   */
  type: number;

  /**
   * @generated from field: int32 typmod = 4;
   */
  typmod: number;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.SQLValueFunction
 */
export type SQLValueFunctionJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.SQLValueFunctionOp op = 2;
   */
  op?: SQLValueFunctionOpJson;

  /**
   * @generated from field: uint32 type = 3;
   */
  type?: number;

  /**
   * @generated from field: int32 typmod = 4;
   */
  typmod?: number;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.SQLValueFunction.
 * Use `create(SQLValueFunctionSchema)` to create a new message.
 */
export const SQLValueFunctionSchema: GenMessage<SQLValueFunction, SQLValueFunctionJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 47);

/**
 * @generated from message pg_query.XmlExpr
 */
export type XmlExpr = Message<"pg_query.XmlExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.XmlExprOp op = 2;
   */
  op: XmlExprOp;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: repeated pg_query.Node named_args = 4 [json_name = "named_args"];
   */
  namedArgs: Node[];

  /**
   * @generated from field: repeated pg_query.Node arg_names = 5 [json_name = "arg_names"];
   */
  argNames: Node[];

  /**
   * @generated from field: repeated pg_query.Node args = 6;
   */
  args: Node[];

  /**
   * @generated from field: pg_query.XmlOptionType xmloption = 7;
   */
  xmloption: XmlOptionType;

  /**
   * @generated from field: bool indent = 8;
   */
  indent: boolean;

  /**
   * @generated from field: uint32 type = 9;
   */
  type: number;

  /**
   * @generated from field: int32 typmod = 10;
   */
  typmod: number;

  /**
   * @generated from field: int32 location = 11;
   */
  location: number;
};

/**
 * @generated from message pg_query.XmlExpr
 */
export type XmlExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.XmlExprOp op = 2;
   */
  op?: XmlExprOpJson;

  /**
   * @generated from field: string name = 3;
   */
  name?: string;

  /**
   * @generated from field: repeated pg_query.Node named_args = 4 [json_name = "named_args"];
   */
  named_args?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node arg_names = 5 [json_name = "arg_names"];
   */
  arg_names?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node args = 6;
   */
  args?: NodeJson[];

  /**
   * @generated from field: pg_query.XmlOptionType xmloption = 7;
   */
  xmloption?: XmlOptionTypeJson;

  /**
   * @generated from field: bool indent = 8;
   */
  indent?: boolean;

  /**
   * @generated from field: uint32 type = 9;
   */
  type?: number;

  /**
   * @generated from field: int32 typmod = 10;
   */
  typmod?: number;

  /**
   * @generated from field: int32 location = 11;
   */
  location?: number;
};

/**
 * Describes the message pg_query.XmlExpr.
 * Use `create(XmlExprSchema)` to create a new message.
 */
export const XmlExprSchema: GenMessage<XmlExpr, XmlExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 48);

/**
 * @generated from message pg_query.JsonFormat
 */
export type JsonFormat = Message<"pg_query.JsonFormat"> & {
  /**
   * @generated from field: pg_query.JsonFormatType format_type = 1 [json_name = "format_type"];
   */
  formatType: JsonFormatType;

  /**
   * @generated from field: pg_query.JsonEncoding encoding = 2;
   */
  encoding: JsonEncoding;

  /**
   * @generated from field: int32 location = 3;
   */
  location: number;
};

/**
 * @generated from message pg_query.JsonFormat
 */
export type JsonFormatJson = {
  /**
   * @generated from field: pg_query.JsonFormatType format_type = 1 [json_name = "format_type"];
   */
  format_type?: JsonFormatTypeJson;

  /**
   * @generated from field: pg_query.JsonEncoding encoding = 2;
   */
  encoding?: JsonEncodingJson;

  /**
   * @generated from field: int32 location = 3;
   */
  location?: number;
};

/**
 * Describes the message pg_query.JsonFormat.
 * Use `create(JsonFormatSchema)` to create a new message.
 */
export const JsonFormatSchema: GenMessage<JsonFormat, JsonFormatJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 49);

/**
 * @generated from message pg_query.JsonReturning
 */
export type JsonReturning = Message<"pg_query.JsonReturning"> & {
  /**
   * @generated from field: pg_query.JsonFormat format = 1;
   */
  format?: JsonFormat;

  /**
   * @generated from field: uint32 typid = 2;
   */
  typid: number;

  /**
   * @generated from field: int32 typmod = 3;
   */
  typmod: number;
};

/**
 * @generated from message pg_query.JsonReturning
 */
export type JsonReturningJson = {
  /**
   * @generated from field: pg_query.JsonFormat format = 1;
   */
  format?: JsonFormatJson;

  /**
   * @generated from field: uint32 typid = 2;
   */
  typid?: number;

  /**
   * @generated from field: int32 typmod = 3;
   */
  typmod?: number;
};

/**
 * Describes the message pg_query.JsonReturning.
 * Use `create(JsonReturningSchema)` to create a new message.
 */
export const JsonReturningSchema: GenMessage<JsonReturning, JsonReturningJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 50);

/**
 * @generated from message pg_query.JsonValueExpr
 */
export type JsonValueExpr = Message<"pg_query.JsonValueExpr"> & {
  /**
   * @generated from field: pg_query.Node raw_expr = 1 [json_name = "raw_expr"];
   */
  rawExpr?: Node;

  /**
   * @generated from field: pg_query.Node formatted_expr = 2 [json_name = "formatted_expr"];
   */
  formattedExpr?: Node;

  /**
   * @generated from field: pg_query.JsonFormat format = 3;
   */
  format?: JsonFormat;
};

/**
 * @generated from message pg_query.JsonValueExpr
 */
export type JsonValueExprJson = {
  /**
   * @generated from field: pg_query.Node raw_expr = 1 [json_name = "raw_expr"];
   */
  raw_expr?: NodeJson;

  /**
   * @generated from field: pg_query.Node formatted_expr = 2 [json_name = "formatted_expr"];
   */
  formatted_expr?: NodeJson;

  /**
   * @generated from field: pg_query.JsonFormat format = 3;
   */
  format?: JsonFormatJson;
};

/**
 * Describes the message pg_query.JsonValueExpr.
 * Use `create(JsonValueExprSchema)` to create a new message.
 */
export const JsonValueExprSchema: GenMessage<JsonValueExpr, JsonValueExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 51);

/**
 * @generated from message pg_query.JsonConstructorExpr
 */
export type JsonConstructorExpr = Message<"pg_query.JsonConstructorExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.JsonConstructorType type = 2;
   */
  type: JsonConstructorType;

  /**
   * @generated from field: repeated pg_query.Node args = 3;
   */
  args: Node[];

  /**
   * @generated from field: pg_query.Node func = 4;
   */
  func?: Node;

  /**
   * @generated from field: pg_query.Node coercion = 5;
   */
  coercion?: Node;

  /**
   * @generated from field: pg_query.JsonReturning returning = 6;
   */
  returning?: JsonReturning;

  /**
   * @generated from field: bool absent_on_null = 7 [json_name = "absent_on_null"];
   */
  absentOnNull: boolean;

  /**
   * @generated from field: bool unique = 8;
   */
  unique: boolean;

  /**
   * @generated from field: int32 location = 9;
   */
  location: number;
};

/**
 * @generated from message pg_query.JsonConstructorExpr
 */
export type JsonConstructorExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.JsonConstructorType type = 2;
   */
  type?: JsonConstructorTypeJson;

  /**
   * @generated from field: repeated pg_query.Node args = 3;
   */
  args?: NodeJson[];

  /**
   * @generated from field: pg_query.Node func = 4;
   */
  func?: NodeJson;

  /**
   * @generated from field: pg_query.Node coercion = 5;
   */
  coercion?: NodeJson;

  /**
   * @generated from field: pg_query.JsonReturning returning = 6;
   */
  returning?: JsonReturningJson;

  /**
   * @generated from field: bool absent_on_null = 7 [json_name = "absent_on_null"];
   */
  absent_on_null?: boolean;

  /**
   * @generated from field: bool unique = 8;
   */
  unique?: boolean;

  /**
   * @generated from field: int32 location = 9;
   */
  location?: number;
};

/**
 * Describes the message pg_query.JsonConstructorExpr.
 * Use `create(JsonConstructorExprSchema)` to create a new message.
 */
export const JsonConstructorExprSchema: GenMessage<JsonConstructorExpr, JsonConstructorExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 52);

/**
 * @generated from message pg_query.JsonIsPredicate
 */
export type JsonIsPredicate = Message<"pg_query.JsonIsPredicate"> & {
  /**
   * @generated from field: pg_query.Node expr = 1;
   */
  expr?: Node;

  /**
   * @generated from field: pg_query.JsonFormat format = 2;
   */
  format?: JsonFormat;

  /**
   * @generated from field: pg_query.JsonValueType item_type = 3 [json_name = "item_type"];
   */
  itemType: JsonValueType;

  /**
   * @generated from field: bool unique_keys = 4 [json_name = "unique_keys"];
   */
  uniqueKeys: boolean;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.JsonIsPredicate
 */
export type JsonIsPredicateJson = {
  /**
   * @generated from field: pg_query.Node expr = 1;
   */
  expr?: NodeJson;

  /**
   * @generated from field: pg_query.JsonFormat format = 2;
   */
  format?: JsonFormatJson;

  /**
   * @generated from field: pg_query.JsonValueType item_type = 3 [json_name = "item_type"];
   */
  item_type?: JsonValueTypeJson;

  /**
   * @generated from field: bool unique_keys = 4 [json_name = "unique_keys"];
   */
  unique_keys?: boolean;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.JsonIsPredicate.
 * Use `create(JsonIsPredicateSchema)` to create a new message.
 */
export const JsonIsPredicateSchema: GenMessage<JsonIsPredicate, JsonIsPredicateJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 53);

/**
 * @generated from message pg_query.NullTest
 */
export type NullTest = Message<"pg_query.NullTest"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: pg_query.NullTestType nulltesttype = 3;
   */
  nulltesttype: NullTestType;

  /**
   * @generated from field: bool argisrow = 4;
   */
  argisrow: boolean;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.NullTest
 */
export type NullTestJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: NodeJson;

  /**
   * @generated from field: pg_query.NullTestType nulltesttype = 3;
   */
  nulltesttype?: NullTestTypeJson;

  /**
   * @generated from field: bool argisrow = 4;
   */
  argisrow?: boolean;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.NullTest.
 * Use `create(NullTestSchema)` to create a new message.
 */
export const NullTestSchema: GenMessage<NullTest, NullTestJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 54);

/**
 * @generated from message pg_query.BooleanTest
 */
export type BooleanTest = Message<"pg_query.BooleanTest"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: pg_query.BoolTestType booltesttype = 3;
   */
  booltesttype: BoolTestType;

  /**
   * @generated from field: int32 location = 4;
   */
  location: number;
};

/**
 * @generated from message pg_query.BooleanTest
 */
export type BooleanTestJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: NodeJson;

  /**
   * @generated from field: pg_query.BoolTestType booltesttype = 3;
   */
  booltesttype?: BoolTestTypeJson;

  /**
   * @generated from field: int32 location = 4;
   */
  location?: number;
};

/**
 * Describes the message pg_query.BooleanTest.
 * Use `create(BooleanTestSchema)` to create a new message.
 */
export const BooleanTestSchema: GenMessage<BooleanTest, BooleanTestJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 55);

/**
 * @generated from message pg_query.CoerceToDomain
 */
export type CoerceToDomain = Message<"pg_query.CoerceToDomain"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: Node;

  /**
   * @generated from field: uint32 resulttype = 3;
   */
  resulttype: number;

  /**
   * @generated from field: int32 resulttypmod = 4;
   */
  resulttypmod: number;

  /**
   * @generated from field: uint32 resultcollid = 5;
   */
  resultcollid: number;

  /**
   * @generated from field: pg_query.CoercionForm coercionformat = 6;
   */
  coercionformat: CoercionForm;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * @generated from message pg_query.CoerceToDomain
 */
export type CoerceToDomainJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node arg = 2;
   */
  arg?: NodeJson;

  /**
   * @generated from field: uint32 resulttype = 3;
   */
  resulttype?: number;

  /**
   * @generated from field: int32 resulttypmod = 4;
   */
  resulttypmod?: number;

  /**
   * @generated from field: uint32 resultcollid = 5;
   */
  resultcollid?: number;

  /**
   * @generated from field: pg_query.CoercionForm coercionformat = 6;
   */
  coercionformat?: CoercionFormJson;

  /**
   * @generated from field: int32 location = 7;
   */
  location?: number;
};

/**
 * Describes the message pg_query.CoerceToDomain.
 * Use `create(CoerceToDomainSchema)` to create a new message.
 */
export const CoerceToDomainSchema: GenMessage<CoerceToDomain, CoerceToDomainJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 56);

/**
 * @generated from message pg_query.CoerceToDomainValue
 */
export type CoerceToDomainValue = Message<"pg_query.CoerceToDomainValue"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 type_id = 2;
   */
  typeId: number;

  /**
   * @generated from field: int32 type_mod = 3;
   */
  typeMod: number;

  /**
   * @generated from field: uint32 collation = 4;
   */
  collation: number;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.CoerceToDomainValue
 */
export type CoerceToDomainValueJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: uint32 type_id = 2;
   */
  typeId?: number;

  /**
   * @generated from field: int32 type_mod = 3;
   */
  typeMod?: number;

  /**
   * @generated from field: uint32 collation = 4;
   */
  collation?: number;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.CoerceToDomainValue.
 * Use `create(CoerceToDomainValueSchema)` to create a new message.
 */
export const CoerceToDomainValueSchema: GenMessage<CoerceToDomainValue, CoerceToDomainValueJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 57);

/**
 * @generated from message pg_query.SetToDefault
 */
export type SetToDefault = Message<"pg_query.SetToDefault"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 type_id = 2;
   */
  typeId: number;

  /**
   * @generated from field: int32 type_mod = 3;
   */
  typeMod: number;

  /**
   * @generated from field: uint32 collation = 4;
   */
  collation: number;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.SetToDefault
 */
export type SetToDefaultJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: uint32 type_id = 2;
   */
  typeId?: number;

  /**
   * @generated from field: int32 type_mod = 3;
   */
  typeMod?: number;

  /**
   * @generated from field: uint32 collation = 4;
   */
  collation?: number;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.SetToDefault.
 * Use `create(SetToDefaultSchema)` to create a new message.
 */
export const SetToDefaultSchema: GenMessage<SetToDefault, SetToDefaultJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 58);

/**
 * @generated from message pg_query.CurrentOfExpr
 */
export type CurrentOfExpr = Message<"pg_query.CurrentOfExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 cvarno = 2;
   */
  cvarno: number;

  /**
   * @generated from field: string cursor_name = 3 [json_name = "cursor_name"];
   */
  cursorName: string;

  /**
   * @generated from field: int32 cursor_param = 4 [json_name = "cursor_param"];
   */
  cursorParam: number;
};

/**
 * @generated from message pg_query.CurrentOfExpr
 */
export type CurrentOfExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: uint32 cvarno = 2;
   */
  cvarno?: number;

  /**
   * @generated from field: string cursor_name = 3 [json_name = "cursor_name"];
   */
  cursor_name?: string;

  /**
   * @generated from field: int32 cursor_param = 4 [json_name = "cursor_param"];
   */
  cursor_param?: number;
};

/**
 * Describes the message pg_query.CurrentOfExpr.
 * Use `create(CurrentOfExprSchema)` to create a new message.
 */
export const CurrentOfExprSchema: GenMessage<CurrentOfExpr, CurrentOfExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 59);

/**
 * @generated from message pg_query.NextValueExpr
 */
export type NextValueExpr = Message<"pg_query.NextValueExpr"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: uint32 seqid = 2;
   */
  seqid: number;

  /**
   * @generated from field: uint32 type_id = 3;
   */
  typeId: number;
};

/**
 * @generated from message pg_query.NextValueExpr
 */
export type NextValueExprJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: uint32 seqid = 2;
   */
  seqid?: number;

  /**
   * @generated from field: uint32 type_id = 3;
   */
  typeId?: number;
};

/**
 * Describes the message pg_query.NextValueExpr.
 * Use `create(NextValueExprSchema)` to create a new message.
 */
export const NextValueExprSchema: GenMessage<NextValueExpr, NextValueExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 60);

/**
 * @generated from message pg_query.InferenceElem
 */
export type InferenceElem = Message<"pg_query.InferenceElem"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: Node;

  /**
   * @generated from field: uint32 infercollid = 3;
   */
  infercollid: number;

  /**
   * @generated from field: uint32 inferopclass = 4;
   */
  inferopclass: number;
};

/**
 * @generated from message pg_query.InferenceElem
 */
export type InferenceElemJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: NodeJson;

  /**
   * @generated from field: uint32 infercollid = 3;
   */
  infercollid?: number;

  /**
   * @generated from field: uint32 inferopclass = 4;
   */
  inferopclass?: number;
};

/**
 * Describes the message pg_query.InferenceElem.
 * Use `create(InferenceElemSchema)` to create a new message.
 */
export const InferenceElemSchema: GenMessage<InferenceElem, InferenceElemJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 61);

/**
 * @generated from message pg_query.TargetEntry
 */
export type TargetEntry = Message<"pg_query.TargetEntry"> & {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: Node;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: Node;

  /**
   * @generated from field: int32 resno = 3;
   */
  resno: number;

  /**
   * @generated from field: string resname = 4;
   */
  resname: string;

  /**
   * @generated from field: uint32 ressortgroupref = 5;
   */
  ressortgroupref: number;

  /**
   * @generated from field: uint32 resorigtbl = 6;
   */
  resorigtbl: number;

  /**
   * @generated from field: int32 resorigcol = 7;
   */
  resorigcol: number;

  /**
   * @generated from field: bool resjunk = 8;
   */
  resjunk: boolean;
};

/**
 * @generated from message pg_query.TargetEntry
 */
export type TargetEntryJson = {
  /**
   * @generated from field: pg_query.Node xpr = 1;
   */
  xpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: NodeJson;

  /**
   * @generated from field: int32 resno = 3;
   */
  resno?: number;

  /**
   * @generated from field: string resname = 4;
   */
  resname?: string;

  /**
   * @generated from field: uint32 ressortgroupref = 5;
   */
  ressortgroupref?: number;

  /**
   * @generated from field: uint32 resorigtbl = 6;
   */
  resorigtbl?: number;

  /**
   * @generated from field: int32 resorigcol = 7;
   */
  resorigcol?: number;

  /**
   * @generated from field: bool resjunk = 8;
   */
  resjunk?: boolean;
};

/**
 * Describes the message pg_query.TargetEntry.
 * Use `create(TargetEntrySchema)` to create a new message.
 */
export const TargetEntrySchema: GenMessage<TargetEntry, TargetEntryJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 62);

/**
 * @generated from message pg_query.RangeTblRef
 */
export type RangeTblRef = Message<"pg_query.RangeTblRef"> & {
  /**
   * @generated from field: int32 rtindex = 1;
   */
  rtindex: number;
};

/**
 * @generated from message pg_query.RangeTblRef
 */
export type RangeTblRefJson = {
  /**
   * @generated from field: int32 rtindex = 1;
   */
  rtindex?: number;
};

/**
 * Describes the message pg_query.RangeTblRef.
 * Use `create(RangeTblRefSchema)` to create a new message.
 */
export const RangeTblRefSchema: GenMessage<RangeTblRef, RangeTblRefJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 63);

/**
 * @generated from message pg_query.JoinExpr
 */
export type JoinExpr = Message<"pg_query.JoinExpr"> & {
  /**
   * @generated from field: pg_query.JoinType jointype = 1;
   */
  jointype: JoinType;

  /**
   * @generated from field: bool is_natural = 2;
   */
  isNatural: boolean;

  /**
   * @generated from field: pg_query.Node larg = 3;
   */
  larg?: Node;

  /**
   * @generated from field: pg_query.Node rarg = 4;
   */
  rarg?: Node;

  /**
   * @generated from field: repeated pg_query.Node using_clause = 5;
   */
  usingClause: Node[];

  /**
   * @generated from field: pg_query.Alias join_using_alias = 6 [json_name = "join_using_alias"];
   */
  joinUsingAlias?: Alias;

  /**
   * @generated from field: pg_query.Node quals = 7;
   */
  quals?: Node;

  /**
   * @generated from field: pg_query.Alias alias = 8;
   */
  alias?: Alias;

  /**
   * @generated from field: int32 rtindex = 9;
   */
  rtindex: number;
};

/**
 * @generated from message pg_query.JoinExpr
 */
export type JoinExprJson = {
  /**
   * @generated from field: pg_query.JoinType jointype = 1;
   */
  jointype?: JoinTypeJson;

  /**
   * @generated from field: bool is_natural = 2;
   */
  isNatural?: boolean;

  /**
   * @generated from field: pg_query.Node larg = 3;
   */
  larg?: NodeJson;

  /**
   * @generated from field: pg_query.Node rarg = 4;
   */
  rarg?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node using_clause = 5;
   */
  usingClause?: NodeJson[];

  /**
   * @generated from field: pg_query.Alias join_using_alias = 6 [json_name = "join_using_alias"];
   */
  join_using_alias?: AliasJson;

  /**
   * @generated from field: pg_query.Node quals = 7;
   */
  quals?: NodeJson;

  /**
   * @generated from field: pg_query.Alias alias = 8;
   */
  alias?: AliasJson;

  /**
   * @generated from field: int32 rtindex = 9;
   */
  rtindex?: number;
};

/**
 * Describes the message pg_query.JoinExpr.
 * Use `create(JoinExprSchema)` to create a new message.
 */
export const JoinExprSchema: GenMessage<JoinExpr, JoinExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 64);

/**
 * @generated from message pg_query.FromExpr
 */
export type FromExpr = Message<"pg_query.FromExpr"> & {
  /**
   * @generated from field: repeated pg_query.Node fromlist = 1;
   */
  fromlist: Node[];

  /**
   * @generated from field: pg_query.Node quals = 2;
   */
  quals?: Node;
};

/**
 * @generated from message pg_query.FromExpr
 */
export type FromExprJson = {
  /**
   * @generated from field: repeated pg_query.Node fromlist = 1;
   */
  fromlist?: NodeJson[];

  /**
   * @generated from field: pg_query.Node quals = 2;
   */
  quals?: NodeJson;
};

/**
 * Describes the message pg_query.FromExpr.
 * Use `create(FromExprSchema)` to create a new message.
 */
export const FromExprSchema: GenMessage<FromExpr, FromExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 65);

/**
 * @generated from message pg_query.OnConflictExpr
 */
export type OnConflictExpr = Message<"pg_query.OnConflictExpr"> & {
  /**
   * @generated from field: pg_query.OnConflictAction action = 1;
   */
  action: OnConflictAction;

  /**
   * @generated from field: repeated pg_query.Node arbiter_elems = 2;
   */
  arbiterElems: Node[];

  /**
   * @generated from field: pg_query.Node arbiter_where = 3;
   */
  arbiterWhere?: Node;

  /**
   * @generated from field: uint32 constraint = 4;
   */
  constraint: number;

  /**
   * @generated from field: repeated pg_query.Node on_conflict_set = 5;
   */
  onConflictSet: Node[];

  /**
   * @generated from field: pg_query.Node on_conflict_where = 6;
   */
  onConflictWhere?: Node;

  /**
   * @generated from field: int32 excl_rel_index = 7;
   */
  exclRelIndex: number;

  /**
   * @generated from field: repeated pg_query.Node excl_rel_tlist = 8;
   */
  exclRelTlist: Node[];
};

/**
 * @generated from message pg_query.OnConflictExpr
 */
export type OnConflictExprJson = {
  /**
   * @generated from field: pg_query.OnConflictAction action = 1;
   */
  action?: OnConflictActionJson;

  /**
   * @generated from field: repeated pg_query.Node arbiter_elems = 2;
   */
  arbiterElems?: NodeJson[];

  /**
   * @generated from field: pg_query.Node arbiter_where = 3;
   */
  arbiterWhere?: NodeJson;

  /**
   * @generated from field: uint32 constraint = 4;
   */
  constraint?: number;

  /**
   * @generated from field: repeated pg_query.Node on_conflict_set = 5;
   */
  onConflictSet?: NodeJson[];

  /**
   * @generated from field: pg_query.Node on_conflict_where = 6;
   */
  onConflictWhere?: NodeJson;

  /**
   * @generated from field: int32 excl_rel_index = 7;
   */
  exclRelIndex?: number;

  /**
   * @generated from field: repeated pg_query.Node excl_rel_tlist = 8;
   */
  exclRelTlist?: NodeJson[];
};

/**
 * Describes the message pg_query.OnConflictExpr.
 * Use `create(OnConflictExprSchema)` to create a new message.
 */
export const OnConflictExprSchema: GenMessage<OnConflictExpr, OnConflictExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 66);

/**
 * @generated from message pg_query.Query
 */
export type Query = Message<"pg_query.Query"> & {
  /**
   * @generated from field: pg_query.CmdType command_type = 1;
   */
  commandType: CmdType;

  /**
   * @generated from field: pg_query.QuerySource query_source = 2;
   */
  querySource: QuerySource;

  /**
   * @generated from field: bool can_set_tag = 3;
   */
  canSetTag: boolean;

  /**
   * @generated from field: pg_query.Node utility_stmt = 4;
   */
  utilityStmt?: Node;

  /**
   * @generated from field: int32 result_relation = 5;
   */
  resultRelation: number;

  /**
   * @generated from field: bool has_aggs = 6;
   */
  hasAggs: boolean;

  /**
   * @generated from field: bool has_window_funcs = 7;
   */
  hasWindowFuncs: boolean;

  /**
   * @generated from field: bool has_target_srfs = 8 [json_name = "hasTargetSRFs"];
   */
  hasTargetSrfs: boolean;

  /**
   * @generated from field: bool has_sub_links = 9;
   */
  hasSubLinks: boolean;

  /**
   * @generated from field: bool has_distinct_on = 10;
   */
  hasDistinctOn: boolean;

  /**
   * @generated from field: bool has_recursive = 11;
   */
  hasRecursive: boolean;

  /**
   * @generated from field: bool has_modifying_cte = 12 [json_name = "hasModifyingCTE"];
   */
  hasModifyingCte: boolean;

  /**
   * @generated from field: bool has_for_update = 13;
   */
  hasForUpdate: boolean;

  /**
   * @generated from field: bool has_row_security = 14;
   */
  hasRowSecurity: boolean;

  /**
   * @generated from field: bool is_return = 15;
   */
  isReturn: boolean;

  /**
   * @generated from field: repeated pg_query.Node cte_list = 16;
   */
  cteList: Node[];

  /**
   * @generated from field: repeated pg_query.Node rtable = 17;
   */
  rtable: Node[];

  /**
   * @generated from field: repeated pg_query.Node rteperminfos = 18;
   */
  rteperminfos: Node[];

  /**
   * @generated from field: pg_query.FromExpr jointree = 19;
   */
  jointree?: FromExpr;

  /**
   * @generated from field: repeated pg_query.Node merge_action_list = 20;
   */
  mergeActionList: Node[];

  /**
   * @generated from field: bool merge_use_outer_join = 21;
   */
  mergeUseOuterJoin: boolean;

  /**
   * @generated from field: repeated pg_query.Node target_list = 22;
   */
  targetList: Node[];

  /**
   * @generated from field: pg_query.OverridingKind override = 23;
   */
  override: OverridingKind;

  /**
   * @generated from field: pg_query.OnConflictExpr on_conflict = 24;
   */
  onConflict?: OnConflictExpr;

  /**
   * @generated from field: repeated pg_query.Node returning_list = 25;
   */
  returningList: Node[];

  /**
   * @generated from field: repeated pg_query.Node group_clause = 26;
   */
  groupClause: Node[];

  /**
   * @generated from field: bool group_distinct = 27;
   */
  groupDistinct: boolean;

  /**
   * @generated from field: repeated pg_query.Node grouping_sets = 28;
   */
  groupingSets: Node[];

  /**
   * @generated from field: pg_query.Node having_qual = 29;
   */
  havingQual?: Node;

  /**
   * @generated from field: repeated pg_query.Node window_clause = 30;
   */
  windowClause: Node[];

  /**
   * @generated from field: repeated pg_query.Node distinct_clause = 31;
   */
  distinctClause: Node[];

  /**
   * @generated from field: repeated pg_query.Node sort_clause = 32;
   */
  sortClause: Node[];

  /**
   * @generated from field: pg_query.Node limit_offset = 33;
   */
  limitOffset?: Node;

  /**
   * @generated from field: pg_query.Node limit_count = 34;
   */
  limitCount?: Node;

  /**
   * @generated from field: pg_query.LimitOption limit_option = 35;
   */
  limitOption: LimitOption;

  /**
   * @generated from field: repeated pg_query.Node row_marks = 36;
   */
  rowMarks: Node[];

  /**
   * @generated from field: pg_query.Node set_operations = 37;
   */
  setOperations?: Node;

  /**
   * @generated from field: repeated pg_query.Node constraint_deps = 38;
   */
  constraintDeps: Node[];

  /**
   * @generated from field: repeated pg_query.Node with_check_options = 39;
   */
  withCheckOptions: Node[];

  /**
   * @generated from field: int32 stmt_location = 40 [json_name = "stmt_location"];
   */
  stmtLocation: number;

  /**
   * @generated from field: int32 stmt_len = 41 [json_name = "stmt_len"];
   */
  stmtLen: number;
};

/**
 * @generated from message pg_query.Query
 */
export type QueryJson = {
  /**
   * @generated from field: pg_query.CmdType command_type = 1;
   */
  commandType?: CmdTypeJson;

  /**
   * @generated from field: pg_query.QuerySource query_source = 2;
   */
  querySource?: QuerySourceJson;

  /**
   * @generated from field: bool can_set_tag = 3;
   */
  canSetTag?: boolean;

  /**
   * @generated from field: pg_query.Node utility_stmt = 4;
   */
  utilityStmt?: NodeJson;

  /**
   * @generated from field: int32 result_relation = 5;
   */
  resultRelation?: number;

  /**
   * @generated from field: bool has_aggs = 6;
   */
  hasAggs?: boolean;

  /**
   * @generated from field: bool has_window_funcs = 7;
   */
  hasWindowFuncs?: boolean;

  /**
   * @generated from field: bool has_target_srfs = 8 [json_name = "hasTargetSRFs"];
   */
  hasTargetSRFs?: boolean;

  /**
   * @generated from field: bool has_sub_links = 9;
   */
  hasSubLinks?: boolean;

  /**
   * @generated from field: bool has_distinct_on = 10;
   */
  hasDistinctOn?: boolean;

  /**
   * @generated from field: bool has_recursive = 11;
   */
  hasRecursive?: boolean;

  /**
   * @generated from field: bool has_modifying_cte = 12 [json_name = "hasModifyingCTE"];
   */
  hasModifyingCTE?: boolean;

  /**
   * @generated from field: bool has_for_update = 13;
   */
  hasForUpdate?: boolean;

  /**
   * @generated from field: bool has_row_security = 14;
   */
  hasRowSecurity?: boolean;

  /**
   * @generated from field: bool is_return = 15;
   */
  isReturn?: boolean;

  /**
   * @generated from field: repeated pg_query.Node cte_list = 16;
   */
  cteList?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node rtable = 17;
   */
  rtable?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node rteperminfos = 18;
   */
  rteperminfos?: NodeJson[];

  /**
   * @generated from field: pg_query.FromExpr jointree = 19;
   */
  jointree?: FromExprJson;

  /**
   * @generated from field: repeated pg_query.Node merge_action_list = 20;
   */
  mergeActionList?: NodeJson[];

  /**
   * @generated from field: bool merge_use_outer_join = 21;
   */
  mergeUseOuterJoin?: boolean;

  /**
   * @generated from field: repeated pg_query.Node target_list = 22;
   */
  targetList?: NodeJson[];

  /**
   * @generated from field: pg_query.OverridingKind override = 23;
   */
  override?: OverridingKindJson;

  /**
   * @generated from field: pg_query.OnConflictExpr on_conflict = 24;
   */
  onConflict?: OnConflictExprJson;

  /**
   * @generated from field: repeated pg_query.Node returning_list = 25;
   */
  returningList?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node group_clause = 26;
   */
  groupClause?: NodeJson[];

  /**
   * @generated from field: bool group_distinct = 27;
   */
  groupDistinct?: boolean;

  /**
   * @generated from field: repeated pg_query.Node grouping_sets = 28;
   */
  groupingSets?: NodeJson[];

  /**
   * @generated from field: pg_query.Node having_qual = 29;
   */
  havingQual?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node window_clause = 30;
   */
  windowClause?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node distinct_clause = 31;
   */
  distinctClause?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node sort_clause = 32;
   */
  sortClause?: NodeJson[];

  /**
   * @generated from field: pg_query.Node limit_offset = 33;
   */
  limitOffset?: NodeJson;

  /**
   * @generated from field: pg_query.Node limit_count = 34;
   */
  limitCount?: NodeJson;

  /**
   * @generated from field: pg_query.LimitOption limit_option = 35;
   */
  limitOption?: LimitOptionJson;

  /**
   * @generated from field: repeated pg_query.Node row_marks = 36;
   */
  rowMarks?: NodeJson[];

  /**
   * @generated from field: pg_query.Node set_operations = 37;
   */
  setOperations?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node constraint_deps = 38;
   */
  constraintDeps?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node with_check_options = 39;
   */
  withCheckOptions?: NodeJson[];

  /**
   * @generated from field: int32 stmt_location = 40 [json_name = "stmt_location"];
   */
  stmt_location?: number;

  /**
   * @generated from field: int32 stmt_len = 41 [json_name = "stmt_len"];
   */
  stmt_len?: number;
};

/**
 * Describes the message pg_query.Query.
 * Use `create(QuerySchema)` to create a new message.
 */
export const QuerySchema: GenMessage<Query, QueryJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 67);

/**
 * @generated from message pg_query.TypeName
 */
export type TypeName = Message<"pg_query.TypeName"> & {
  /**
   * @generated from field: repeated pg_query.Node names = 1;
   */
  names: Node[];

  /**
   * @generated from field: uint32 type_oid = 2;
   */
  typeOid: number;

  /**
   * @generated from field: bool setof = 3;
   */
  setof: boolean;

  /**
   * @generated from field: bool pct_type = 4 [json_name = "pct_type"];
   */
  pctType: boolean;

  /**
   * @generated from field: repeated pg_query.Node typmods = 5;
   */
  typmods: Node[];

  /**
   * @generated from field: int32 typemod = 6;
   */
  typemod: number;

  /**
   * @generated from field: repeated pg_query.Node array_bounds = 7;
   */
  arrayBounds: Node[];

  /**
   * @generated from field: int32 location = 8;
   */
  location: number;
};

/**
 * @generated from message pg_query.TypeName
 */
export type TypeNameJson = {
  /**
   * @generated from field: repeated pg_query.Node names = 1;
   */
  names?: NodeJson[];

  /**
   * @generated from field: uint32 type_oid = 2;
   */
  typeOid?: number;

  /**
   * @generated from field: bool setof = 3;
   */
  setof?: boolean;

  /**
   * @generated from field: bool pct_type = 4 [json_name = "pct_type"];
   */
  pct_type?: boolean;

  /**
   * @generated from field: repeated pg_query.Node typmods = 5;
   */
  typmods?: NodeJson[];

  /**
   * @generated from field: int32 typemod = 6;
   */
  typemod?: number;

  /**
   * @generated from field: repeated pg_query.Node array_bounds = 7;
   */
  arrayBounds?: NodeJson[];

  /**
   * @generated from field: int32 location = 8;
   */
  location?: number;
};

/**
 * Describes the message pg_query.TypeName.
 * Use `create(TypeNameSchema)` to create a new message.
 */
export const TypeNameSchema: GenMessage<TypeName, TypeNameJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 68);

/**
 * @generated from message pg_query.ColumnRef
 */
export type ColumnRef = Message<"pg_query.ColumnRef"> & {
  /**
   * @generated from field: repeated pg_query.Node fields = 1;
   */
  fields: Node[];

  /**
   * @generated from field: int32 location = 2;
   */
  location: number;
};

/**
 * @generated from message pg_query.ColumnRef
 */
export type ColumnRefJson = {
  /**
   * @generated from field: repeated pg_query.Node fields = 1;
   */
  fields?: NodeJson[];

  /**
   * @generated from field: int32 location = 2;
   */
  location?: number;
};

/**
 * Describes the message pg_query.ColumnRef.
 * Use `create(ColumnRefSchema)` to create a new message.
 */
export const ColumnRefSchema: GenMessage<ColumnRef, ColumnRefJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 69);

/**
 * @generated from message pg_query.ParamRef
 */
export type ParamRef = Message<"pg_query.ParamRef"> & {
  /**
   * @generated from field: int32 number = 1;
   */
  number: number;

  /**
   * @generated from field: int32 location = 2;
   */
  location: number;
};

/**
 * @generated from message pg_query.ParamRef
 */
export type ParamRefJson = {
  /**
   * @generated from field: int32 number = 1;
   */
  number?: number;

  /**
   * @generated from field: int32 location = 2;
   */
  location?: number;
};

/**
 * Describes the message pg_query.ParamRef.
 * Use `create(ParamRefSchema)` to create a new message.
 */
export const ParamRefSchema: GenMessage<ParamRef, ParamRefJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 70);

/**
 * @generated from message pg_query.A_Expr
 */
export type A_Expr = Message<"pg_query.A_Expr"> & {
  /**
   * @generated from field: pg_query.A_Expr_Kind kind = 1;
   */
  kind: A_Expr_Kind;

  /**
   * @generated from field: repeated pg_query.Node name = 2;
   */
  name: Node[];

  /**
   * @generated from field: pg_query.Node lexpr = 3;
   */
  lexpr?: Node;

  /**
   * @generated from field: pg_query.Node rexpr = 4;
   */
  rexpr?: Node;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.A_Expr
 */
export type A_ExprJson = {
  /**
   * @generated from field: pg_query.A_Expr_Kind kind = 1;
   */
  kind?: A_Expr_KindJson;

  /**
   * @generated from field: repeated pg_query.Node name = 2;
   */
  name?: NodeJson[];

  /**
   * @generated from field: pg_query.Node lexpr = 3;
   */
  lexpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node rexpr = 4;
   */
  rexpr?: NodeJson;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.A_Expr.
 * Use `create(A_ExprSchema)` to create a new message.
 */
export const A_ExprSchema: GenMessage<A_Expr, A_ExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 71);

/**
 * @generated from message pg_query.TypeCast
 */
export type TypeCast = Message<"pg_query.TypeCast"> & {
  /**
   * @generated from field: pg_query.Node arg = 1;
   */
  arg?: Node;

  /**
   * @generated from field: pg_query.TypeName type_name = 2;
   */
  typeName?: TypeName;

  /**
   * @generated from field: int32 location = 3;
   */
  location: number;
};

/**
 * @generated from message pg_query.TypeCast
 */
export type TypeCastJson = {
  /**
   * @generated from field: pg_query.Node arg = 1;
   */
  arg?: NodeJson;

  /**
   * @generated from field: pg_query.TypeName type_name = 2;
   */
  typeName?: TypeNameJson;

  /**
   * @generated from field: int32 location = 3;
   */
  location?: number;
};

/**
 * Describes the message pg_query.TypeCast.
 * Use `create(TypeCastSchema)` to create a new message.
 */
export const TypeCastSchema: GenMessage<TypeCast, TypeCastJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 72);

/**
 * @generated from message pg_query.CollateClause
 */
export type CollateClause = Message<"pg_query.CollateClause"> & {
  /**
   * @generated from field: pg_query.Node arg = 1;
   */
  arg?: Node;

  /**
   * @generated from field: repeated pg_query.Node collname = 2;
   */
  collname: Node[];

  /**
   * @generated from field: int32 location = 3;
   */
  location: number;
};

/**
 * @generated from message pg_query.CollateClause
 */
export type CollateClauseJson = {
  /**
   * @generated from field: pg_query.Node arg = 1;
   */
  arg?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node collname = 2;
   */
  collname?: NodeJson[];

  /**
   * @generated from field: int32 location = 3;
   */
  location?: number;
};

/**
 * Describes the message pg_query.CollateClause.
 * Use `create(CollateClauseSchema)` to create a new message.
 */
export const CollateClauseSchema: GenMessage<CollateClause, CollateClauseJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 73);

/**
 * @generated from message pg_query.RoleSpec
 */
export type RoleSpec = Message<"pg_query.RoleSpec"> & {
  /**
   * @generated from field: pg_query.RoleSpecType roletype = 1;
   */
  roletype: RoleSpecType;

  /**
   * @generated from field: string rolename = 2;
   */
  rolename: string;

  /**
   * @generated from field: int32 location = 3;
   */
  location: number;
};

/**
 * @generated from message pg_query.RoleSpec
 */
export type RoleSpecJson = {
  /**
   * @generated from field: pg_query.RoleSpecType roletype = 1;
   */
  roletype?: RoleSpecTypeJson;

  /**
   * @generated from field: string rolename = 2;
   */
  rolename?: string;

  /**
   * @generated from field: int32 location = 3;
   */
  location?: number;
};

/**
 * Describes the message pg_query.RoleSpec.
 * Use `create(RoleSpecSchema)` to create a new message.
 */
export const RoleSpecSchema: GenMessage<RoleSpec, RoleSpecJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 74);

/**
 * @generated from message pg_query.FuncCall
 */
export type FuncCall = Message<"pg_query.FuncCall"> & {
  /**
   * @generated from field: repeated pg_query.Node funcname = 1;
   */
  funcname: Node[];

  /**
   * @generated from field: repeated pg_query.Node args = 2;
   */
  args: Node[];

  /**
   * @generated from field: repeated pg_query.Node agg_order = 3 [json_name = "agg_order"];
   */
  aggOrder: Node[];

  /**
   * @generated from field: pg_query.Node agg_filter = 4 [json_name = "agg_filter"];
   */
  aggFilter?: Node;

  /**
   * @generated from field: pg_query.WindowDef over = 5;
   */
  over?: WindowDef;

  /**
   * @generated from field: bool agg_within_group = 6 [json_name = "agg_within_group"];
   */
  aggWithinGroup: boolean;

  /**
   * @generated from field: bool agg_star = 7 [json_name = "agg_star"];
   */
  aggStar: boolean;

  /**
   * @generated from field: bool agg_distinct = 8 [json_name = "agg_distinct"];
   */
  aggDistinct: boolean;

  /**
   * @generated from field: bool func_variadic = 9 [json_name = "func_variadic"];
   */
  funcVariadic: boolean;

  /**
   * @generated from field: pg_query.CoercionForm funcformat = 10;
   */
  funcformat: CoercionForm;

  /**
   * @generated from field: int32 location = 11;
   */
  location: number;
};

/**
 * @generated from message pg_query.FuncCall
 */
export type FuncCallJson = {
  /**
   * @generated from field: repeated pg_query.Node funcname = 1;
   */
  funcname?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node args = 2;
   */
  args?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node agg_order = 3 [json_name = "agg_order"];
   */
  agg_order?: NodeJson[];

  /**
   * @generated from field: pg_query.Node agg_filter = 4 [json_name = "agg_filter"];
   */
  agg_filter?: NodeJson;

  /**
   * @generated from field: pg_query.WindowDef over = 5;
   */
  over?: WindowDefJson;

  /**
   * @generated from field: bool agg_within_group = 6 [json_name = "agg_within_group"];
   */
  agg_within_group?: boolean;

  /**
   * @generated from field: bool agg_star = 7 [json_name = "agg_star"];
   */
  agg_star?: boolean;

  /**
   * @generated from field: bool agg_distinct = 8 [json_name = "agg_distinct"];
   */
  agg_distinct?: boolean;

  /**
   * @generated from field: bool func_variadic = 9 [json_name = "func_variadic"];
   */
  func_variadic?: boolean;

  /**
   * @generated from field: pg_query.CoercionForm funcformat = 10;
   */
  funcformat?: CoercionFormJson;

  /**
   * @generated from field: int32 location = 11;
   */
  location?: number;
};

/**
 * Describes the message pg_query.FuncCall.
 * Use `create(FuncCallSchema)` to create a new message.
 */
export const FuncCallSchema: GenMessage<FuncCall, FuncCallJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 75);

/**
 * @generated from message pg_query.A_Star
 */
export type A_Star = Message<"pg_query.A_Star"> & {
};

/**
 * @generated from message pg_query.A_Star
 */
export type A_StarJson = {
};

/**
 * Describes the message pg_query.A_Star.
 * Use `create(A_StarSchema)` to create a new message.
 */
export const A_StarSchema: GenMessage<A_Star, A_StarJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 76);

/**
 * @generated from message pg_query.A_Indices
 */
export type A_Indices = Message<"pg_query.A_Indices"> & {
  /**
   * @generated from field: bool is_slice = 1 [json_name = "is_slice"];
   */
  isSlice: boolean;

  /**
   * @generated from field: pg_query.Node lidx = 2;
   */
  lidx?: Node;

  /**
   * @generated from field: pg_query.Node uidx = 3;
   */
  uidx?: Node;
};

/**
 * @generated from message pg_query.A_Indices
 */
export type A_IndicesJson = {
  /**
   * @generated from field: bool is_slice = 1 [json_name = "is_slice"];
   */
  is_slice?: boolean;

  /**
   * @generated from field: pg_query.Node lidx = 2;
   */
  lidx?: NodeJson;

  /**
   * @generated from field: pg_query.Node uidx = 3;
   */
  uidx?: NodeJson;
};

/**
 * Describes the message pg_query.A_Indices.
 * Use `create(A_IndicesSchema)` to create a new message.
 */
export const A_IndicesSchema: GenMessage<A_Indices, A_IndicesJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 77);

/**
 * @generated from message pg_query.A_Indirection
 */
export type A_Indirection = Message<"pg_query.A_Indirection"> & {
  /**
   * @generated from field: pg_query.Node arg = 1;
   */
  arg?: Node;

  /**
   * @generated from field: repeated pg_query.Node indirection = 2;
   */
  indirection: Node[];
};

/**
 * @generated from message pg_query.A_Indirection
 */
export type A_IndirectionJson = {
  /**
   * @generated from field: pg_query.Node arg = 1;
   */
  arg?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node indirection = 2;
   */
  indirection?: NodeJson[];
};

/**
 * Describes the message pg_query.A_Indirection.
 * Use `create(A_IndirectionSchema)` to create a new message.
 */
export const A_IndirectionSchema: GenMessage<A_Indirection, A_IndirectionJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 78);

/**
 * @generated from message pg_query.A_ArrayExpr
 */
export type A_ArrayExpr = Message<"pg_query.A_ArrayExpr"> & {
  /**
   * @generated from field: repeated pg_query.Node elements = 1;
   */
  elements: Node[];

  /**
   * @generated from field: int32 location = 2;
   */
  location: number;
};

/**
 * @generated from message pg_query.A_ArrayExpr
 */
export type A_ArrayExprJson = {
  /**
   * @generated from field: repeated pg_query.Node elements = 1;
   */
  elements?: NodeJson[];

  /**
   * @generated from field: int32 location = 2;
   */
  location?: number;
};

/**
 * Describes the message pg_query.A_ArrayExpr.
 * Use `create(A_ArrayExprSchema)` to create a new message.
 */
export const A_ArrayExprSchema: GenMessage<A_ArrayExpr, A_ArrayExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 79);

/**
 * @generated from message pg_query.ResTarget
 */
export type ResTarget = Message<"pg_query.ResTarget"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated pg_query.Node indirection = 2;
   */
  indirection: Node[];

  /**
   * @generated from field: pg_query.Node val = 3;
   */
  val?: Node;

  /**
   * @generated from field: int32 location = 4;
   */
  location: number;
};

/**
 * @generated from message pg_query.ResTarget
 */
export type ResTargetJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: repeated pg_query.Node indirection = 2;
   */
  indirection?: NodeJson[];

  /**
   * @generated from field: pg_query.Node val = 3;
   */
  val?: NodeJson;

  /**
   * @generated from field: int32 location = 4;
   */
  location?: number;
};

/**
 * Describes the message pg_query.ResTarget.
 * Use `create(ResTargetSchema)` to create a new message.
 */
export const ResTargetSchema: GenMessage<ResTarget, ResTargetJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 80);

/**
 * @generated from message pg_query.MultiAssignRef
 */
export type MultiAssignRef = Message<"pg_query.MultiAssignRef"> & {
  /**
   * @generated from field: pg_query.Node source = 1;
   */
  source?: Node;

  /**
   * @generated from field: int32 colno = 2;
   */
  colno: number;

  /**
   * @generated from field: int32 ncolumns = 3;
   */
  ncolumns: number;
};

/**
 * @generated from message pg_query.MultiAssignRef
 */
export type MultiAssignRefJson = {
  /**
   * @generated from field: pg_query.Node source = 1;
   */
  source?: NodeJson;

  /**
   * @generated from field: int32 colno = 2;
   */
  colno?: number;

  /**
   * @generated from field: int32 ncolumns = 3;
   */
  ncolumns?: number;
};

/**
 * Describes the message pg_query.MultiAssignRef.
 * Use `create(MultiAssignRefSchema)` to create a new message.
 */
export const MultiAssignRefSchema: GenMessage<MultiAssignRef, MultiAssignRefJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 81);

/**
 * @generated from message pg_query.SortBy
 */
export type SortBy = Message<"pg_query.SortBy"> & {
  /**
   * @generated from field: pg_query.Node node = 1;
   */
  node?: Node;

  /**
   * @generated from field: pg_query.SortByDir sortby_dir = 2 [json_name = "sortby_dir"];
   */
  sortbyDir: SortByDir;

  /**
   * @generated from field: pg_query.SortByNulls sortby_nulls = 3 [json_name = "sortby_nulls"];
   */
  sortbyNulls: SortByNulls;

  /**
   * @generated from field: repeated pg_query.Node use_op = 4;
   */
  useOp: Node[];

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.SortBy
 */
export type SortByJson = {
  /**
   * @generated from field: pg_query.Node node = 1;
   */
  node?: NodeJson;

  /**
   * @generated from field: pg_query.SortByDir sortby_dir = 2 [json_name = "sortby_dir"];
   */
  sortby_dir?: SortByDirJson;

  /**
   * @generated from field: pg_query.SortByNulls sortby_nulls = 3 [json_name = "sortby_nulls"];
   */
  sortby_nulls?: SortByNullsJson;

  /**
   * @generated from field: repeated pg_query.Node use_op = 4;
   */
  useOp?: NodeJson[];

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.SortBy.
 * Use `create(SortBySchema)` to create a new message.
 */
export const SortBySchema: GenMessage<SortBy, SortByJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 82);

/**
 * @generated from message pg_query.WindowDef
 */
export type WindowDef = Message<"pg_query.WindowDef"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string refname = 2;
   */
  refname: string;

  /**
   * @generated from field: repeated pg_query.Node partition_clause = 3;
   */
  partitionClause: Node[];

  /**
   * @generated from field: repeated pg_query.Node order_clause = 4;
   */
  orderClause: Node[];

  /**
   * @generated from field: int32 frame_options = 5;
   */
  frameOptions: number;

  /**
   * @generated from field: pg_query.Node start_offset = 6;
   */
  startOffset?: Node;

  /**
   * @generated from field: pg_query.Node end_offset = 7;
   */
  endOffset?: Node;

  /**
   * @generated from field: int32 location = 8;
   */
  location: number;
};

/**
 * @generated from message pg_query.WindowDef
 */
export type WindowDefJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: string refname = 2;
   */
  refname?: string;

  /**
   * @generated from field: repeated pg_query.Node partition_clause = 3;
   */
  partitionClause?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node order_clause = 4;
   */
  orderClause?: NodeJson[];

  /**
   * @generated from field: int32 frame_options = 5;
   */
  frameOptions?: number;

  /**
   * @generated from field: pg_query.Node start_offset = 6;
   */
  startOffset?: NodeJson;

  /**
   * @generated from field: pg_query.Node end_offset = 7;
   */
  endOffset?: NodeJson;

  /**
   * @generated from field: int32 location = 8;
   */
  location?: number;
};

/**
 * Describes the message pg_query.WindowDef.
 * Use `create(WindowDefSchema)` to create a new message.
 */
export const WindowDefSchema: GenMessage<WindowDef, WindowDefJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 83);

/**
 * @generated from message pg_query.RangeSubselect
 */
export type RangeSubselect = Message<"pg_query.RangeSubselect"> & {
  /**
   * @generated from field: bool lateral = 1;
   */
  lateral: boolean;

  /**
   * @generated from field: pg_query.Node subquery = 2;
   */
  subquery?: Node;

  /**
   * @generated from field: pg_query.Alias alias = 3;
   */
  alias?: Alias;
};

/**
 * @generated from message pg_query.RangeSubselect
 */
export type RangeSubselectJson = {
  /**
   * @generated from field: bool lateral = 1;
   */
  lateral?: boolean;

  /**
   * @generated from field: pg_query.Node subquery = 2;
   */
  subquery?: NodeJson;

  /**
   * @generated from field: pg_query.Alias alias = 3;
   */
  alias?: AliasJson;
};

/**
 * Describes the message pg_query.RangeSubselect.
 * Use `create(RangeSubselectSchema)` to create a new message.
 */
export const RangeSubselectSchema: GenMessage<RangeSubselect, RangeSubselectJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 84);

/**
 * @generated from message pg_query.RangeFunction
 */
export type RangeFunction = Message<"pg_query.RangeFunction"> & {
  /**
   * @generated from field: bool lateral = 1;
   */
  lateral: boolean;

  /**
   * @generated from field: bool ordinality = 2;
   */
  ordinality: boolean;

  /**
   * @generated from field: bool is_rowsfrom = 3 [json_name = "is_rowsfrom"];
   */
  isRowsfrom: boolean;

  /**
   * @generated from field: repeated pg_query.Node functions = 4;
   */
  functions: Node[];

  /**
   * @generated from field: pg_query.Alias alias = 5;
   */
  alias?: Alias;

  /**
   * @generated from field: repeated pg_query.Node coldeflist = 6;
   */
  coldeflist: Node[];
};

/**
 * @generated from message pg_query.RangeFunction
 */
export type RangeFunctionJson = {
  /**
   * @generated from field: bool lateral = 1;
   */
  lateral?: boolean;

  /**
   * @generated from field: bool ordinality = 2;
   */
  ordinality?: boolean;

  /**
   * @generated from field: bool is_rowsfrom = 3 [json_name = "is_rowsfrom"];
   */
  is_rowsfrom?: boolean;

  /**
   * @generated from field: repeated pg_query.Node functions = 4;
   */
  functions?: NodeJson[];

  /**
   * @generated from field: pg_query.Alias alias = 5;
   */
  alias?: AliasJson;

  /**
   * @generated from field: repeated pg_query.Node coldeflist = 6;
   */
  coldeflist?: NodeJson[];
};

/**
 * Describes the message pg_query.RangeFunction.
 * Use `create(RangeFunctionSchema)` to create a new message.
 */
export const RangeFunctionSchema: GenMessage<RangeFunction, RangeFunctionJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 85);

/**
 * @generated from message pg_query.RangeTableFunc
 */
export type RangeTableFunc = Message<"pg_query.RangeTableFunc"> & {
  /**
   * @generated from field: bool lateral = 1;
   */
  lateral: boolean;

  /**
   * @generated from field: pg_query.Node docexpr = 2;
   */
  docexpr?: Node;

  /**
   * @generated from field: pg_query.Node rowexpr = 3;
   */
  rowexpr?: Node;

  /**
   * @generated from field: repeated pg_query.Node namespaces = 4;
   */
  namespaces: Node[];

  /**
   * @generated from field: repeated pg_query.Node columns = 5;
   */
  columns: Node[];

  /**
   * @generated from field: pg_query.Alias alias = 6;
   */
  alias?: Alias;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * @generated from message pg_query.RangeTableFunc
 */
export type RangeTableFuncJson = {
  /**
   * @generated from field: bool lateral = 1;
   */
  lateral?: boolean;

  /**
   * @generated from field: pg_query.Node docexpr = 2;
   */
  docexpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node rowexpr = 3;
   */
  rowexpr?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node namespaces = 4;
   */
  namespaces?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node columns = 5;
   */
  columns?: NodeJson[];

  /**
   * @generated from field: pg_query.Alias alias = 6;
   */
  alias?: AliasJson;

  /**
   * @generated from field: int32 location = 7;
   */
  location?: number;
};

/**
 * Describes the message pg_query.RangeTableFunc.
 * Use `create(RangeTableFuncSchema)` to create a new message.
 */
export const RangeTableFuncSchema: GenMessage<RangeTableFunc, RangeTableFuncJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 86);

/**
 * @generated from message pg_query.RangeTableFuncCol
 */
export type RangeTableFuncCol = Message<"pg_query.RangeTableFuncCol"> & {
  /**
   * @generated from field: string colname = 1;
   */
  colname: string;

  /**
   * @generated from field: pg_query.TypeName type_name = 2;
   */
  typeName?: TypeName;

  /**
   * @generated from field: bool for_ordinality = 3 [json_name = "for_ordinality"];
   */
  forOrdinality: boolean;

  /**
   * @generated from field: bool is_not_null = 4 [json_name = "is_not_null"];
   */
  isNotNull: boolean;

  /**
   * @generated from field: pg_query.Node colexpr = 5;
   */
  colexpr?: Node;

  /**
   * @generated from field: pg_query.Node coldefexpr = 6;
   */
  coldefexpr?: Node;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;
};

/**
 * @generated from message pg_query.RangeTableFuncCol
 */
export type RangeTableFuncColJson = {
  /**
   * @generated from field: string colname = 1;
   */
  colname?: string;

  /**
   * @generated from field: pg_query.TypeName type_name = 2;
   */
  typeName?: TypeNameJson;

  /**
   * @generated from field: bool for_ordinality = 3 [json_name = "for_ordinality"];
   */
  for_ordinality?: boolean;

  /**
   * @generated from field: bool is_not_null = 4 [json_name = "is_not_null"];
   */
  is_not_null?: boolean;

  /**
   * @generated from field: pg_query.Node colexpr = 5;
   */
  colexpr?: NodeJson;

  /**
   * @generated from field: pg_query.Node coldefexpr = 6;
   */
  coldefexpr?: NodeJson;

  /**
   * @generated from field: int32 location = 7;
   */
  location?: number;
};

/**
 * Describes the message pg_query.RangeTableFuncCol.
 * Use `create(RangeTableFuncColSchema)` to create a new message.
 */
export const RangeTableFuncColSchema: GenMessage<RangeTableFuncCol, RangeTableFuncColJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 87);

/**
 * @generated from message pg_query.RangeTableSample
 */
export type RangeTableSample = Message<"pg_query.RangeTableSample"> & {
  /**
   * @generated from field: pg_query.Node relation = 1;
   */
  relation?: Node;

  /**
   * @generated from field: repeated pg_query.Node method = 2;
   */
  method: Node[];

  /**
   * @generated from field: repeated pg_query.Node args = 3;
   */
  args: Node[];

  /**
   * @generated from field: pg_query.Node repeatable = 4;
   */
  repeatable?: Node;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.RangeTableSample
 */
export type RangeTableSampleJson = {
  /**
   * @generated from field: pg_query.Node relation = 1;
   */
  relation?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node method = 2;
   */
  method?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node args = 3;
   */
  args?: NodeJson[];

  /**
   * @generated from field: pg_query.Node repeatable = 4;
   */
  repeatable?: NodeJson;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.RangeTableSample.
 * Use `create(RangeTableSampleSchema)` to create a new message.
 */
export const RangeTableSampleSchema: GenMessage<RangeTableSample, RangeTableSampleJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 88);

/**
 * @generated from message pg_query.ColumnDef
 */
export type ColumnDef = Message<"pg_query.ColumnDef"> & {
  /**
   * @generated from field: string colname = 1;
   */
  colname: string;

  /**
   * @generated from field: pg_query.TypeName type_name = 2;
   */
  typeName?: TypeName;

  /**
   * @generated from field: string compression = 3;
   */
  compression: string;

  /**
   * @generated from field: int32 inhcount = 4;
   */
  inhcount: number;

  /**
   * @generated from field: bool is_local = 5 [json_name = "is_local"];
   */
  isLocal: boolean;

  /**
   * @generated from field: bool is_not_null = 6 [json_name = "is_not_null"];
   */
  isNotNull: boolean;

  /**
   * @generated from field: bool is_from_type = 7 [json_name = "is_from_type"];
   */
  isFromType: boolean;

  /**
   * @generated from field: string storage = 8;
   */
  storage: string;

  /**
   * @generated from field: string storage_name = 9 [json_name = "storage_name"];
   */
  storageName: string;

  /**
   * @generated from field: pg_query.Node raw_default = 10 [json_name = "raw_default"];
   */
  rawDefault?: Node;

  /**
   * @generated from field: pg_query.Node cooked_default = 11 [json_name = "cooked_default"];
   */
  cookedDefault?: Node;

  /**
   * @generated from field: string identity = 12;
   */
  identity: string;

  /**
   * @generated from field: pg_query.RangeVar identity_sequence = 13;
   */
  identitySequence?: RangeVar;

  /**
   * @generated from field: string generated = 14;
   */
  generated: string;

  /**
   * @generated from field: pg_query.CollateClause coll_clause = 15;
   */
  collClause?: CollateClause;

  /**
   * @generated from field: uint32 coll_oid = 16;
   */
  collOid: number;

  /**
   * @generated from field: repeated pg_query.Node constraints = 17;
   */
  constraints: Node[];

  /**
   * @generated from field: repeated pg_query.Node fdwoptions = 18;
   */
  fdwoptions: Node[];

  /**
   * @generated from field: int32 location = 19;
   */
  location: number;
};

/**
 * @generated from message pg_query.ColumnDef
 */
export type ColumnDefJson = {
  /**
   * @generated from field: string colname = 1;
   */
  colname?: string;

  /**
   * @generated from field: pg_query.TypeName type_name = 2;
   */
  typeName?: TypeNameJson;

  /**
   * @generated from field: string compression = 3;
   */
  compression?: string;

  /**
   * @generated from field: int32 inhcount = 4;
   */
  inhcount?: number;

  /**
   * @generated from field: bool is_local = 5 [json_name = "is_local"];
   */
  is_local?: boolean;

  /**
   * @generated from field: bool is_not_null = 6 [json_name = "is_not_null"];
   */
  is_not_null?: boolean;

  /**
   * @generated from field: bool is_from_type = 7 [json_name = "is_from_type"];
   */
  is_from_type?: boolean;

  /**
   * @generated from field: string storage = 8;
   */
  storage?: string;

  /**
   * @generated from field: string storage_name = 9 [json_name = "storage_name"];
   */
  storage_name?: string;

  /**
   * @generated from field: pg_query.Node raw_default = 10 [json_name = "raw_default"];
   */
  raw_default?: NodeJson;

  /**
   * @generated from field: pg_query.Node cooked_default = 11 [json_name = "cooked_default"];
   */
  cooked_default?: NodeJson;

  /**
   * @generated from field: string identity = 12;
   */
  identity?: string;

  /**
   * @generated from field: pg_query.RangeVar identity_sequence = 13;
   */
  identitySequence?: RangeVarJson;

  /**
   * @generated from field: string generated = 14;
   */
  generated?: string;

  /**
   * @generated from field: pg_query.CollateClause coll_clause = 15;
   */
  collClause?: CollateClauseJson;

  /**
   * @generated from field: uint32 coll_oid = 16;
   */
  collOid?: number;

  /**
   * @generated from field: repeated pg_query.Node constraints = 17;
   */
  constraints?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node fdwoptions = 18;
   */
  fdwoptions?: NodeJson[];

  /**
   * @generated from field: int32 location = 19;
   */
  location?: number;
};

/**
 * Describes the message pg_query.ColumnDef.
 * Use `create(ColumnDefSchema)` to create a new message.
 */
export const ColumnDefSchema: GenMessage<ColumnDef, ColumnDefJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 89);

/**
 * @generated from message pg_query.TableLikeClause
 */
export type TableLikeClause = Message<"pg_query.TableLikeClause"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: uint32 options = 2;
   */
  options: number;

  /**
   * @generated from field: uint32 relation_oid = 3;
   */
  relationOid: number;
};

/**
 * @generated from message pg_query.TableLikeClause
 */
export type TableLikeClauseJson = {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: uint32 options = 2;
   */
  options?: number;

  /**
   * @generated from field: uint32 relation_oid = 3;
   */
  relationOid?: number;
};

/**
 * Describes the message pg_query.TableLikeClause.
 * Use `create(TableLikeClauseSchema)` to create a new message.
 */
export const TableLikeClauseSchema: GenMessage<TableLikeClause, TableLikeClauseJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 90);

/**
 * @generated from message pg_query.IndexElem
 */
export type IndexElem = Message<"pg_query.IndexElem"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: Node;

  /**
   * @generated from field: string indexcolname = 3;
   */
  indexcolname: string;

  /**
   * @generated from field: repeated pg_query.Node collation = 4;
   */
  collation: Node[];

  /**
   * @generated from field: repeated pg_query.Node opclass = 5;
   */
  opclass: Node[];

  /**
   * @generated from field: repeated pg_query.Node opclassopts = 6;
   */
  opclassopts: Node[];

  /**
   * @generated from field: pg_query.SortByDir ordering = 7;
   */
  ordering: SortByDir;

  /**
   * @generated from field: pg_query.SortByNulls nulls_ordering = 8 [json_name = "nulls_ordering"];
   */
  nullsOrdering: SortByNulls;
};

/**
 * @generated from message pg_query.IndexElem
 */
export type IndexElemJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: NodeJson;

  /**
   * @generated from field: string indexcolname = 3;
   */
  indexcolname?: string;

  /**
   * @generated from field: repeated pg_query.Node collation = 4;
   */
  collation?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node opclass = 5;
   */
  opclass?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node opclassopts = 6;
   */
  opclassopts?: NodeJson[];

  /**
   * @generated from field: pg_query.SortByDir ordering = 7;
   */
  ordering?: SortByDirJson;

  /**
   * @generated from field: pg_query.SortByNulls nulls_ordering = 8 [json_name = "nulls_ordering"];
   */
  nulls_ordering?: SortByNullsJson;
};

/**
 * Describes the message pg_query.IndexElem.
 * Use `create(IndexElemSchema)` to create a new message.
 */
export const IndexElemSchema: GenMessage<IndexElem, IndexElemJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 91);

/**
 * @generated from message pg_query.DefElem
 */
export type DefElem = Message<"pg_query.DefElem"> & {
  /**
   * @generated from field: string defnamespace = 1;
   */
  defnamespace: string;

  /**
   * @generated from field: string defname = 2;
   */
  defname: string;

  /**
   * @generated from field: pg_query.Node arg = 3;
   */
  arg?: Node;

  /**
   * @generated from field: pg_query.DefElemAction defaction = 4;
   */
  defaction: DefElemAction;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.DefElem
 */
export type DefElemJson = {
  /**
   * @generated from field: string defnamespace = 1;
   */
  defnamespace?: string;

  /**
   * @generated from field: string defname = 2;
   */
  defname?: string;

  /**
   * @generated from field: pg_query.Node arg = 3;
   */
  arg?: NodeJson;

  /**
   * @generated from field: pg_query.DefElemAction defaction = 4;
   */
  defaction?: DefElemActionJson;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.DefElem.
 * Use `create(DefElemSchema)` to create a new message.
 */
export const DefElemSchema: GenMessage<DefElem, DefElemJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 92);

/**
 * @generated from message pg_query.LockingClause
 */
export type LockingClause = Message<"pg_query.LockingClause"> & {
  /**
   * @generated from field: repeated pg_query.Node locked_rels = 1;
   */
  lockedRels: Node[];

  /**
   * @generated from field: pg_query.LockClauseStrength strength = 2;
   */
  strength: LockClauseStrength;

  /**
   * @generated from field: pg_query.LockWaitPolicy wait_policy = 3;
   */
  waitPolicy: LockWaitPolicy;
};

/**
 * @generated from message pg_query.LockingClause
 */
export type LockingClauseJson = {
  /**
   * @generated from field: repeated pg_query.Node locked_rels = 1;
   */
  lockedRels?: NodeJson[];

  /**
   * @generated from field: pg_query.LockClauseStrength strength = 2;
   */
  strength?: LockClauseStrengthJson;

  /**
   * @generated from field: pg_query.LockWaitPolicy wait_policy = 3;
   */
  waitPolicy?: LockWaitPolicyJson;
};

/**
 * Describes the message pg_query.LockingClause.
 * Use `create(LockingClauseSchema)` to create a new message.
 */
export const LockingClauseSchema: GenMessage<LockingClause, LockingClauseJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 93);

/**
 * @generated from message pg_query.XmlSerialize
 */
export type XmlSerialize = Message<"pg_query.XmlSerialize"> & {
  /**
   * @generated from field: pg_query.XmlOptionType xmloption = 1;
   */
  xmloption: XmlOptionType;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: Node;

  /**
   * @generated from field: pg_query.TypeName type_name = 3;
   */
  typeName?: TypeName;

  /**
   * @generated from field: bool indent = 4;
   */
  indent: boolean;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.XmlSerialize
 */
export type XmlSerializeJson = {
  /**
   * @generated from field: pg_query.XmlOptionType xmloption = 1;
   */
  xmloption?: XmlOptionTypeJson;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: NodeJson;

  /**
   * @generated from field: pg_query.TypeName type_name = 3;
   */
  typeName?: TypeNameJson;

  /**
   * @generated from field: bool indent = 4;
   */
  indent?: boolean;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.XmlSerialize.
 * Use `create(XmlSerializeSchema)` to create a new message.
 */
export const XmlSerializeSchema: GenMessage<XmlSerialize, XmlSerializeJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 94);

/**
 * @generated from message pg_query.PartitionElem
 */
export type PartitionElem = Message<"pg_query.PartitionElem"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: Node;

  /**
   * @generated from field: repeated pg_query.Node collation = 3;
   */
  collation: Node[];

  /**
   * @generated from field: repeated pg_query.Node opclass = 4;
   */
  opclass: Node[];

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.PartitionElem
 */
export type PartitionElemJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node collation = 3;
   */
  collation?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node opclass = 4;
   */
  opclass?: NodeJson[];

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.PartitionElem.
 * Use `create(PartitionElemSchema)` to create a new message.
 */
export const PartitionElemSchema: GenMessage<PartitionElem, PartitionElemJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 95);

/**
 * @generated from message pg_query.PartitionSpec
 */
export type PartitionSpec = Message<"pg_query.PartitionSpec"> & {
  /**
   * @generated from field: pg_query.PartitionStrategy strategy = 1;
   */
  strategy: PartitionStrategy;

  /**
   * @generated from field: repeated pg_query.Node part_params = 2;
   */
  partParams: Node[];

  /**
   * @generated from field: int32 location = 3;
   */
  location: number;
};

/**
 * @generated from message pg_query.PartitionSpec
 */
export type PartitionSpecJson = {
  /**
   * @generated from field: pg_query.PartitionStrategy strategy = 1;
   */
  strategy?: PartitionStrategyJson;

  /**
   * @generated from field: repeated pg_query.Node part_params = 2;
   */
  partParams?: NodeJson[];

  /**
   * @generated from field: int32 location = 3;
   */
  location?: number;
};

/**
 * Describes the message pg_query.PartitionSpec.
 * Use `create(PartitionSpecSchema)` to create a new message.
 */
export const PartitionSpecSchema: GenMessage<PartitionSpec, PartitionSpecJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 96);

/**
 * @generated from message pg_query.PartitionBoundSpec
 */
export type PartitionBoundSpec = Message<"pg_query.PartitionBoundSpec"> & {
  /**
   * @generated from field: string strategy = 1;
   */
  strategy: string;

  /**
   * @generated from field: bool is_default = 2 [json_name = "is_default"];
   */
  isDefault: boolean;

  /**
   * @generated from field: int32 modulus = 3;
   */
  modulus: number;

  /**
   * @generated from field: int32 remainder = 4;
   */
  remainder: number;

  /**
   * @generated from field: repeated pg_query.Node listdatums = 5;
   */
  listdatums: Node[];

  /**
   * @generated from field: repeated pg_query.Node lowerdatums = 6;
   */
  lowerdatums: Node[];

  /**
   * @generated from field: repeated pg_query.Node upperdatums = 7;
   */
  upperdatums: Node[];

  /**
   * @generated from field: int32 location = 8;
   */
  location: number;
};

/**
 * @generated from message pg_query.PartitionBoundSpec
 */
export type PartitionBoundSpecJson = {
  /**
   * @generated from field: string strategy = 1;
   */
  strategy?: string;

  /**
   * @generated from field: bool is_default = 2 [json_name = "is_default"];
   */
  is_default?: boolean;

  /**
   * @generated from field: int32 modulus = 3;
   */
  modulus?: number;

  /**
   * @generated from field: int32 remainder = 4;
   */
  remainder?: number;

  /**
   * @generated from field: repeated pg_query.Node listdatums = 5;
   */
  listdatums?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node lowerdatums = 6;
   */
  lowerdatums?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node upperdatums = 7;
   */
  upperdatums?: NodeJson[];

  /**
   * @generated from field: int32 location = 8;
   */
  location?: number;
};

/**
 * Describes the message pg_query.PartitionBoundSpec.
 * Use `create(PartitionBoundSpecSchema)` to create a new message.
 */
export const PartitionBoundSpecSchema: GenMessage<PartitionBoundSpec, PartitionBoundSpecJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 97);

/**
 * @generated from message pg_query.PartitionRangeDatum
 */
export type PartitionRangeDatum = Message<"pg_query.PartitionRangeDatum"> & {
  /**
   * @generated from field: pg_query.PartitionRangeDatumKind kind = 1;
   */
  kind: PartitionRangeDatumKind;

  /**
   * @generated from field: pg_query.Node value = 2;
   */
  value?: Node;

  /**
   * @generated from field: int32 location = 3;
   */
  location: number;
};

/**
 * @generated from message pg_query.PartitionRangeDatum
 */
export type PartitionRangeDatumJson = {
  /**
   * @generated from field: pg_query.PartitionRangeDatumKind kind = 1;
   */
  kind?: PartitionRangeDatumKindJson;

  /**
   * @generated from field: pg_query.Node value = 2;
   */
  value?: NodeJson;

  /**
   * @generated from field: int32 location = 3;
   */
  location?: number;
};

/**
 * Describes the message pg_query.PartitionRangeDatum.
 * Use `create(PartitionRangeDatumSchema)` to create a new message.
 */
export const PartitionRangeDatumSchema: GenMessage<PartitionRangeDatum, PartitionRangeDatumJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 98);

/**
 * @generated from message pg_query.PartitionCmd
 */
export type PartitionCmd = Message<"pg_query.PartitionCmd"> & {
  /**
   * @generated from field: pg_query.RangeVar name = 1;
   */
  name?: RangeVar;

  /**
   * @generated from field: pg_query.PartitionBoundSpec bound = 2;
   */
  bound?: PartitionBoundSpec;

  /**
   * @generated from field: bool concurrent = 3;
   */
  concurrent: boolean;
};

/**
 * @generated from message pg_query.PartitionCmd
 */
export type PartitionCmdJson = {
  /**
   * @generated from field: pg_query.RangeVar name = 1;
   */
  name?: RangeVarJson;

  /**
   * @generated from field: pg_query.PartitionBoundSpec bound = 2;
   */
  bound?: PartitionBoundSpecJson;

  /**
   * @generated from field: bool concurrent = 3;
   */
  concurrent?: boolean;
};

/**
 * Describes the message pg_query.PartitionCmd.
 * Use `create(PartitionCmdSchema)` to create a new message.
 */
export const PartitionCmdSchema: GenMessage<PartitionCmd, PartitionCmdJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 99);

/**
 * @generated from message pg_query.RangeTblEntry
 */
export type RangeTblEntry = Message<"pg_query.RangeTblEntry"> & {
  /**
   * @generated from field: pg_query.RTEKind rtekind = 1;
   */
  rtekind: RTEKind;

  /**
   * @generated from field: uint32 relid = 2;
   */
  relid: number;

  /**
   * @generated from field: string relkind = 3;
   */
  relkind: string;

  /**
   * @generated from field: int32 rellockmode = 4;
   */
  rellockmode: number;

  /**
   * @generated from field: pg_query.TableSampleClause tablesample = 5;
   */
  tablesample?: TableSampleClause;

  /**
   * @generated from field: uint32 perminfoindex = 6;
   */
  perminfoindex: number;

  /**
   * @generated from field: pg_query.Query subquery = 7;
   */
  subquery?: Query;

  /**
   * @generated from field: bool security_barrier = 8 [json_name = "security_barrier"];
   */
  securityBarrier: boolean;

  /**
   * @generated from field: pg_query.JoinType jointype = 9;
   */
  jointype: JoinType;

  /**
   * @generated from field: int32 joinmergedcols = 10;
   */
  joinmergedcols: number;

  /**
   * @generated from field: repeated pg_query.Node joinaliasvars = 11;
   */
  joinaliasvars: Node[];

  /**
   * @generated from field: repeated pg_query.Node joinleftcols = 12;
   */
  joinleftcols: Node[];

  /**
   * @generated from field: repeated pg_query.Node joinrightcols = 13;
   */
  joinrightcols: Node[];

  /**
   * @generated from field: pg_query.Alias join_using_alias = 14 [json_name = "join_using_alias"];
   */
  joinUsingAlias?: Alias;

  /**
   * @generated from field: repeated pg_query.Node functions = 15;
   */
  functions: Node[];

  /**
   * @generated from field: bool funcordinality = 16;
   */
  funcordinality: boolean;

  /**
   * @generated from field: pg_query.TableFunc tablefunc = 17;
   */
  tablefunc?: TableFunc;

  /**
   * @generated from field: repeated pg_query.Node values_lists = 18 [json_name = "values_lists"];
   */
  valuesLists: Node[];

  /**
   * @generated from field: string ctename = 19;
   */
  ctename: string;

  /**
   * @generated from field: uint32 ctelevelsup = 20;
   */
  ctelevelsup: number;

  /**
   * @generated from field: bool self_reference = 21 [json_name = "self_reference"];
   */
  selfReference: boolean;

  /**
   * @generated from field: repeated pg_query.Node coltypes = 22;
   */
  coltypes: Node[];

  /**
   * @generated from field: repeated pg_query.Node coltypmods = 23;
   */
  coltypmods: Node[];

  /**
   * @generated from field: repeated pg_query.Node colcollations = 24;
   */
  colcollations: Node[];

  /**
   * @generated from field: string enrname = 25;
   */
  enrname: string;

  /**
   * @generated from field: double enrtuples = 26;
   */
  enrtuples: number;

  /**
   * @generated from field: pg_query.Alias alias = 27;
   */
  alias?: Alias;

  /**
   * @generated from field: pg_query.Alias eref = 28;
   */
  eref?: Alias;

  /**
   * @generated from field: bool lateral = 29;
   */
  lateral: boolean;

  /**
   * @generated from field: bool inh = 30;
   */
  inh: boolean;

  /**
   * @generated from field: bool in_from_cl = 31;
   */
  inFromCl: boolean;

  /**
   * @generated from field: repeated pg_query.Node security_quals = 32;
   */
  securityQuals: Node[];
};

/**
 * @generated from message pg_query.RangeTblEntry
 */
export type RangeTblEntryJson = {
  /**
   * @generated from field: pg_query.RTEKind rtekind = 1;
   */
  rtekind?: RTEKindJson;

  /**
   * @generated from field: uint32 relid = 2;
   */
  relid?: number;

  /**
   * @generated from field: string relkind = 3;
   */
  relkind?: string;

  /**
   * @generated from field: int32 rellockmode = 4;
   */
  rellockmode?: number;

  /**
   * @generated from field: pg_query.TableSampleClause tablesample = 5;
   */
  tablesample?: TableSampleClauseJson;

  /**
   * @generated from field: uint32 perminfoindex = 6;
   */
  perminfoindex?: number;

  /**
   * @generated from field: pg_query.Query subquery = 7;
   */
  subquery?: QueryJson;

  /**
   * @generated from field: bool security_barrier = 8 [json_name = "security_barrier"];
   */
  security_barrier?: boolean;

  /**
   * @generated from field: pg_query.JoinType jointype = 9;
   */
  jointype?: JoinTypeJson;

  /**
   * @generated from field: int32 joinmergedcols = 10;
   */
  joinmergedcols?: number;

  /**
   * @generated from field: repeated pg_query.Node joinaliasvars = 11;
   */
  joinaliasvars?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node joinleftcols = 12;
   */
  joinleftcols?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node joinrightcols = 13;
   */
  joinrightcols?: NodeJson[];

  /**
   * @generated from field: pg_query.Alias join_using_alias = 14 [json_name = "join_using_alias"];
   */
  join_using_alias?: AliasJson;

  /**
   * @generated from field: repeated pg_query.Node functions = 15;
   */
  functions?: NodeJson[];

  /**
   * @generated from field: bool funcordinality = 16;
   */
  funcordinality?: boolean;

  /**
   * @generated from field: pg_query.TableFunc tablefunc = 17;
   */
  tablefunc?: TableFuncJson;

  /**
   * @generated from field: repeated pg_query.Node values_lists = 18 [json_name = "values_lists"];
   */
  values_lists?: NodeJson[];

  /**
   * @generated from field: string ctename = 19;
   */
  ctename?: string;

  /**
   * @generated from field: uint32 ctelevelsup = 20;
   */
  ctelevelsup?: number;

  /**
   * @generated from field: bool self_reference = 21 [json_name = "self_reference"];
   */
  self_reference?: boolean;

  /**
   * @generated from field: repeated pg_query.Node coltypes = 22;
   */
  coltypes?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node coltypmods = 23;
   */
  coltypmods?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node colcollations = 24;
   */
  colcollations?: NodeJson[];

  /**
   * @generated from field: string enrname = 25;
   */
  enrname?: string;

  /**
   * @generated from field: double enrtuples = 26;
   */
  enrtuples?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: pg_query.Alias alias = 27;
   */
  alias?: AliasJson;

  /**
   * @generated from field: pg_query.Alias eref = 28;
   */
  eref?: AliasJson;

  /**
   * @generated from field: bool lateral = 29;
   */
  lateral?: boolean;

  /**
   * @generated from field: bool inh = 30;
   */
  inh?: boolean;

  /**
   * @generated from field: bool in_from_cl = 31;
   */
  inFromCl?: boolean;

  /**
   * @generated from field: repeated pg_query.Node security_quals = 32;
   */
  securityQuals?: NodeJson[];
};

/**
 * Describes the message pg_query.RangeTblEntry.
 * Use `create(RangeTblEntrySchema)` to create a new message.
 */
export const RangeTblEntrySchema: GenMessage<RangeTblEntry, RangeTblEntryJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 100);

/**
 * @generated from message pg_query.RTEPermissionInfo
 */
export type RTEPermissionInfo = Message<"pg_query.RTEPermissionInfo"> & {
  /**
   * @generated from field: uint32 relid = 1;
   */
  relid: number;

  /**
   * @generated from field: bool inh = 2;
   */
  inh: boolean;

  /**
   * @generated from field: uint64 required_perms = 3;
   */
  requiredPerms: bigint;

  /**
   * @generated from field: uint32 check_as_user = 4;
   */
  checkAsUser: number;

  /**
   * @generated from field: repeated uint64 selected_cols = 5;
   */
  selectedCols: bigint[];

  /**
   * @generated from field: repeated uint64 inserted_cols = 6;
   */
  insertedCols: bigint[];

  /**
   * @generated from field: repeated uint64 updated_cols = 7;
   */
  updatedCols: bigint[];
};

/**
 * @generated from message pg_query.RTEPermissionInfo
 */
export type RTEPermissionInfoJson = {
  /**
   * @generated from field: uint32 relid = 1;
   */
  relid?: number;

  /**
   * @generated from field: bool inh = 2;
   */
  inh?: boolean;

  /**
   * @generated from field: uint64 required_perms = 3;
   */
  requiredPerms?: string;

  /**
   * @generated from field: uint32 check_as_user = 4;
   */
  checkAsUser?: number;

  /**
   * @generated from field: repeated uint64 selected_cols = 5;
   */
  selectedCols?: string[];

  /**
   * @generated from field: repeated uint64 inserted_cols = 6;
   */
  insertedCols?: string[];

  /**
   * @generated from field: repeated uint64 updated_cols = 7;
   */
  updatedCols?: string[];
};

/**
 * Describes the message pg_query.RTEPermissionInfo.
 * Use `create(RTEPermissionInfoSchema)` to create a new message.
 */
export const RTEPermissionInfoSchema: GenMessage<RTEPermissionInfo, RTEPermissionInfoJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 101);

/**
 * @generated from message pg_query.RangeTblFunction
 */
export type RangeTblFunction = Message<"pg_query.RangeTblFunction"> & {
  /**
   * @generated from field: pg_query.Node funcexpr = 1;
   */
  funcexpr?: Node;

  /**
   * @generated from field: int32 funccolcount = 2;
   */
  funccolcount: number;

  /**
   * @generated from field: repeated pg_query.Node funccolnames = 3;
   */
  funccolnames: Node[];

  /**
   * @generated from field: repeated pg_query.Node funccoltypes = 4;
   */
  funccoltypes: Node[];

  /**
   * @generated from field: repeated pg_query.Node funccoltypmods = 5;
   */
  funccoltypmods: Node[];

  /**
   * @generated from field: repeated pg_query.Node funccolcollations = 6;
   */
  funccolcollations: Node[];

  /**
   * @generated from field: repeated uint64 funcparams = 7;
   */
  funcparams: bigint[];
};

/**
 * @generated from message pg_query.RangeTblFunction
 */
export type RangeTblFunctionJson = {
  /**
   * @generated from field: pg_query.Node funcexpr = 1;
   */
  funcexpr?: NodeJson;

  /**
   * @generated from field: int32 funccolcount = 2;
   */
  funccolcount?: number;

  /**
   * @generated from field: repeated pg_query.Node funccolnames = 3;
   */
  funccolnames?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node funccoltypes = 4;
   */
  funccoltypes?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node funccoltypmods = 5;
   */
  funccoltypmods?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node funccolcollations = 6;
   */
  funccolcollations?: NodeJson[];

  /**
   * @generated from field: repeated uint64 funcparams = 7;
   */
  funcparams?: string[];
};

/**
 * Describes the message pg_query.RangeTblFunction.
 * Use `create(RangeTblFunctionSchema)` to create a new message.
 */
export const RangeTblFunctionSchema: GenMessage<RangeTblFunction, RangeTblFunctionJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 102);

/**
 * @generated from message pg_query.TableSampleClause
 */
export type TableSampleClause = Message<"pg_query.TableSampleClause"> & {
  /**
   * @generated from field: uint32 tsmhandler = 1;
   */
  tsmhandler: number;

  /**
   * @generated from field: repeated pg_query.Node args = 2;
   */
  args: Node[];

  /**
   * @generated from field: pg_query.Node repeatable = 3;
   */
  repeatable?: Node;
};

/**
 * @generated from message pg_query.TableSampleClause
 */
export type TableSampleClauseJson = {
  /**
   * @generated from field: uint32 tsmhandler = 1;
   */
  tsmhandler?: number;

  /**
   * @generated from field: repeated pg_query.Node args = 2;
   */
  args?: NodeJson[];

  /**
   * @generated from field: pg_query.Node repeatable = 3;
   */
  repeatable?: NodeJson;
};

/**
 * Describes the message pg_query.TableSampleClause.
 * Use `create(TableSampleClauseSchema)` to create a new message.
 */
export const TableSampleClauseSchema: GenMessage<TableSampleClause, TableSampleClauseJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 103);

/**
 * @generated from message pg_query.WithCheckOption
 */
export type WithCheckOption = Message<"pg_query.WithCheckOption"> & {
  /**
   * @generated from field: pg_query.WCOKind kind = 1;
   */
  kind: WCOKind;

  /**
   * @generated from field: string relname = 2;
   */
  relname: string;

  /**
   * @generated from field: string polname = 3;
   */
  polname: string;

  /**
   * @generated from field: pg_query.Node qual = 4;
   */
  qual?: Node;

  /**
   * @generated from field: bool cascaded = 5;
   */
  cascaded: boolean;
};

/**
 * @generated from message pg_query.WithCheckOption
 */
export type WithCheckOptionJson = {
  /**
   * @generated from field: pg_query.WCOKind kind = 1;
   */
  kind?: WCOKindJson;

  /**
   * @generated from field: string relname = 2;
   */
  relname?: string;

  /**
   * @generated from field: string polname = 3;
   */
  polname?: string;

  /**
   * @generated from field: pg_query.Node qual = 4;
   */
  qual?: NodeJson;

  /**
   * @generated from field: bool cascaded = 5;
   */
  cascaded?: boolean;
};

/**
 * Describes the message pg_query.WithCheckOption.
 * Use `create(WithCheckOptionSchema)` to create a new message.
 */
export const WithCheckOptionSchema: GenMessage<WithCheckOption, WithCheckOptionJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 104);

/**
 * @generated from message pg_query.SortGroupClause
 */
export type SortGroupClause = Message<"pg_query.SortGroupClause"> & {
  /**
   * @generated from field: uint32 tle_sort_group_ref = 1;
   */
  tleSortGroupRef: number;

  /**
   * @generated from field: uint32 eqop = 2;
   */
  eqop: number;

  /**
   * @generated from field: uint32 sortop = 3;
   */
  sortop: number;

  /**
   * @generated from field: bool nulls_first = 4 [json_name = "nulls_first"];
   */
  nullsFirst: boolean;

  /**
   * @generated from field: bool hashable = 5;
   */
  hashable: boolean;
};

/**
 * @generated from message pg_query.SortGroupClause
 */
export type SortGroupClauseJson = {
  /**
   * @generated from field: uint32 tle_sort_group_ref = 1;
   */
  tleSortGroupRef?: number;

  /**
   * @generated from field: uint32 eqop = 2;
   */
  eqop?: number;

  /**
   * @generated from field: uint32 sortop = 3;
   */
  sortop?: number;

  /**
   * @generated from field: bool nulls_first = 4 [json_name = "nulls_first"];
   */
  nulls_first?: boolean;

  /**
   * @generated from field: bool hashable = 5;
   */
  hashable?: boolean;
};

/**
 * Describes the message pg_query.SortGroupClause.
 * Use `create(SortGroupClauseSchema)` to create a new message.
 */
export const SortGroupClauseSchema: GenMessage<SortGroupClause, SortGroupClauseJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 105);

/**
 * @generated from message pg_query.GroupingSet
 */
export type GroupingSet = Message<"pg_query.GroupingSet"> & {
  /**
   * @generated from field: pg_query.GroupingSetKind kind = 1;
   */
  kind: GroupingSetKind;

  /**
   * @generated from field: repeated pg_query.Node content = 2;
   */
  content: Node[];

  /**
   * @generated from field: int32 location = 3;
   */
  location: number;
};

/**
 * @generated from message pg_query.GroupingSet
 */
export type GroupingSetJson = {
  /**
   * @generated from field: pg_query.GroupingSetKind kind = 1;
   */
  kind?: GroupingSetKindJson;

  /**
   * @generated from field: repeated pg_query.Node content = 2;
   */
  content?: NodeJson[];

  /**
   * @generated from field: int32 location = 3;
   */
  location?: number;
};

/**
 * Describes the message pg_query.GroupingSet.
 * Use `create(GroupingSetSchema)` to create a new message.
 */
export const GroupingSetSchema: GenMessage<GroupingSet, GroupingSetJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 106);

/**
 * @generated from message pg_query.WindowClause
 */
export type WindowClause = Message<"pg_query.WindowClause"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string refname = 2;
   */
  refname: string;

  /**
   * @generated from field: repeated pg_query.Node partition_clause = 3;
   */
  partitionClause: Node[];

  /**
   * @generated from field: repeated pg_query.Node order_clause = 4;
   */
  orderClause: Node[];

  /**
   * @generated from field: int32 frame_options = 5;
   */
  frameOptions: number;

  /**
   * @generated from field: pg_query.Node start_offset = 6;
   */
  startOffset?: Node;

  /**
   * @generated from field: pg_query.Node end_offset = 7;
   */
  endOffset?: Node;

  /**
   * @generated from field: repeated pg_query.Node run_condition = 8;
   */
  runCondition: Node[];

  /**
   * @generated from field: uint32 start_in_range_func = 9;
   */
  startInRangeFunc: number;

  /**
   * @generated from field: uint32 end_in_range_func = 10;
   */
  endInRangeFunc: number;

  /**
   * @generated from field: uint32 in_range_coll = 11;
   */
  inRangeColl: number;

  /**
   * @generated from field: bool in_range_asc = 12;
   */
  inRangeAsc: boolean;

  /**
   * @generated from field: bool in_range_nulls_first = 13;
   */
  inRangeNullsFirst: boolean;

  /**
   * @generated from field: uint32 winref = 14;
   */
  winref: number;

  /**
   * @generated from field: bool copied_order = 15;
   */
  copiedOrder: boolean;
};

/**
 * @generated from message pg_query.WindowClause
 */
export type WindowClauseJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: string refname = 2;
   */
  refname?: string;

  /**
   * @generated from field: repeated pg_query.Node partition_clause = 3;
   */
  partitionClause?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node order_clause = 4;
   */
  orderClause?: NodeJson[];

  /**
   * @generated from field: int32 frame_options = 5;
   */
  frameOptions?: number;

  /**
   * @generated from field: pg_query.Node start_offset = 6;
   */
  startOffset?: NodeJson;

  /**
   * @generated from field: pg_query.Node end_offset = 7;
   */
  endOffset?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node run_condition = 8;
   */
  runCondition?: NodeJson[];

  /**
   * @generated from field: uint32 start_in_range_func = 9;
   */
  startInRangeFunc?: number;

  /**
   * @generated from field: uint32 end_in_range_func = 10;
   */
  endInRangeFunc?: number;

  /**
   * @generated from field: uint32 in_range_coll = 11;
   */
  inRangeColl?: number;

  /**
   * @generated from field: bool in_range_asc = 12;
   */
  inRangeAsc?: boolean;

  /**
   * @generated from field: bool in_range_nulls_first = 13;
   */
  inRangeNullsFirst?: boolean;

  /**
   * @generated from field: uint32 winref = 14;
   */
  winref?: number;

  /**
   * @generated from field: bool copied_order = 15;
   */
  copiedOrder?: boolean;
};

/**
 * Describes the message pg_query.WindowClause.
 * Use `create(WindowClauseSchema)` to create a new message.
 */
export const WindowClauseSchema: GenMessage<WindowClause, WindowClauseJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 107);

/**
 * @generated from message pg_query.RowMarkClause
 */
export type RowMarkClause = Message<"pg_query.RowMarkClause"> & {
  /**
   * @generated from field: uint32 rti = 1;
   */
  rti: number;

  /**
   * @generated from field: pg_query.LockClauseStrength strength = 2;
   */
  strength: LockClauseStrength;

  /**
   * @generated from field: pg_query.LockWaitPolicy wait_policy = 3;
   */
  waitPolicy: LockWaitPolicy;

  /**
   * @generated from field: bool pushed_down = 4;
   */
  pushedDown: boolean;
};

/**
 * @generated from message pg_query.RowMarkClause
 */
export type RowMarkClauseJson = {
  /**
   * @generated from field: uint32 rti = 1;
   */
  rti?: number;

  /**
   * @generated from field: pg_query.LockClauseStrength strength = 2;
   */
  strength?: LockClauseStrengthJson;

  /**
   * @generated from field: pg_query.LockWaitPolicy wait_policy = 3;
   */
  waitPolicy?: LockWaitPolicyJson;

  /**
   * @generated from field: bool pushed_down = 4;
   */
  pushedDown?: boolean;
};

/**
 * Describes the message pg_query.RowMarkClause.
 * Use `create(RowMarkClauseSchema)` to create a new message.
 */
export const RowMarkClauseSchema: GenMessage<RowMarkClause, RowMarkClauseJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 108);

/**
 * @generated from message pg_query.WithClause
 */
export type WithClause = Message<"pg_query.WithClause"> & {
  /**
   * @generated from field: repeated pg_query.Node ctes = 1;
   */
  ctes: Node[];

  /**
   * @generated from field: bool recursive = 2;
   */
  recursive: boolean;

  /**
   * @generated from field: int32 location = 3;
   */
  location: number;
};

/**
 * @generated from message pg_query.WithClause
 */
export type WithClauseJson = {
  /**
   * @generated from field: repeated pg_query.Node ctes = 1;
   */
  ctes?: NodeJson[];

  /**
   * @generated from field: bool recursive = 2;
   */
  recursive?: boolean;

  /**
   * @generated from field: int32 location = 3;
   */
  location?: number;
};

/**
 * Describes the message pg_query.WithClause.
 * Use `create(WithClauseSchema)` to create a new message.
 */
export const WithClauseSchema: GenMessage<WithClause, WithClauseJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 109);

/**
 * @generated from message pg_query.InferClause
 */
export type InferClause = Message<"pg_query.InferClause"> & {
  /**
   * @generated from field: repeated pg_query.Node index_elems = 1;
   */
  indexElems: Node[];

  /**
   * @generated from field: pg_query.Node where_clause = 2;
   */
  whereClause?: Node;

  /**
   * @generated from field: string conname = 3;
   */
  conname: string;

  /**
   * @generated from field: int32 location = 4;
   */
  location: number;
};

/**
 * @generated from message pg_query.InferClause
 */
export type InferClauseJson = {
  /**
   * @generated from field: repeated pg_query.Node index_elems = 1;
   */
  indexElems?: NodeJson[];

  /**
   * @generated from field: pg_query.Node where_clause = 2;
   */
  whereClause?: NodeJson;

  /**
   * @generated from field: string conname = 3;
   */
  conname?: string;

  /**
   * @generated from field: int32 location = 4;
   */
  location?: number;
};

/**
 * Describes the message pg_query.InferClause.
 * Use `create(InferClauseSchema)` to create a new message.
 */
export const InferClauseSchema: GenMessage<InferClause, InferClauseJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 110);

/**
 * @generated from message pg_query.OnConflictClause
 */
export type OnConflictClause = Message<"pg_query.OnConflictClause"> & {
  /**
   * @generated from field: pg_query.OnConflictAction action = 1;
   */
  action: OnConflictAction;

  /**
   * @generated from field: pg_query.InferClause infer = 2;
   */
  infer?: InferClause;

  /**
   * @generated from field: repeated pg_query.Node target_list = 3;
   */
  targetList: Node[];

  /**
   * @generated from field: pg_query.Node where_clause = 4;
   */
  whereClause?: Node;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.OnConflictClause
 */
export type OnConflictClauseJson = {
  /**
   * @generated from field: pg_query.OnConflictAction action = 1;
   */
  action?: OnConflictActionJson;

  /**
   * @generated from field: pg_query.InferClause infer = 2;
   */
  infer?: InferClauseJson;

  /**
   * @generated from field: repeated pg_query.Node target_list = 3;
   */
  targetList?: NodeJson[];

  /**
   * @generated from field: pg_query.Node where_clause = 4;
   */
  whereClause?: NodeJson;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.OnConflictClause.
 * Use `create(OnConflictClauseSchema)` to create a new message.
 */
export const OnConflictClauseSchema: GenMessage<OnConflictClause, OnConflictClauseJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 111);

/**
 * @generated from message pg_query.CTESearchClause
 */
export type CTESearchClause = Message<"pg_query.CTESearchClause"> & {
  /**
   * @generated from field: repeated pg_query.Node search_col_list = 1 [json_name = "search_col_list"];
   */
  searchColList: Node[];

  /**
   * @generated from field: bool search_breadth_first = 2 [json_name = "search_breadth_first"];
   */
  searchBreadthFirst: boolean;

  /**
   * @generated from field: string search_seq_column = 3 [json_name = "search_seq_column"];
   */
  searchSeqColumn: string;

  /**
   * @generated from field: int32 location = 4;
   */
  location: number;
};

/**
 * @generated from message pg_query.CTESearchClause
 */
export type CTESearchClauseJson = {
  /**
   * @generated from field: repeated pg_query.Node search_col_list = 1 [json_name = "search_col_list"];
   */
  search_col_list?: NodeJson[];

  /**
   * @generated from field: bool search_breadth_first = 2 [json_name = "search_breadth_first"];
   */
  search_breadth_first?: boolean;

  /**
   * @generated from field: string search_seq_column = 3 [json_name = "search_seq_column"];
   */
  search_seq_column?: string;

  /**
   * @generated from field: int32 location = 4;
   */
  location?: number;
};

/**
 * Describes the message pg_query.CTESearchClause.
 * Use `create(CTESearchClauseSchema)` to create a new message.
 */
export const CTESearchClauseSchema: GenMessage<CTESearchClause, CTESearchClauseJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 112);

/**
 * @generated from message pg_query.CTECycleClause
 */
export type CTECycleClause = Message<"pg_query.CTECycleClause"> & {
  /**
   * @generated from field: repeated pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];
   */
  cycleColList: Node[];

  /**
   * @generated from field: string cycle_mark_column = 2 [json_name = "cycle_mark_column"];
   */
  cycleMarkColumn: string;

  /**
   * @generated from field: pg_query.Node cycle_mark_value = 3 [json_name = "cycle_mark_value"];
   */
  cycleMarkValue?: Node;

  /**
   * @generated from field: pg_query.Node cycle_mark_default = 4 [json_name = "cycle_mark_default"];
   */
  cycleMarkDefault?: Node;

  /**
   * @generated from field: string cycle_path_column = 5 [json_name = "cycle_path_column"];
   */
  cyclePathColumn: string;

  /**
   * @generated from field: int32 location = 6;
   */
  location: number;

  /**
   * @generated from field: uint32 cycle_mark_type = 7 [json_name = "cycle_mark_type"];
   */
  cycleMarkType: number;

  /**
   * @generated from field: int32 cycle_mark_typmod = 8 [json_name = "cycle_mark_typmod"];
   */
  cycleMarkTypmod: number;

  /**
   * @generated from field: uint32 cycle_mark_collation = 9 [json_name = "cycle_mark_collation"];
   */
  cycleMarkCollation: number;

  /**
   * @generated from field: uint32 cycle_mark_neop = 10 [json_name = "cycle_mark_neop"];
   */
  cycleMarkNeop: number;
};

/**
 * @generated from message pg_query.CTECycleClause
 */
export type CTECycleClauseJson = {
  /**
   * @generated from field: repeated pg_query.Node cycle_col_list = 1 [json_name = "cycle_col_list"];
   */
  cycle_col_list?: NodeJson[];

  /**
   * @generated from field: string cycle_mark_column = 2 [json_name = "cycle_mark_column"];
   */
  cycle_mark_column?: string;

  /**
   * @generated from field: pg_query.Node cycle_mark_value = 3 [json_name = "cycle_mark_value"];
   */
  cycle_mark_value?: NodeJson;

  /**
   * @generated from field: pg_query.Node cycle_mark_default = 4 [json_name = "cycle_mark_default"];
   */
  cycle_mark_default?: NodeJson;

  /**
   * @generated from field: string cycle_path_column = 5 [json_name = "cycle_path_column"];
   */
  cycle_path_column?: string;

  /**
   * @generated from field: int32 location = 6;
   */
  location?: number;

  /**
   * @generated from field: uint32 cycle_mark_type = 7 [json_name = "cycle_mark_type"];
   */
  cycle_mark_type?: number;

  /**
   * @generated from field: int32 cycle_mark_typmod = 8 [json_name = "cycle_mark_typmod"];
   */
  cycle_mark_typmod?: number;

  /**
   * @generated from field: uint32 cycle_mark_collation = 9 [json_name = "cycle_mark_collation"];
   */
  cycle_mark_collation?: number;

  /**
   * @generated from field: uint32 cycle_mark_neop = 10 [json_name = "cycle_mark_neop"];
   */
  cycle_mark_neop?: number;
};

/**
 * Describes the message pg_query.CTECycleClause.
 * Use `create(CTECycleClauseSchema)` to create a new message.
 */
export const CTECycleClauseSchema: GenMessage<CTECycleClause, CTECycleClauseJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 113);

/**
 * @generated from message pg_query.CommonTableExpr
 */
export type CommonTableExpr = Message<"pg_query.CommonTableExpr"> & {
  /**
   * @generated from field: string ctename = 1;
   */
  ctename: string;

  /**
   * @generated from field: repeated pg_query.Node aliascolnames = 2;
   */
  aliascolnames: Node[];

  /**
   * @generated from field: pg_query.CTEMaterialize ctematerialized = 3;
   */
  ctematerialized: CTEMaterialize;

  /**
   * @generated from field: pg_query.Node ctequery = 4;
   */
  ctequery?: Node;

  /**
   * @generated from field: pg_query.CTESearchClause search_clause = 5 [json_name = "search_clause"];
   */
  searchClause?: CTESearchClause;

  /**
   * @generated from field: pg_query.CTECycleClause cycle_clause = 6 [json_name = "cycle_clause"];
   */
  cycleClause?: CTECycleClause;

  /**
   * @generated from field: int32 location = 7;
   */
  location: number;

  /**
   * @generated from field: bool cterecursive = 8;
   */
  cterecursive: boolean;

  /**
   * @generated from field: int32 cterefcount = 9;
   */
  cterefcount: number;

  /**
   * @generated from field: repeated pg_query.Node ctecolnames = 10;
   */
  ctecolnames: Node[];

  /**
   * @generated from field: repeated pg_query.Node ctecoltypes = 11;
   */
  ctecoltypes: Node[];

  /**
   * @generated from field: repeated pg_query.Node ctecoltypmods = 12;
   */
  ctecoltypmods: Node[];

  /**
   * @generated from field: repeated pg_query.Node ctecolcollations = 13;
   */
  ctecolcollations: Node[];
};

/**
 * @generated from message pg_query.CommonTableExpr
 */
export type CommonTableExprJson = {
  /**
   * @generated from field: string ctename = 1;
   */
  ctename?: string;

  /**
   * @generated from field: repeated pg_query.Node aliascolnames = 2;
   */
  aliascolnames?: NodeJson[];

  /**
   * @generated from field: pg_query.CTEMaterialize ctematerialized = 3;
   */
  ctematerialized?: CTEMaterializeJson;

  /**
   * @generated from field: pg_query.Node ctequery = 4;
   */
  ctequery?: NodeJson;

  /**
   * @generated from field: pg_query.CTESearchClause search_clause = 5 [json_name = "search_clause"];
   */
  search_clause?: CTESearchClauseJson;

  /**
   * @generated from field: pg_query.CTECycleClause cycle_clause = 6 [json_name = "cycle_clause"];
   */
  cycle_clause?: CTECycleClauseJson;

  /**
   * @generated from field: int32 location = 7;
   */
  location?: number;

  /**
   * @generated from field: bool cterecursive = 8;
   */
  cterecursive?: boolean;

  /**
   * @generated from field: int32 cterefcount = 9;
   */
  cterefcount?: number;

  /**
   * @generated from field: repeated pg_query.Node ctecolnames = 10;
   */
  ctecolnames?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node ctecoltypes = 11;
   */
  ctecoltypes?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node ctecoltypmods = 12;
   */
  ctecoltypmods?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node ctecolcollations = 13;
   */
  ctecolcollations?: NodeJson[];
};

/**
 * Describes the message pg_query.CommonTableExpr.
 * Use `create(CommonTableExprSchema)` to create a new message.
 */
export const CommonTableExprSchema: GenMessage<CommonTableExpr, CommonTableExprJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 114);

/**
 * @generated from message pg_query.MergeWhenClause
 */
export type MergeWhenClause = Message<"pg_query.MergeWhenClause"> & {
  /**
   * @generated from field: bool matched = 1;
   */
  matched: boolean;

  /**
   * @generated from field: pg_query.CmdType command_type = 2;
   */
  commandType: CmdType;

  /**
   * @generated from field: pg_query.OverridingKind override = 3;
   */
  override: OverridingKind;

  /**
   * @generated from field: pg_query.Node condition = 4;
   */
  condition?: Node;

  /**
   * @generated from field: repeated pg_query.Node target_list = 5;
   */
  targetList: Node[];

  /**
   * @generated from field: repeated pg_query.Node values = 6;
   */
  values: Node[];
};

/**
 * @generated from message pg_query.MergeWhenClause
 */
export type MergeWhenClauseJson = {
  /**
   * @generated from field: bool matched = 1;
   */
  matched?: boolean;

  /**
   * @generated from field: pg_query.CmdType command_type = 2;
   */
  commandType?: CmdTypeJson;

  /**
   * @generated from field: pg_query.OverridingKind override = 3;
   */
  override?: OverridingKindJson;

  /**
   * @generated from field: pg_query.Node condition = 4;
   */
  condition?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node target_list = 5;
   */
  targetList?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node values = 6;
   */
  values?: NodeJson[];
};

/**
 * Describes the message pg_query.MergeWhenClause.
 * Use `create(MergeWhenClauseSchema)` to create a new message.
 */
export const MergeWhenClauseSchema: GenMessage<MergeWhenClause, MergeWhenClauseJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 115);

/**
 * @generated from message pg_query.MergeAction
 */
export type MergeAction = Message<"pg_query.MergeAction"> & {
  /**
   * @generated from field: bool matched = 1;
   */
  matched: boolean;

  /**
   * @generated from field: pg_query.CmdType command_type = 2;
   */
  commandType: CmdType;

  /**
   * @generated from field: pg_query.OverridingKind override = 3;
   */
  override: OverridingKind;

  /**
   * @generated from field: pg_query.Node qual = 4;
   */
  qual?: Node;

  /**
   * @generated from field: repeated pg_query.Node target_list = 5;
   */
  targetList: Node[];

  /**
   * @generated from field: repeated pg_query.Node update_colnos = 6;
   */
  updateColnos: Node[];
};

/**
 * @generated from message pg_query.MergeAction
 */
export type MergeActionJson = {
  /**
   * @generated from field: bool matched = 1;
   */
  matched?: boolean;

  /**
   * @generated from field: pg_query.CmdType command_type = 2;
   */
  commandType?: CmdTypeJson;

  /**
   * @generated from field: pg_query.OverridingKind override = 3;
   */
  override?: OverridingKindJson;

  /**
   * @generated from field: pg_query.Node qual = 4;
   */
  qual?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node target_list = 5;
   */
  targetList?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node update_colnos = 6;
   */
  updateColnos?: NodeJson[];
};

/**
 * Describes the message pg_query.MergeAction.
 * Use `create(MergeActionSchema)` to create a new message.
 */
export const MergeActionSchema: GenMessage<MergeAction, MergeActionJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 116);

/**
 * @generated from message pg_query.TriggerTransition
 */
export type TriggerTransition = Message<"pg_query.TriggerTransition"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: bool is_new = 2;
   */
  isNew: boolean;

  /**
   * @generated from field: bool is_table = 3;
   */
  isTable: boolean;
};

/**
 * @generated from message pg_query.TriggerTransition
 */
export type TriggerTransitionJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: bool is_new = 2;
   */
  isNew?: boolean;

  /**
   * @generated from field: bool is_table = 3;
   */
  isTable?: boolean;
};

/**
 * Describes the message pg_query.TriggerTransition.
 * Use `create(TriggerTransitionSchema)` to create a new message.
 */
export const TriggerTransitionSchema: GenMessage<TriggerTransition, TriggerTransitionJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 117);

/**
 * @generated from message pg_query.JsonOutput
 */
export type JsonOutput = Message<"pg_query.JsonOutput"> & {
  /**
   * @generated from field: pg_query.TypeName type_name = 1;
   */
  typeName?: TypeName;

  /**
   * @generated from field: pg_query.JsonReturning returning = 2;
   */
  returning?: JsonReturning;
};

/**
 * @generated from message pg_query.JsonOutput
 */
export type JsonOutputJson = {
  /**
   * @generated from field: pg_query.TypeName type_name = 1;
   */
  typeName?: TypeNameJson;

  /**
   * @generated from field: pg_query.JsonReturning returning = 2;
   */
  returning?: JsonReturningJson;
};

/**
 * Describes the message pg_query.JsonOutput.
 * Use `create(JsonOutputSchema)` to create a new message.
 */
export const JsonOutputSchema: GenMessage<JsonOutput, JsonOutputJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 118);

/**
 * @generated from message pg_query.JsonKeyValue
 */
export type JsonKeyValue = Message<"pg_query.JsonKeyValue"> & {
  /**
   * @generated from field: pg_query.Node key = 1;
   */
  key?: Node;

  /**
   * @generated from field: pg_query.JsonValueExpr value = 2;
   */
  value?: JsonValueExpr;
};

/**
 * @generated from message pg_query.JsonKeyValue
 */
export type JsonKeyValueJson = {
  /**
   * @generated from field: pg_query.Node key = 1;
   */
  key?: NodeJson;

  /**
   * @generated from field: pg_query.JsonValueExpr value = 2;
   */
  value?: JsonValueExprJson;
};

/**
 * Describes the message pg_query.JsonKeyValue.
 * Use `create(JsonKeyValueSchema)` to create a new message.
 */
export const JsonKeyValueSchema: GenMessage<JsonKeyValue, JsonKeyValueJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 119);

/**
 * @generated from message pg_query.JsonObjectConstructor
 */
export type JsonObjectConstructor = Message<"pg_query.JsonObjectConstructor"> & {
  /**
   * @generated from field: repeated pg_query.Node exprs = 1;
   */
  exprs: Node[];

  /**
   * @generated from field: pg_query.JsonOutput output = 2;
   */
  output?: JsonOutput;

  /**
   * @generated from field: bool absent_on_null = 3 [json_name = "absent_on_null"];
   */
  absentOnNull: boolean;

  /**
   * @generated from field: bool unique = 4;
   */
  unique: boolean;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.JsonObjectConstructor
 */
export type JsonObjectConstructorJson = {
  /**
   * @generated from field: repeated pg_query.Node exprs = 1;
   */
  exprs?: NodeJson[];

  /**
   * @generated from field: pg_query.JsonOutput output = 2;
   */
  output?: JsonOutputJson;

  /**
   * @generated from field: bool absent_on_null = 3 [json_name = "absent_on_null"];
   */
  absent_on_null?: boolean;

  /**
   * @generated from field: bool unique = 4;
   */
  unique?: boolean;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.JsonObjectConstructor.
 * Use `create(JsonObjectConstructorSchema)` to create a new message.
 */
export const JsonObjectConstructorSchema: GenMessage<JsonObjectConstructor, JsonObjectConstructorJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 120);

/**
 * @generated from message pg_query.JsonArrayConstructor
 */
export type JsonArrayConstructor = Message<"pg_query.JsonArrayConstructor"> & {
  /**
   * @generated from field: repeated pg_query.Node exprs = 1;
   */
  exprs: Node[];

  /**
   * @generated from field: pg_query.JsonOutput output = 2;
   */
  output?: JsonOutput;

  /**
   * @generated from field: bool absent_on_null = 3 [json_name = "absent_on_null"];
   */
  absentOnNull: boolean;

  /**
   * @generated from field: int32 location = 4;
   */
  location: number;
};

/**
 * @generated from message pg_query.JsonArrayConstructor
 */
export type JsonArrayConstructorJson = {
  /**
   * @generated from field: repeated pg_query.Node exprs = 1;
   */
  exprs?: NodeJson[];

  /**
   * @generated from field: pg_query.JsonOutput output = 2;
   */
  output?: JsonOutputJson;

  /**
   * @generated from field: bool absent_on_null = 3 [json_name = "absent_on_null"];
   */
  absent_on_null?: boolean;

  /**
   * @generated from field: int32 location = 4;
   */
  location?: number;
};

/**
 * Describes the message pg_query.JsonArrayConstructor.
 * Use `create(JsonArrayConstructorSchema)` to create a new message.
 */
export const JsonArrayConstructorSchema: GenMessage<JsonArrayConstructor, JsonArrayConstructorJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 121);

/**
 * @generated from message pg_query.JsonArrayQueryConstructor
 */
export type JsonArrayQueryConstructor = Message<"pg_query.JsonArrayQueryConstructor"> & {
  /**
   * @generated from field: pg_query.Node query = 1;
   */
  query?: Node;

  /**
   * @generated from field: pg_query.JsonOutput output = 2;
   */
  output?: JsonOutput;

  /**
   * @generated from field: pg_query.JsonFormat format = 3;
   */
  format?: JsonFormat;

  /**
   * @generated from field: bool absent_on_null = 4 [json_name = "absent_on_null"];
   */
  absentOnNull: boolean;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.JsonArrayQueryConstructor
 */
export type JsonArrayQueryConstructorJson = {
  /**
   * @generated from field: pg_query.Node query = 1;
   */
  query?: NodeJson;

  /**
   * @generated from field: pg_query.JsonOutput output = 2;
   */
  output?: JsonOutputJson;

  /**
   * @generated from field: pg_query.JsonFormat format = 3;
   */
  format?: JsonFormatJson;

  /**
   * @generated from field: bool absent_on_null = 4 [json_name = "absent_on_null"];
   */
  absent_on_null?: boolean;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.JsonArrayQueryConstructor.
 * Use `create(JsonArrayQueryConstructorSchema)` to create a new message.
 */
export const JsonArrayQueryConstructorSchema: GenMessage<JsonArrayQueryConstructor, JsonArrayQueryConstructorJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 122);

/**
 * @generated from message pg_query.JsonAggConstructor
 */
export type JsonAggConstructor = Message<"pg_query.JsonAggConstructor"> & {
  /**
   * @generated from field: pg_query.JsonOutput output = 1;
   */
  output?: JsonOutput;

  /**
   * @generated from field: pg_query.Node agg_filter = 2 [json_name = "agg_filter"];
   */
  aggFilter?: Node;

  /**
   * @generated from field: repeated pg_query.Node agg_order = 3 [json_name = "agg_order"];
   */
  aggOrder: Node[];

  /**
   * @generated from field: pg_query.WindowDef over = 4;
   */
  over?: WindowDef;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.JsonAggConstructor
 */
export type JsonAggConstructorJson = {
  /**
   * @generated from field: pg_query.JsonOutput output = 1;
   */
  output?: JsonOutputJson;

  /**
   * @generated from field: pg_query.Node agg_filter = 2 [json_name = "agg_filter"];
   */
  agg_filter?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node agg_order = 3 [json_name = "agg_order"];
   */
  agg_order?: NodeJson[];

  /**
   * @generated from field: pg_query.WindowDef over = 4;
   */
  over?: WindowDefJson;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.JsonAggConstructor.
 * Use `create(JsonAggConstructorSchema)` to create a new message.
 */
export const JsonAggConstructorSchema: GenMessage<JsonAggConstructor, JsonAggConstructorJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 123);

/**
 * @generated from message pg_query.JsonObjectAgg
 */
export type JsonObjectAgg = Message<"pg_query.JsonObjectAgg"> & {
  /**
   * @generated from field: pg_query.JsonAggConstructor constructor = 1;
   */
  constructor$?: JsonAggConstructor;

  /**
   * @generated from field: pg_query.JsonKeyValue arg = 2;
   */
  arg?: JsonKeyValue;

  /**
   * @generated from field: bool absent_on_null = 3 [json_name = "absent_on_null"];
   */
  absentOnNull: boolean;

  /**
   * @generated from field: bool unique = 4;
   */
  unique: boolean;
};

/**
 * @generated from message pg_query.JsonObjectAgg
 */
export type JsonObjectAggJson = {
  /**
   * @generated from field: pg_query.JsonAggConstructor constructor = 1;
   */
  constructor?: JsonAggConstructorJson;

  /**
   * @generated from field: pg_query.JsonKeyValue arg = 2;
   */
  arg?: JsonKeyValueJson;

  /**
   * @generated from field: bool absent_on_null = 3 [json_name = "absent_on_null"];
   */
  absent_on_null?: boolean;

  /**
   * @generated from field: bool unique = 4;
   */
  unique?: boolean;
};

/**
 * Describes the message pg_query.JsonObjectAgg.
 * Use `create(JsonObjectAggSchema)` to create a new message.
 */
export const JsonObjectAggSchema: GenMessage<JsonObjectAgg, JsonObjectAggJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 124);

/**
 * @generated from message pg_query.JsonArrayAgg
 */
export type JsonArrayAgg = Message<"pg_query.JsonArrayAgg"> & {
  /**
   * @generated from field: pg_query.JsonAggConstructor constructor = 1;
   */
  constructor$?: JsonAggConstructor;

  /**
   * @generated from field: pg_query.JsonValueExpr arg = 2;
   */
  arg?: JsonValueExpr;

  /**
   * @generated from field: bool absent_on_null = 3 [json_name = "absent_on_null"];
   */
  absentOnNull: boolean;
};

/**
 * @generated from message pg_query.JsonArrayAgg
 */
export type JsonArrayAggJson = {
  /**
   * @generated from field: pg_query.JsonAggConstructor constructor = 1;
   */
  constructor?: JsonAggConstructorJson;

  /**
   * @generated from field: pg_query.JsonValueExpr arg = 2;
   */
  arg?: JsonValueExprJson;

  /**
   * @generated from field: bool absent_on_null = 3 [json_name = "absent_on_null"];
   */
  absent_on_null?: boolean;
};

/**
 * Describes the message pg_query.JsonArrayAgg.
 * Use `create(JsonArrayAggSchema)` to create a new message.
 */
export const JsonArrayAggSchema: GenMessage<JsonArrayAgg, JsonArrayAggJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 125);

/**
 * @generated from message pg_query.RawStmt
 */
export type RawStmt = Message<"pg_query.RawStmt"> & {
  /**
   * @generated from field: pg_query.Node stmt = 1;
   */
  stmt?: Node;

  /**
   * @generated from field: int32 stmt_location = 2 [json_name = "stmt_location"];
   */
  stmtLocation: number;

  /**
   * @generated from field: int32 stmt_len = 3 [json_name = "stmt_len"];
   */
  stmtLen: number;
};

/**
 * @generated from message pg_query.RawStmt
 */
export type RawStmtJson = {
  /**
   * @generated from field: pg_query.Node stmt = 1;
   */
  stmt?: NodeJson;

  /**
   * @generated from field: int32 stmt_location = 2 [json_name = "stmt_location"];
   */
  stmt_location?: number;

  /**
   * @generated from field: int32 stmt_len = 3 [json_name = "stmt_len"];
   */
  stmt_len?: number;
};

/**
 * Describes the message pg_query.RawStmt.
 * Use `create(RawStmtSchema)` to create a new message.
 */
export const RawStmtSchema: GenMessage<RawStmt, RawStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 126);

/**
 * @generated from message pg_query.InsertStmt
 */
export type InsertStmt = Message<"pg_query.InsertStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node cols = 2;
   */
  cols: Node[];

  /**
   * @generated from field: pg_query.Node select_stmt = 3;
   */
  selectStmt?: Node;

  /**
   * @generated from field: pg_query.OnConflictClause on_conflict_clause = 4;
   */
  onConflictClause?: OnConflictClause;

  /**
   * @generated from field: repeated pg_query.Node returning_list = 5;
   */
  returningList: Node[];

  /**
   * @generated from field: pg_query.WithClause with_clause = 6;
   */
  withClause?: WithClause;

  /**
   * @generated from field: pg_query.OverridingKind override = 7;
   */
  override: OverridingKind;
};

/**
 * @generated from message pg_query.InsertStmt
 */
export type InsertStmtJson = {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: repeated pg_query.Node cols = 2;
   */
  cols?: NodeJson[];

  /**
   * @generated from field: pg_query.Node select_stmt = 3;
   */
  selectStmt?: NodeJson;

  /**
   * @generated from field: pg_query.OnConflictClause on_conflict_clause = 4;
   */
  onConflictClause?: OnConflictClauseJson;

  /**
   * @generated from field: repeated pg_query.Node returning_list = 5;
   */
  returningList?: NodeJson[];

  /**
   * @generated from field: pg_query.WithClause with_clause = 6;
   */
  withClause?: WithClauseJson;

  /**
   * @generated from field: pg_query.OverridingKind override = 7;
   */
  override?: OverridingKindJson;
};

/**
 * Describes the message pg_query.InsertStmt.
 * Use `create(InsertStmtSchema)` to create a new message.
 */
export const InsertStmtSchema: GenMessage<InsertStmt, InsertStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 127);

/**
 * @generated from message pg_query.DeleteStmt
 */
export type DeleteStmt = Message<"pg_query.DeleteStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node using_clause = 2;
   */
  usingClause: Node[];

  /**
   * @generated from field: pg_query.Node where_clause = 3;
   */
  whereClause?: Node;

  /**
   * @generated from field: repeated pg_query.Node returning_list = 4;
   */
  returningList: Node[];

  /**
   * @generated from field: pg_query.WithClause with_clause = 5;
   */
  withClause?: WithClause;
};

/**
 * @generated from message pg_query.DeleteStmt
 */
export type DeleteStmtJson = {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: repeated pg_query.Node using_clause = 2;
   */
  usingClause?: NodeJson[];

  /**
   * @generated from field: pg_query.Node where_clause = 3;
   */
  whereClause?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node returning_list = 4;
   */
  returningList?: NodeJson[];

  /**
   * @generated from field: pg_query.WithClause with_clause = 5;
   */
  withClause?: WithClauseJson;
};

/**
 * Describes the message pg_query.DeleteStmt.
 * Use `create(DeleteStmtSchema)` to create a new message.
 */
export const DeleteStmtSchema: GenMessage<DeleteStmt, DeleteStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 128);

/**
 * @generated from message pg_query.UpdateStmt
 */
export type UpdateStmt = Message<"pg_query.UpdateStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node target_list = 2;
   */
  targetList: Node[];

  /**
   * @generated from field: pg_query.Node where_clause = 3;
   */
  whereClause?: Node;

  /**
   * @generated from field: repeated pg_query.Node from_clause = 4;
   */
  fromClause: Node[];

  /**
   * @generated from field: repeated pg_query.Node returning_list = 5;
   */
  returningList: Node[];

  /**
   * @generated from field: pg_query.WithClause with_clause = 6;
   */
  withClause?: WithClause;
};

/**
 * @generated from message pg_query.UpdateStmt
 */
export type UpdateStmtJson = {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: repeated pg_query.Node target_list = 2;
   */
  targetList?: NodeJson[];

  /**
   * @generated from field: pg_query.Node where_clause = 3;
   */
  whereClause?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node from_clause = 4;
   */
  fromClause?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node returning_list = 5;
   */
  returningList?: NodeJson[];

  /**
   * @generated from field: pg_query.WithClause with_clause = 6;
   */
  withClause?: WithClauseJson;
};

/**
 * Describes the message pg_query.UpdateStmt.
 * Use `create(UpdateStmtSchema)` to create a new message.
 */
export const UpdateStmtSchema: GenMessage<UpdateStmt, UpdateStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 129);

/**
 * @generated from message pg_query.MergeStmt
 */
export type MergeStmt = Message<"pg_query.MergeStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: pg_query.Node source_relation = 2;
   */
  sourceRelation?: Node;

  /**
   * @generated from field: pg_query.Node join_condition = 3;
   */
  joinCondition?: Node;

  /**
   * @generated from field: repeated pg_query.Node merge_when_clauses = 4;
   */
  mergeWhenClauses: Node[];

  /**
   * @generated from field: pg_query.WithClause with_clause = 5;
   */
  withClause?: WithClause;
};

/**
 * @generated from message pg_query.MergeStmt
 */
export type MergeStmtJson = {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: pg_query.Node source_relation = 2;
   */
  sourceRelation?: NodeJson;

  /**
   * @generated from field: pg_query.Node join_condition = 3;
   */
  joinCondition?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node merge_when_clauses = 4;
   */
  mergeWhenClauses?: NodeJson[];

  /**
   * @generated from field: pg_query.WithClause with_clause = 5;
   */
  withClause?: WithClauseJson;
};

/**
 * Describes the message pg_query.MergeStmt.
 * Use `create(MergeStmtSchema)` to create a new message.
 */
export const MergeStmtSchema: GenMessage<MergeStmt, MergeStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 130);

/**
 * @generated from message pg_query.SelectStmt
 */
export type SelectStmt = Message<"pg_query.SelectStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node distinct_clause = 1;
   */
  distinctClause: Node[];

  /**
   * @generated from field: pg_query.IntoClause into_clause = 2;
   */
  intoClause?: IntoClause;

  /**
   * @generated from field: repeated pg_query.Node target_list = 3;
   */
  targetList: Node[];

  /**
   * @generated from field: repeated pg_query.Node from_clause = 4;
   */
  fromClause: Node[];

  /**
   * @generated from field: pg_query.Node where_clause = 5;
   */
  whereClause?: Node;

  /**
   * @generated from field: repeated pg_query.Node group_clause = 6;
   */
  groupClause: Node[];

  /**
   * @generated from field: bool group_distinct = 7;
   */
  groupDistinct: boolean;

  /**
   * @generated from field: pg_query.Node having_clause = 8;
   */
  havingClause?: Node;

  /**
   * @generated from field: repeated pg_query.Node window_clause = 9;
   */
  windowClause: Node[];

  /**
   * @generated from field: repeated pg_query.Node values_lists = 10;
   */
  valuesLists: Node[];

  /**
   * @generated from field: repeated pg_query.Node sort_clause = 11;
   */
  sortClause: Node[];

  /**
   * @generated from field: pg_query.Node limit_offset = 12;
   */
  limitOffset?: Node;

  /**
   * @generated from field: pg_query.Node limit_count = 13;
   */
  limitCount?: Node;

  /**
   * @generated from field: pg_query.LimitOption limit_option = 14;
   */
  limitOption: LimitOption;

  /**
   * @generated from field: repeated pg_query.Node locking_clause = 15;
   */
  lockingClause: Node[];

  /**
   * @generated from field: pg_query.WithClause with_clause = 16;
   */
  withClause?: WithClause;

  /**
   * @generated from field: pg_query.SetOperation op = 17;
   */
  op: SetOperation;

  /**
   * @generated from field: bool all = 18;
   */
  all: boolean;

  /**
   * @generated from field: pg_query.SelectStmt larg = 19;
   */
  larg?: SelectStmt;

  /**
   * @generated from field: pg_query.SelectStmt rarg = 20;
   */
  rarg?: SelectStmt;
};

/**
 * @generated from message pg_query.SelectStmt
 */
export type SelectStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node distinct_clause = 1;
   */
  distinctClause?: NodeJson[];

  /**
   * @generated from field: pg_query.IntoClause into_clause = 2;
   */
  intoClause?: IntoClauseJson;

  /**
   * @generated from field: repeated pg_query.Node target_list = 3;
   */
  targetList?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node from_clause = 4;
   */
  fromClause?: NodeJson[];

  /**
   * @generated from field: pg_query.Node where_clause = 5;
   */
  whereClause?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node group_clause = 6;
   */
  groupClause?: NodeJson[];

  /**
   * @generated from field: bool group_distinct = 7;
   */
  groupDistinct?: boolean;

  /**
   * @generated from field: pg_query.Node having_clause = 8;
   */
  havingClause?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node window_clause = 9;
   */
  windowClause?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node values_lists = 10;
   */
  valuesLists?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node sort_clause = 11;
   */
  sortClause?: NodeJson[];

  /**
   * @generated from field: pg_query.Node limit_offset = 12;
   */
  limitOffset?: NodeJson;

  /**
   * @generated from field: pg_query.Node limit_count = 13;
   */
  limitCount?: NodeJson;

  /**
   * @generated from field: pg_query.LimitOption limit_option = 14;
   */
  limitOption?: LimitOptionJson;

  /**
   * @generated from field: repeated pg_query.Node locking_clause = 15;
   */
  lockingClause?: NodeJson[];

  /**
   * @generated from field: pg_query.WithClause with_clause = 16;
   */
  withClause?: WithClauseJson;

  /**
   * @generated from field: pg_query.SetOperation op = 17;
   */
  op?: SetOperationJson;

  /**
   * @generated from field: bool all = 18;
   */
  all?: boolean;

  /**
   * @generated from field: pg_query.SelectStmt larg = 19;
   */
  larg?: SelectStmtJson;

  /**
   * @generated from field: pg_query.SelectStmt rarg = 20;
   */
  rarg?: SelectStmtJson;
};

/**
 * Describes the message pg_query.SelectStmt.
 * Use `create(SelectStmtSchema)` to create a new message.
 */
export const SelectStmtSchema: GenMessage<SelectStmt, SelectStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 131);

/**
 * @generated from message pg_query.SetOperationStmt
 */
export type SetOperationStmt = Message<"pg_query.SetOperationStmt"> & {
  /**
   * @generated from field: pg_query.SetOperation op = 1;
   */
  op: SetOperation;

  /**
   * @generated from field: bool all = 2;
   */
  all: boolean;

  /**
   * @generated from field: pg_query.Node larg = 3;
   */
  larg?: Node;

  /**
   * @generated from field: pg_query.Node rarg = 4;
   */
  rarg?: Node;

  /**
   * @generated from field: repeated pg_query.Node col_types = 5;
   */
  colTypes: Node[];

  /**
   * @generated from field: repeated pg_query.Node col_typmods = 6;
   */
  colTypmods: Node[];

  /**
   * @generated from field: repeated pg_query.Node col_collations = 7;
   */
  colCollations: Node[];

  /**
   * @generated from field: repeated pg_query.Node group_clauses = 8;
   */
  groupClauses: Node[];
};

/**
 * @generated from message pg_query.SetOperationStmt
 */
export type SetOperationStmtJson = {
  /**
   * @generated from field: pg_query.SetOperation op = 1;
   */
  op?: SetOperationJson;

  /**
   * @generated from field: bool all = 2;
   */
  all?: boolean;

  /**
   * @generated from field: pg_query.Node larg = 3;
   */
  larg?: NodeJson;

  /**
   * @generated from field: pg_query.Node rarg = 4;
   */
  rarg?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node col_types = 5;
   */
  colTypes?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node col_typmods = 6;
   */
  colTypmods?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node col_collations = 7;
   */
  colCollations?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node group_clauses = 8;
   */
  groupClauses?: NodeJson[];
};

/**
 * Describes the message pg_query.SetOperationStmt.
 * Use `create(SetOperationStmtSchema)` to create a new message.
 */
export const SetOperationStmtSchema: GenMessage<SetOperationStmt, SetOperationStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 132);

/**
 * @generated from message pg_query.ReturnStmt
 */
export type ReturnStmt = Message<"pg_query.ReturnStmt"> & {
  /**
   * @generated from field: pg_query.Node returnval = 1;
   */
  returnval?: Node;
};

/**
 * @generated from message pg_query.ReturnStmt
 */
export type ReturnStmtJson = {
  /**
   * @generated from field: pg_query.Node returnval = 1;
   */
  returnval?: NodeJson;
};

/**
 * Describes the message pg_query.ReturnStmt.
 * Use `create(ReturnStmtSchema)` to create a new message.
 */
export const ReturnStmtSchema: GenMessage<ReturnStmt, ReturnStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 133);

/**
 * @generated from message pg_query.PLAssignStmt
 */
export type PLAssignStmt = Message<"pg_query.PLAssignStmt"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated pg_query.Node indirection = 2;
   */
  indirection: Node[];

  /**
   * @generated from field: int32 nnames = 3;
   */
  nnames: number;

  /**
   * @generated from field: pg_query.SelectStmt val = 4;
   */
  val?: SelectStmt;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;
};

/**
 * @generated from message pg_query.PLAssignStmt
 */
export type PLAssignStmtJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: repeated pg_query.Node indirection = 2;
   */
  indirection?: NodeJson[];

  /**
   * @generated from field: int32 nnames = 3;
   */
  nnames?: number;

  /**
   * @generated from field: pg_query.SelectStmt val = 4;
   */
  val?: SelectStmtJson;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;
};

/**
 * Describes the message pg_query.PLAssignStmt.
 * Use `create(PLAssignStmtSchema)` to create a new message.
 */
export const PLAssignStmtSchema: GenMessage<PLAssignStmt, PLAssignStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 134);

/**
 * @generated from message pg_query.CreateSchemaStmt
 */
export type CreateSchemaStmt = Message<"pg_query.CreateSchemaStmt"> & {
  /**
   * @generated from field: string schemaname = 1;
   */
  schemaname: string;

  /**
   * @generated from field: pg_query.RoleSpec authrole = 2;
   */
  authrole?: RoleSpec;

  /**
   * @generated from field: repeated pg_query.Node schema_elts = 3;
   */
  schemaElts: Node[];

  /**
   * @generated from field: bool if_not_exists = 4 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;
};

/**
 * @generated from message pg_query.CreateSchemaStmt
 */
export type CreateSchemaStmtJson = {
  /**
   * @generated from field: string schemaname = 1;
   */
  schemaname?: string;

  /**
   * @generated from field: pg_query.RoleSpec authrole = 2;
   */
  authrole?: RoleSpecJson;

  /**
   * @generated from field: repeated pg_query.Node schema_elts = 3;
   */
  schemaElts?: NodeJson[];

  /**
   * @generated from field: bool if_not_exists = 4 [json_name = "if_not_exists"];
   */
  if_not_exists?: boolean;
};

/**
 * Describes the message pg_query.CreateSchemaStmt.
 * Use `create(CreateSchemaStmtSchema)` to create a new message.
 */
export const CreateSchemaStmtSchema: GenMessage<CreateSchemaStmt, CreateSchemaStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 135);

/**
 * @generated from message pg_query.AlterTableStmt
 */
export type AlterTableStmt = Message<"pg_query.AlterTableStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node cmds = 2;
   */
  cmds: Node[];

  /**
   * @generated from field: pg_query.ObjectType objtype = 3;
   */
  objtype: ObjectType;

  /**
   * @generated from field: bool missing_ok = 4 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * @generated from message pg_query.AlterTableStmt
 */
export type AlterTableStmtJson = {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: repeated pg_query.Node cmds = 2;
   */
  cmds?: NodeJson[];

  /**
   * @generated from field: pg_query.ObjectType objtype = 3;
   */
  objtype?: ObjectTypeJson;

  /**
   * @generated from field: bool missing_ok = 4 [json_name = "missing_ok"];
   */
  missing_ok?: boolean;
};

/**
 * Describes the message pg_query.AlterTableStmt.
 * Use `create(AlterTableStmtSchema)` to create a new message.
 */
export const AlterTableStmtSchema: GenMessage<AlterTableStmt, AlterTableStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 136);

/**
 * @generated from message pg_query.ReplicaIdentityStmt
 */
export type ReplicaIdentityStmt = Message<"pg_query.ReplicaIdentityStmt"> & {
  /**
   * @generated from field: string identity_type = 1 [json_name = "identity_type"];
   */
  identityType: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * @generated from message pg_query.ReplicaIdentityStmt
 */
export type ReplicaIdentityStmtJson = {
  /**
   * @generated from field: string identity_type = 1 [json_name = "identity_type"];
   */
  identity_type?: string;

  /**
   * @generated from field: string name = 2;
   */
  name?: string;
};

/**
 * Describes the message pg_query.ReplicaIdentityStmt.
 * Use `create(ReplicaIdentityStmtSchema)` to create a new message.
 */
export const ReplicaIdentityStmtSchema: GenMessage<ReplicaIdentityStmt, ReplicaIdentityStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 137);

/**
 * @generated from message pg_query.AlterTableCmd
 */
export type AlterTableCmd = Message<"pg_query.AlterTableCmd"> & {
  /**
   * @generated from field: pg_query.AlterTableType subtype = 1;
   */
  subtype: AlterTableType;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: int32 num = 3;
   */
  num: number;

  /**
   * @generated from field: pg_query.RoleSpec newowner = 4;
   */
  newowner?: RoleSpec;

  /**
   * @generated from field: pg_query.Node def = 5;
   */
  def?: Node;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 6;
   */
  behavior: DropBehavior;

  /**
   * @generated from field: bool missing_ok = 7 [json_name = "missing_ok"];
   */
  missingOk: boolean;

  /**
   * @generated from field: bool recurse = 8;
   */
  recurse: boolean;
};

/**
 * @generated from message pg_query.AlterTableCmd
 */
export type AlterTableCmdJson = {
  /**
   * @generated from field: pg_query.AlterTableType subtype = 1;
   */
  subtype?: AlterTableTypeJson;

  /**
   * @generated from field: string name = 2;
   */
  name?: string;

  /**
   * @generated from field: int32 num = 3;
   */
  num?: number;

  /**
   * @generated from field: pg_query.RoleSpec newowner = 4;
   */
  newowner?: RoleSpecJson;

  /**
   * @generated from field: pg_query.Node def = 5;
   */
  def?: NodeJson;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 6;
   */
  behavior?: DropBehaviorJson;

  /**
   * @generated from field: bool missing_ok = 7 [json_name = "missing_ok"];
   */
  missing_ok?: boolean;

  /**
   * @generated from field: bool recurse = 8;
   */
  recurse?: boolean;
};

/**
 * Describes the message pg_query.AlterTableCmd.
 * Use `create(AlterTableCmdSchema)` to create a new message.
 */
export const AlterTableCmdSchema: GenMessage<AlterTableCmd, AlterTableCmdJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 138);

/**
 * @generated from message pg_query.AlterCollationStmt
 */
export type AlterCollationStmt = Message<"pg_query.AlterCollationStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node collname = 1;
   */
  collname: Node[];
};

/**
 * @generated from message pg_query.AlterCollationStmt
 */
export type AlterCollationStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node collname = 1;
   */
  collname?: NodeJson[];
};

/**
 * Describes the message pg_query.AlterCollationStmt.
 * Use `create(AlterCollationStmtSchema)` to create a new message.
 */
export const AlterCollationStmtSchema: GenMessage<AlterCollationStmt, AlterCollationStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 139);

/**
 * @generated from message pg_query.AlterDomainStmt
 */
export type AlterDomainStmt = Message<"pg_query.AlterDomainStmt"> & {
  /**
   * @generated from field: string subtype = 1;
   */
  subtype: string;

  /**
   * @generated from field: repeated pg_query.Node type_name = 2;
   */
  typeName: Node[];

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: pg_query.Node def = 4;
   */
  def?: Node;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 5;
   */
  behavior: DropBehavior;

  /**
   * @generated from field: bool missing_ok = 6 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * @generated from message pg_query.AlterDomainStmt
 */
export type AlterDomainStmtJson = {
  /**
   * @generated from field: string subtype = 1;
   */
  subtype?: string;

  /**
   * @generated from field: repeated pg_query.Node type_name = 2;
   */
  typeName?: NodeJson[];

  /**
   * @generated from field: string name = 3;
   */
  name?: string;

  /**
   * @generated from field: pg_query.Node def = 4;
   */
  def?: NodeJson;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 5;
   */
  behavior?: DropBehaviorJson;

  /**
   * @generated from field: bool missing_ok = 6 [json_name = "missing_ok"];
   */
  missing_ok?: boolean;
};

/**
 * Describes the message pg_query.AlterDomainStmt.
 * Use `create(AlterDomainStmtSchema)` to create a new message.
 */
export const AlterDomainStmtSchema: GenMessage<AlterDomainStmt, AlterDomainStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 140);

/**
 * @generated from message pg_query.GrantStmt
 */
export type GrantStmt = Message<"pg_query.GrantStmt"> & {
  /**
   * @generated from field: bool is_grant = 1 [json_name = "is_grant"];
   */
  isGrant: boolean;

  /**
   * @generated from field: pg_query.GrantTargetType targtype = 2;
   */
  targtype: GrantTargetType;

  /**
   * @generated from field: pg_query.ObjectType objtype = 3;
   */
  objtype: ObjectType;

  /**
   * @generated from field: repeated pg_query.Node objects = 4;
   */
  objects: Node[];

  /**
   * @generated from field: repeated pg_query.Node privileges = 5;
   */
  privileges: Node[];

  /**
   * @generated from field: repeated pg_query.Node grantees = 6;
   */
  grantees: Node[];

  /**
   * @generated from field: bool grant_option = 7 [json_name = "grant_option"];
   */
  grantOption: boolean;

  /**
   * @generated from field: pg_query.RoleSpec grantor = 8;
   */
  grantor?: RoleSpec;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 9;
   */
  behavior: DropBehavior;
};

/**
 * @generated from message pg_query.GrantStmt
 */
export type GrantStmtJson = {
  /**
   * @generated from field: bool is_grant = 1 [json_name = "is_grant"];
   */
  is_grant?: boolean;

  /**
   * @generated from field: pg_query.GrantTargetType targtype = 2;
   */
  targtype?: GrantTargetTypeJson;

  /**
   * @generated from field: pg_query.ObjectType objtype = 3;
   */
  objtype?: ObjectTypeJson;

  /**
   * @generated from field: repeated pg_query.Node objects = 4;
   */
  objects?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node privileges = 5;
   */
  privileges?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node grantees = 6;
   */
  grantees?: NodeJson[];

  /**
   * @generated from field: bool grant_option = 7 [json_name = "grant_option"];
   */
  grant_option?: boolean;

  /**
   * @generated from field: pg_query.RoleSpec grantor = 8;
   */
  grantor?: RoleSpecJson;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 9;
   */
  behavior?: DropBehaviorJson;
};

/**
 * Describes the message pg_query.GrantStmt.
 * Use `create(GrantStmtSchema)` to create a new message.
 */
export const GrantStmtSchema: GenMessage<GrantStmt, GrantStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 141);

/**
 * @generated from message pg_query.ObjectWithArgs
 */
export type ObjectWithArgs = Message<"pg_query.ObjectWithArgs"> & {
  /**
   * @generated from field: repeated pg_query.Node objname = 1;
   */
  objname: Node[];

  /**
   * @generated from field: repeated pg_query.Node objargs = 2;
   */
  objargs: Node[];

  /**
   * @generated from field: repeated pg_query.Node objfuncargs = 3;
   */
  objfuncargs: Node[];

  /**
   * @generated from field: bool args_unspecified = 4 [json_name = "args_unspecified"];
   */
  argsUnspecified: boolean;
};

/**
 * @generated from message pg_query.ObjectWithArgs
 */
export type ObjectWithArgsJson = {
  /**
   * @generated from field: repeated pg_query.Node objname = 1;
   */
  objname?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node objargs = 2;
   */
  objargs?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node objfuncargs = 3;
   */
  objfuncargs?: NodeJson[];

  /**
   * @generated from field: bool args_unspecified = 4 [json_name = "args_unspecified"];
   */
  args_unspecified?: boolean;
};

/**
 * Describes the message pg_query.ObjectWithArgs.
 * Use `create(ObjectWithArgsSchema)` to create a new message.
 */
export const ObjectWithArgsSchema: GenMessage<ObjectWithArgs, ObjectWithArgsJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 142);

/**
 * @generated from message pg_query.AccessPriv
 */
export type AccessPriv = Message<"pg_query.AccessPriv"> & {
  /**
   * @generated from field: string priv_name = 1 [json_name = "priv_name"];
   */
  privName: string;

  /**
   * @generated from field: repeated pg_query.Node cols = 2;
   */
  cols: Node[];
};

/**
 * @generated from message pg_query.AccessPriv
 */
export type AccessPrivJson = {
  /**
   * @generated from field: string priv_name = 1 [json_name = "priv_name"];
   */
  priv_name?: string;

  /**
   * @generated from field: repeated pg_query.Node cols = 2;
   */
  cols?: NodeJson[];
};

/**
 * Describes the message pg_query.AccessPriv.
 * Use `create(AccessPrivSchema)` to create a new message.
 */
export const AccessPrivSchema: GenMessage<AccessPriv, AccessPrivJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 143);

/**
 * @generated from message pg_query.GrantRoleStmt
 */
export type GrantRoleStmt = Message<"pg_query.GrantRoleStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node granted_roles = 1 [json_name = "granted_roles"];
   */
  grantedRoles: Node[];

  /**
   * @generated from field: repeated pg_query.Node grantee_roles = 2 [json_name = "grantee_roles"];
   */
  granteeRoles: Node[];

  /**
   * @generated from field: bool is_grant = 3 [json_name = "is_grant"];
   */
  isGrant: boolean;

  /**
   * @generated from field: repeated pg_query.Node opt = 4;
   */
  opt: Node[];

  /**
   * @generated from field: pg_query.RoleSpec grantor = 5;
   */
  grantor?: RoleSpec;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 6;
   */
  behavior: DropBehavior;
};

/**
 * @generated from message pg_query.GrantRoleStmt
 */
export type GrantRoleStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node granted_roles = 1 [json_name = "granted_roles"];
   */
  granted_roles?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node grantee_roles = 2 [json_name = "grantee_roles"];
   */
  grantee_roles?: NodeJson[];

  /**
   * @generated from field: bool is_grant = 3 [json_name = "is_grant"];
   */
  is_grant?: boolean;

  /**
   * @generated from field: repeated pg_query.Node opt = 4;
   */
  opt?: NodeJson[];

  /**
   * @generated from field: pg_query.RoleSpec grantor = 5;
   */
  grantor?: RoleSpecJson;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 6;
   */
  behavior?: DropBehaviorJson;
};

/**
 * Describes the message pg_query.GrantRoleStmt.
 * Use `create(GrantRoleStmtSchema)` to create a new message.
 */
export const GrantRoleStmtSchema: GenMessage<GrantRoleStmt, GrantRoleStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 144);

/**
 * @generated from message pg_query.AlterDefaultPrivilegesStmt
 */
export type AlterDefaultPrivilegesStmt = Message<"pg_query.AlterDefaultPrivilegesStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node options = 1;
   */
  options: Node[];

  /**
   * @generated from field: pg_query.GrantStmt action = 2;
   */
  action?: GrantStmt;
};

/**
 * @generated from message pg_query.AlterDefaultPrivilegesStmt
 */
export type AlterDefaultPrivilegesStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node options = 1;
   */
  options?: NodeJson[];

  /**
   * @generated from field: pg_query.GrantStmt action = 2;
   */
  action?: GrantStmtJson;
};

/**
 * Describes the message pg_query.AlterDefaultPrivilegesStmt.
 * Use `create(AlterDefaultPrivilegesStmtSchema)` to create a new message.
 */
export const AlterDefaultPrivilegesStmtSchema: GenMessage<AlterDefaultPrivilegesStmt, AlterDefaultPrivilegesStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 145);

/**
 * @generated from message pg_query.CopyStmt
 */
export type CopyStmt = Message<"pg_query.CopyStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: pg_query.Node query = 2;
   */
  query?: Node;

  /**
   * @generated from field: repeated pg_query.Node attlist = 3;
   */
  attlist: Node[];

  /**
   * @generated from field: bool is_from = 4 [json_name = "is_from"];
   */
  isFrom: boolean;

  /**
   * @generated from field: bool is_program = 5 [json_name = "is_program"];
   */
  isProgram: boolean;

  /**
   * @generated from field: string filename = 6;
   */
  filename: string;

  /**
   * @generated from field: repeated pg_query.Node options = 7;
   */
  options: Node[];

  /**
   * @generated from field: pg_query.Node where_clause = 8;
   */
  whereClause?: Node;
};

/**
 * @generated from message pg_query.CopyStmt
 */
export type CopyStmtJson = {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: pg_query.Node query = 2;
   */
  query?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node attlist = 3;
   */
  attlist?: NodeJson[];

  /**
   * @generated from field: bool is_from = 4 [json_name = "is_from"];
   */
  is_from?: boolean;

  /**
   * @generated from field: bool is_program = 5 [json_name = "is_program"];
   */
  is_program?: boolean;

  /**
   * @generated from field: string filename = 6;
   */
  filename?: string;

  /**
   * @generated from field: repeated pg_query.Node options = 7;
   */
  options?: NodeJson[];

  /**
   * @generated from field: pg_query.Node where_clause = 8;
   */
  whereClause?: NodeJson;
};

/**
 * Describes the message pg_query.CopyStmt.
 * Use `create(CopyStmtSchema)` to create a new message.
 */
export const CopyStmtSchema: GenMessage<CopyStmt, CopyStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 146);

/**
 * @generated from message pg_query.VariableSetStmt
 */
export type VariableSetStmt = Message<"pg_query.VariableSetStmt"> & {
  /**
   * @generated from field: pg_query.VariableSetKind kind = 1;
   */
  kind: VariableSetKind;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: repeated pg_query.Node args = 3;
   */
  args: Node[];

  /**
   * @generated from field: bool is_local = 4 [json_name = "is_local"];
   */
  isLocal: boolean;
};

/**
 * @generated from message pg_query.VariableSetStmt
 */
export type VariableSetStmtJson = {
  /**
   * @generated from field: pg_query.VariableSetKind kind = 1;
   */
  kind?: VariableSetKindJson;

  /**
   * @generated from field: string name = 2;
   */
  name?: string;

  /**
   * @generated from field: repeated pg_query.Node args = 3;
   */
  args?: NodeJson[];

  /**
   * @generated from field: bool is_local = 4 [json_name = "is_local"];
   */
  is_local?: boolean;
};

/**
 * Describes the message pg_query.VariableSetStmt.
 * Use `create(VariableSetStmtSchema)` to create a new message.
 */
export const VariableSetStmtSchema: GenMessage<VariableSetStmt, VariableSetStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 147);

/**
 * @generated from message pg_query.VariableShowStmt
 */
export type VariableShowStmt = Message<"pg_query.VariableShowStmt"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * @generated from message pg_query.VariableShowStmt
 */
export type VariableShowStmtJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;
};

/**
 * Describes the message pg_query.VariableShowStmt.
 * Use `create(VariableShowStmtSchema)` to create a new message.
 */
export const VariableShowStmtSchema: GenMessage<VariableShowStmt, VariableShowStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 148);

/**
 * @generated from message pg_query.CreateStmt
 */
export type CreateStmt = Message<"pg_query.CreateStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node table_elts = 2;
   */
  tableElts: Node[];

  /**
   * @generated from field: repeated pg_query.Node inh_relations = 3;
   */
  inhRelations: Node[];

  /**
   * @generated from field: pg_query.PartitionBoundSpec partbound = 4;
   */
  partbound?: PartitionBoundSpec;

  /**
   * @generated from field: pg_query.PartitionSpec partspec = 5;
   */
  partspec?: PartitionSpec;

  /**
   * @generated from field: pg_query.TypeName of_typename = 6;
   */
  ofTypename?: TypeName;

  /**
   * @generated from field: repeated pg_query.Node constraints = 7;
   */
  constraints: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 8;
   */
  options: Node[];

  /**
   * @generated from field: pg_query.OnCommitAction oncommit = 9;
   */
  oncommit: OnCommitAction;

  /**
   * @generated from field: string tablespacename = 10;
   */
  tablespacename: string;

  /**
   * @generated from field: string access_method = 11;
   */
  accessMethod: string;

  /**
   * @generated from field: bool if_not_exists = 12 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;
};

/**
 * @generated from message pg_query.CreateStmt
 */
export type CreateStmtJson = {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: repeated pg_query.Node table_elts = 2;
   */
  tableElts?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node inh_relations = 3;
   */
  inhRelations?: NodeJson[];

  /**
   * @generated from field: pg_query.PartitionBoundSpec partbound = 4;
   */
  partbound?: PartitionBoundSpecJson;

  /**
   * @generated from field: pg_query.PartitionSpec partspec = 5;
   */
  partspec?: PartitionSpecJson;

  /**
   * @generated from field: pg_query.TypeName of_typename = 6;
   */
  ofTypename?: TypeNameJson;

  /**
   * @generated from field: repeated pg_query.Node constraints = 7;
   */
  constraints?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node options = 8;
   */
  options?: NodeJson[];

  /**
   * @generated from field: pg_query.OnCommitAction oncommit = 9;
   */
  oncommit?: OnCommitActionJson;

  /**
   * @generated from field: string tablespacename = 10;
   */
  tablespacename?: string;

  /**
   * @generated from field: string access_method = 11;
   */
  accessMethod?: string;

  /**
   * @generated from field: bool if_not_exists = 12 [json_name = "if_not_exists"];
   */
  if_not_exists?: boolean;
};

/**
 * Describes the message pg_query.CreateStmt.
 * Use `create(CreateStmtSchema)` to create a new message.
 */
export const CreateStmtSchema: GenMessage<CreateStmt, CreateStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 149);

/**
 * @generated from message pg_query.Constraint
 */
export type Constraint = Message<"pg_query.Constraint"> & {
  /**
   * @generated from field: pg_query.ConstrType contype = 1;
   */
  contype: ConstrType;

  /**
   * @generated from field: string conname = 2;
   */
  conname: string;

  /**
   * @generated from field: bool deferrable = 3;
   */
  deferrable: boolean;

  /**
   * @generated from field: bool initdeferred = 4;
   */
  initdeferred: boolean;

  /**
   * @generated from field: int32 location = 5;
   */
  location: number;

  /**
   * @generated from field: bool is_no_inherit = 6 [json_name = "is_no_inherit"];
   */
  isNoInherit: boolean;

  /**
   * @generated from field: pg_query.Node raw_expr = 7 [json_name = "raw_expr"];
   */
  rawExpr?: Node;

  /**
   * @generated from field: string cooked_expr = 8 [json_name = "cooked_expr"];
   */
  cookedExpr: string;

  /**
   * @generated from field: string generated_when = 9 [json_name = "generated_when"];
   */
  generatedWhen: string;

  /**
   * @generated from field: bool nulls_not_distinct = 10 [json_name = "nulls_not_distinct"];
   */
  nullsNotDistinct: boolean;

  /**
   * @generated from field: repeated pg_query.Node keys = 11;
   */
  keys: Node[];

  /**
   * @generated from field: repeated pg_query.Node including = 12;
   */
  including: Node[];

  /**
   * @generated from field: repeated pg_query.Node exclusions = 13;
   */
  exclusions: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 14;
   */
  options: Node[];

  /**
   * @generated from field: string indexname = 15;
   */
  indexname: string;

  /**
   * @generated from field: string indexspace = 16;
   */
  indexspace: string;

  /**
   * @generated from field: bool reset_default_tblspc = 17 [json_name = "reset_default_tblspc"];
   */
  resetDefaultTblspc: boolean;

  /**
   * @generated from field: string access_method = 18 [json_name = "access_method"];
   */
  accessMethod: string;

  /**
   * @generated from field: pg_query.Node where_clause = 19 [json_name = "where_clause"];
   */
  whereClause?: Node;

  /**
   * @generated from field: pg_query.RangeVar pktable = 20;
   */
  pktable?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node fk_attrs = 21 [json_name = "fk_attrs"];
   */
  fkAttrs: Node[];

  /**
   * @generated from field: repeated pg_query.Node pk_attrs = 22 [json_name = "pk_attrs"];
   */
  pkAttrs: Node[];

  /**
   * @generated from field: string fk_matchtype = 23 [json_name = "fk_matchtype"];
   */
  fkMatchtype: string;

  /**
   * @generated from field: string fk_upd_action = 24 [json_name = "fk_upd_action"];
   */
  fkUpdAction: string;

  /**
   * @generated from field: string fk_del_action = 25 [json_name = "fk_del_action"];
   */
  fkDelAction: string;

  /**
   * @generated from field: repeated pg_query.Node fk_del_set_cols = 26 [json_name = "fk_del_set_cols"];
   */
  fkDelSetCols: Node[];

  /**
   * @generated from field: repeated pg_query.Node old_conpfeqop = 27 [json_name = "old_conpfeqop"];
   */
  oldConpfeqop: Node[];

  /**
   * @generated from field: uint32 old_pktable_oid = 28 [json_name = "old_pktable_oid"];
   */
  oldPktableOid: number;

  /**
   * @generated from field: bool skip_validation = 29 [json_name = "skip_validation"];
   */
  skipValidation: boolean;

  /**
   * @generated from field: bool initially_valid = 30 [json_name = "initially_valid"];
   */
  initiallyValid: boolean;
};

/**
 * @generated from message pg_query.Constraint
 */
export type ConstraintJson = {
  /**
   * @generated from field: pg_query.ConstrType contype = 1;
   */
  contype?: ConstrTypeJson;

  /**
   * @generated from field: string conname = 2;
   */
  conname?: string;

  /**
   * @generated from field: bool deferrable = 3;
   */
  deferrable?: boolean;

  /**
   * @generated from field: bool initdeferred = 4;
   */
  initdeferred?: boolean;

  /**
   * @generated from field: int32 location = 5;
   */
  location?: number;

  /**
   * @generated from field: bool is_no_inherit = 6 [json_name = "is_no_inherit"];
   */
  is_no_inherit?: boolean;

  /**
   * @generated from field: pg_query.Node raw_expr = 7 [json_name = "raw_expr"];
   */
  raw_expr?: NodeJson;

  /**
   * @generated from field: string cooked_expr = 8 [json_name = "cooked_expr"];
   */
  cooked_expr?: string;

  /**
   * @generated from field: string generated_when = 9 [json_name = "generated_when"];
   */
  generated_when?: string;

  /**
   * @generated from field: bool nulls_not_distinct = 10 [json_name = "nulls_not_distinct"];
   */
  nulls_not_distinct?: boolean;

  /**
   * @generated from field: repeated pg_query.Node keys = 11;
   */
  keys?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node including = 12;
   */
  including?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node exclusions = 13;
   */
  exclusions?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node options = 14;
   */
  options?: NodeJson[];

  /**
   * @generated from field: string indexname = 15;
   */
  indexname?: string;

  /**
   * @generated from field: string indexspace = 16;
   */
  indexspace?: string;

  /**
   * @generated from field: bool reset_default_tblspc = 17 [json_name = "reset_default_tblspc"];
   */
  reset_default_tblspc?: boolean;

  /**
   * @generated from field: string access_method = 18 [json_name = "access_method"];
   */
  access_method?: string;

  /**
   * @generated from field: pg_query.Node where_clause = 19 [json_name = "where_clause"];
   */
  where_clause?: NodeJson;

  /**
   * @generated from field: pg_query.RangeVar pktable = 20;
   */
  pktable?: RangeVarJson;

  /**
   * @generated from field: repeated pg_query.Node fk_attrs = 21 [json_name = "fk_attrs"];
   */
  fk_attrs?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node pk_attrs = 22 [json_name = "pk_attrs"];
   */
  pk_attrs?: NodeJson[];

  /**
   * @generated from field: string fk_matchtype = 23 [json_name = "fk_matchtype"];
   */
  fk_matchtype?: string;

  /**
   * @generated from field: string fk_upd_action = 24 [json_name = "fk_upd_action"];
   */
  fk_upd_action?: string;

  /**
   * @generated from field: string fk_del_action = 25 [json_name = "fk_del_action"];
   */
  fk_del_action?: string;

  /**
   * @generated from field: repeated pg_query.Node fk_del_set_cols = 26 [json_name = "fk_del_set_cols"];
   */
  fk_del_set_cols?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node old_conpfeqop = 27 [json_name = "old_conpfeqop"];
   */
  old_conpfeqop?: NodeJson[];

  /**
   * @generated from field: uint32 old_pktable_oid = 28 [json_name = "old_pktable_oid"];
   */
  old_pktable_oid?: number;

  /**
   * @generated from field: bool skip_validation = 29 [json_name = "skip_validation"];
   */
  skip_validation?: boolean;

  /**
   * @generated from field: bool initially_valid = 30 [json_name = "initially_valid"];
   */
  initially_valid?: boolean;
};

/**
 * Describes the message pg_query.Constraint.
 * Use `create(ConstraintSchema)` to create a new message.
 */
export const ConstraintSchema: GenMessage<Constraint, ConstraintJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 150);

/**
 * @generated from message pg_query.CreateTableSpaceStmt
 */
export type CreateTableSpaceStmt = Message<"pg_query.CreateTableSpaceStmt"> & {
  /**
   * @generated from field: string tablespacename = 1;
   */
  tablespacename: string;

  /**
   * @generated from field: pg_query.RoleSpec owner = 2;
   */
  owner?: RoleSpec;

  /**
   * @generated from field: string location = 3;
   */
  location: string;

  /**
   * @generated from field: repeated pg_query.Node options = 4;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.CreateTableSpaceStmt
 */
export type CreateTableSpaceStmtJson = {
  /**
   * @generated from field: string tablespacename = 1;
   */
  tablespacename?: string;

  /**
   * @generated from field: pg_query.RoleSpec owner = 2;
   */
  owner?: RoleSpecJson;

  /**
   * @generated from field: string location = 3;
   */
  location?: string;

  /**
   * @generated from field: repeated pg_query.Node options = 4;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.CreateTableSpaceStmt.
 * Use `create(CreateTableSpaceStmtSchema)` to create a new message.
 */
export const CreateTableSpaceStmtSchema: GenMessage<CreateTableSpaceStmt, CreateTableSpaceStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 151);

/**
 * @generated from message pg_query.DropTableSpaceStmt
 */
export type DropTableSpaceStmt = Message<"pg_query.DropTableSpaceStmt"> & {
  /**
   * @generated from field: string tablespacename = 1;
   */
  tablespacename: string;

  /**
   * @generated from field: bool missing_ok = 2 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * @generated from message pg_query.DropTableSpaceStmt
 */
export type DropTableSpaceStmtJson = {
  /**
   * @generated from field: string tablespacename = 1;
   */
  tablespacename?: string;

  /**
   * @generated from field: bool missing_ok = 2 [json_name = "missing_ok"];
   */
  missing_ok?: boolean;
};

/**
 * Describes the message pg_query.DropTableSpaceStmt.
 * Use `create(DropTableSpaceStmtSchema)` to create a new message.
 */
export const DropTableSpaceStmtSchema: GenMessage<DropTableSpaceStmt, DropTableSpaceStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 152);

/**
 * @generated from message pg_query.AlterTableSpaceOptionsStmt
 */
export type AlterTableSpaceOptionsStmt = Message<"pg_query.AlterTableSpaceOptionsStmt"> & {
  /**
   * @generated from field: string tablespacename = 1;
   */
  tablespacename: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];

  /**
   * @generated from field: bool is_reset = 3;
   */
  isReset: boolean;
};

/**
 * @generated from message pg_query.AlterTableSpaceOptionsStmt
 */
export type AlterTableSpaceOptionsStmtJson = {
  /**
   * @generated from field: string tablespacename = 1;
   */
  tablespacename?: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options?: NodeJson[];

  /**
   * @generated from field: bool is_reset = 3;
   */
  isReset?: boolean;
};

/**
 * Describes the message pg_query.AlterTableSpaceOptionsStmt.
 * Use `create(AlterTableSpaceOptionsStmtSchema)` to create a new message.
 */
export const AlterTableSpaceOptionsStmtSchema: GenMessage<AlterTableSpaceOptionsStmt, AlterTableSpaceOptionsStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 153);

/**
 * @generated from message pg_query.AlterTableMoveAllStmt
 */
export type AlterTableMoveAllStmt = Message<"pg_query.AlterTableMoveAllStmt"> & {
  /**
   * @generated from field: string orig_tablespacename = 1 [json_name = "orig_tablespacename"];
   */
  origTablespacename: string;

  /**
   * @generated from field: pg_query.ObjectType objtype = 2;
   */
  objtype: ObjectType;

  /**
   * @generated from field: repeated pg_query.Node roles = 3;
   */
  roles: Node[];

  /**
   * @generated from field: string new_tablespacename = 4 [json_name = "new_tablespacename"];
   */
  newTablespacename: string;

  /**
   * @generated from field: bool nowait = 5;
   */
  nowait: boolean;
};

/**
 * @generated from message pg_query.AlterTableMoveAllStmt
 */
export type AlterTableMoveAllStmtJson = {
  /**
   * @generated from field: string orig_tablespacename = 1 [json_name = "orig_tablespacename"];
   */
  orig_tablespacename?: string;

  /**
   * @generated from field: pg_query.ObjectType objtype = 2;
   */
  objtype?: ObjectTypeJson;

  /**
   * @generated from field: repeated pg_query.Node roles = 3;
   */
  roles?: NodeJson[];

  /**
   * @generated from field: string new_tablespacename = 4 [json_name = "new_tablespacename"];
   */
  new_tablespacename?: string;

  /**
   * @generated from field: bool nowait = 5;
   */
  nowait?: boolean;
};

/**
 * Describes the message pg_query.AlterTableMoveAllStmt.
 * Use `create(AlterTableMoveAllStmtSchema)` to create a new message.
 */
export const AlterTableMoveAllStmtSchema: GenMessage<AlterTableMoveAllStmt, AlterTableMoveAllStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 154);

/**
 * @generated from message pg_query.CreateExtensionStmt
 */
export type CreateExtensionStmt = Message<"pg_query.CreateExtensionStmt"> & {
  /**
   * @generated from field: string extname = 1;
   */
  extname: string;

  /**
   * @generated from field: bool if_not_exists = 2 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.CreateExtensionStmt
 */
export type CreateExtensionStmtJson = {
  /**
   * @generated from field: string extname = 1;
   */
  extname?: string;

  /**
   * @generated from field: bool if_not_exists = 2 [json_name = "if_not_exists"];
   */
  if_not_exists?: boolean;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.CreateExtensionStmt.
 * Use `create(CreateExtensionStmtSchema)` to create a new message.
 */
export const CreateExtensionStmtSchema: GenMessage<CreateExtensionStmt, CreateExtensionStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 155);

/**
 * @generated from message pg_query.AlterExtensionStmt
 */
export type AlterExtensionStmt = Message<"pg_query.AlterExtensionStmt"> & {
  /**
   * @generated from field: string extname = 1;
   */
  extname: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.AlterExtensionStmt
 */
export type AlterExtensionStmtJson = {
  /**
   * @generated from field: string extname = 1;
   */
  extname?: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.AlterExtensionStmt.
 * Use `create(AlterExtensionStmtSchema)` to create a new message.
 */
export const AlterExtensionStmtSchema: GenMessage<AlterExtensionStmt, AlterExtensionStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 156);

/**
 * @generated from message pg_query.AlterExtensionContentsStmt
 */
export type AlterExtensionContentsStmt = Message<"pg_query.AlterExtensionContentsStmt"> & {
  /**
   * @generated from field: string extname = 1;
   */
  extname: string;

  /**
   * @generated from field: int32 action = 2;
   */
  action: number;

  /**
   * @generated from field: pg_query.ObjectType objtype = 3;
   */
  objtype: ObjectType;

  /**
   * @generated from field: pg_query.Node object = 4;
   */
  object?: Node;
};

/**
 * @generated from message pg_query.AlterExtensionContentsStmt
 */
export type AlterExtensionContentsStmtJson = {
  /**
   * @generated from field: string extname = 1;
   */
  extname?: string;

  /**
   * @generated from field: int32 action = 2;
   */
  action?: number;

  /**
   * @generated from field: pg_query.ObjectType objtype = 3;
   */
  objtype?: ObjectTypeJson;

  /**
   * @generated from field: pg_query.Node object = 4;
   */
  object?: NodeJson;
};

/**
 * Describes the message pg_query.AlterExtensionContentsStmt.
 * Use `create(AlterExtensionContentsStmtSchema)` to create a new message.
 */
export const AlterExtensionContentsStmtSchema: GenMessage<AlterExtensionContentsStmt, AlterExtensionContentsStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 157);

/**
 * @generated from message pg_query.CreateFdwStmt
 */
export type CreateFdwStmt = Message<"pg_query.CreateFdwStmt"> & {
  /**
   * @generated from field: string fdwname = 1;
   */
  fdwname: string;

  /**
   * @generated from field: repeated pg_query.Node func_options = 2 [json_name = "func_options"];
   */
  funcOptions: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.CreateFdwStmt
 */
export type CreateFdwStmtJson = {
  /**
   * @generated from field: string fdwname = 1;
   */
  fdwname?: string;

  /**
   * @generated from field: repeated pg_query.Node func_options = 2 [json_name = "func_options"];
   */
  func_options?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.CreateFdwStmt.
 * Use `create(CreateFdwStmtSchema)` to create a new message.
 */
export const CreateFdwStmtSchema: GenMessage<CreateFdwStmt, CreateFdwStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 158);

/**
 * @generated from message pg_query.AlterFdwStmt
 */
export type AlterFdwStmt = Message<"pg_query.AlterFdwStmt"> & {
  /**
   * @generated from field: string fdwname = 1;
   */
  fdwname: string;

  /**
   * @generated from field: repeated pg_query.Node func_options = 2 [json_name = "func_options"];
   */
  funcOptions: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.AlterFdwStmt
 */
export type AlterFdwStmtJson = {
  /**
   * @generated from field: string fdwname = 1;
   */
  fdwname?: string;

  /**
   * @generated from field: repeated pg_query.Node func_options = 2 [json_name = "func_options"];
   */
  func_options?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.AlterFdwStmt.
 * Use `create(AlterFdwStmtSchema)` to create a new message.
 */
export const AlterFdwStmtSchema: GenMessage<AlterFdwStmt, AlterFdwStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 159);

/**
 * @generated from message pg_query.CreateForeignServerStmt
 */
export type CreateForeignServerStmt = Message<"pg_query.CreateForeignServerStmt"> & {
  /**
   * @generated from field: string servername = 1;
   */
  servername: string;

  /**
   * @generated from field: string servertype = 2;
   */
  servertype: string;

  /**
   * @generated from field: string version = 3;
   */
  version: string;

  /**
   * @generated from field: string fdwname = 4;
   */
  fdwname: string;

  /**
   * @generated from field: bool if_not_exists = 5 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;

  /**
   * @generated from field: repeated pg_query.Node options = 6;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.CreateForeignServerStmt
 */
export type CreateForeignServerStmtJson = {
  /**
   * @generated from field: string servername = 1;
   */
  servername?: string;

  /**
   * @generated from field: string servertype = 2;
   */
  servertype?: string;

  /**
   * @generated from field: string version = 3;
   */
  version?: string;

  /**
   * @generated from field: string fdwname = 4;
   */
  fdwname?: string;

  /**
   * @generated from field: bool if_not_exists = 5 [json_name = "if_not_exists"];
   */
  if_not_exists?: boolean;

  /**
   * @generated from field: repeated pg_query.Node options = 6;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.CreateForeignServerStmt.
 * Use `create(CreateForeignServerStmtSchema)` to create a new message.
 */
export const CreateForeignServerStmtSchema: GenMessage<CreateForeignServerStmt, CreateForeignServerStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 160);

/**
 * @generated from message pg_query.AlterForeignServerStmt
 */
export type AlterForeignServerStmt = Message<"pg_query.AlterForeignServerStmt"> & {
  /**
   * @generated from field: string servername = 1;
   */
  servername: string;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options: Node[];

  /**
   * @generated from field: bool has_version = 4 [json_name = "has_version"];
   */
  hasVersion: boolean;
};

/**
 * @generated from message pg_query.AlterForeignServerStmt
 */
export type AlterForeignServerStmtJson = {
  /**
   * @generated from field: string servername = 1;
   */
  servername?: string;

  /**
   * @generated from field: string version = 2;
   */
  version?: string;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options?: NodeJson[];

  /**
   * @generated from field: bool has_version = 4 [json_name = "has_version"];
   */
  has_version?: boolean;
};

/**
 * Describes the message pg_query.AlterForeignServerStmt.
 * Use `create(AlterForeignServerStmtSchema)` to create a new message.
 */
export const AlterForeignServerStmtSchema: GenMessage<AlterForeignServerStmt, AlterForeignServerStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 161);

/**
 * @generated from message pg_query.CreateForeignTableStmt
 */
export type CreateForeignTableStmt = Message<"pg_query.CreateForeignTableStmt"> & {
  /**
   * @generated from field: pg_query.CreateStmt base_stmt = 1 [json_name = "base"];
   */
  baseStmt?: CreateStmt;

  /**
   * @generated from field: string servername = 2;
   */
  servername: string;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.CreateForeignTableStmt
 */
export type CreateForeignTableStmtJson = {
  /**
   * @generated from field: pg_query.CreateStmt base_stmt = 1 [json_name = "base"];
   */
  base?: CreateStmtJson;

  /**
   * @generated from field: string servername = 2;
   */
  servername?: string;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.CreateForeignTableStmt.
 * Use `create(CreateForeignTableStmtSchema)` to create a new message.
 */
export const CreateForeignTableStmtSchema: GenMessage<CreateForeignTableStmt, CreateForeignTableStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 162);

/**
 * @generated from message pg_query.CreateUserMappingStmt
 */
export type CreateUserMappingStmt = Message<"pg_query.CreateUserMappingStmt"> & {
  /**
   * @generated from field: pg_query.RoleSpec user = 1;
   */
  user?: RoleSpec;

  /**
   * @generated from field: string servername = 2;
   */
  servername: string;

  /**
   * @generated from field: bool if_not_exists = 3 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;

  /**
   * @generated from field: repeated pg_query.Node options = 4;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.CreateUserMappingStmt
 */
export type CreateUserMappingStmtJson = {
  /**
   * @generated from field: pg_query.RoleSpec user = 1;
   */
  user?: RoleSpecJson;

  /**
   * @generated from field: string servername = 2;
   */
  servername?: string;

  /**
   * @generated from field: bool if_not_exists = 3 [json_name = "if_not_exists"];
   */
  if_not_exists?: boolean;

  /**
   * @generated from field: repeated pg_query.Node options = 4;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.CreateUserMappingStmt.
 * Use `create(CreateUserMappingStmtSchema)` to create a new message.
 */
export const CreateUserMappingStmtSchema: GenMessage<CreateUserMappingStmt, CreateUserMappingStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 163);

/**
 * @generated from message pg_query.AlterUserMappingStmt
 */
export type AlterUserMappingStmt = Message<"pg_query.AlterUserMappingStmt"> & {
  /**
   * @generated from field: pg_query.RoleSpec user = 1;
   */
  user?: RoleSpec;

  /**
   * @generated from field: string servername = 2;
   */
  servername: string;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.AlterUserMappingStmt
 */
export type AlterUserMappingStmtJson = {
  /**
   * @generated from field: pg_query.RoleSpec user = 1;
   */
  user?: RoleSpecJson;

  /**
   * @generated from field: string servername = 2;
   */
  servername?: string;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.AlterUserMappingStmt.
 * Use `create(AlterUserMappingStmtSchema)` to create a new message.
 */
export const AlterUserMappingStmtSchema: GenMessage<AlterUserMappingStmt, AlterUserMappingStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 164);

/**
 * @generated from message pg_query.DropUserMappingStmt
 */
export type DropUserMappingStmt = Message<"pg_query.DropUserMappingStmt"> & {
  /**
   * @generated from field: pg_query.RoleSpec user = 1;
   */
  user?: RoleSpec;

  /**
   * @generated from field: string servername = 2;
   */
  servername: string;

  /**
   * @generated from field: bool missing_ok = 3 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * @generated from message pg_query.DropUserMappingStmt
 */
export type DropUserMappingStmtJson = {
  /**
   * @generated from field: pg_query.RoleSpec user = 1;
   */
  user?: RoleSpecJson;

  /**
   * @generated from field: string servername = 2;
   */
  servername?: string;

  /**
   * @generated from field: bool missing_ok = 3 [json_name = "missing_ok"];
   */
  missing_ok?: boolean;
};

/**
 * Describes the message pg_query.DropUserMappingStmt.
 * Use `create(DropUserMappingStmtSchema)` to create a new message.
 */
export const DropUserMappingStmtSchema: GenMessage<DropUserMappingStmt, DropUserMappingStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 165);

/**
 * @generated from message pg_query.ImportForeignSchemaStmt
 */
export type ImportForeignSchemaStmt = Message<"pg_query.ImportForeignSchemaStmt"> & {
  /**
   * @generated from field: string server_name = 1 [json_name = "server_name"];
   */
  serverName: string;

  /**
   * @generated from field: string remote_schema = 2 [json_name = "remote_schema"];
   */
  remoteSchema: string;

  /**
   * @generated from field: string local_schema = 3 [json_name = "local_schema"];
   */
  localSchema: string;

  /**
   * @generated from field: pg_query.ImportForeignSchemaType list_type = 4 [json_name = "list_type"];
   */
  listType: ImportForeignSchemaType;

  /**
   * @generated from field: repeated pg_query.Node table_list = 5 [json_name = "table_list"];
   */
  tableList: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 6;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.ImportForeignSchemaStmt
 */
export type ImportForeignSchemaStmtJson = {
  /**
   * @generated from field: string server_name = 1 [json_name = "server_name"];
   */
  server_name?: string;

  /**
   * @generated from field: string remote_schema = 2 [json_name = "remote_schema"];
   */
  remote_schema?: string;

  /**
   * @generated from field: string local_schema = 3 [json_name = "local_schema"];
   */
  local_schema?: string;

  /**
   * @generated from field: pg_query.ImportForeignSchemaType list_type = 4 [json_name = "list_type"];
   */
  list_type?: ImportForeignSchemaTypeJson;

  /**
   * @generated from field: repeated pg_query.Node table_list = 5 [json_name = "table_list"];
   */
  table_list?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node options = 6;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.ImportForeignSchemaStmt.
 * Use `create(ImportForeignSchemaStmtSchema)` to create a new message.
 */
export const ImportForeignSchemaStmtSchema: GenMessage<ImportForeignSchemaStmt, ImportForeignSchemaStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 166);

/**
 * @generated from message pg_query.CreatePolicyStmt
 */
export type CreatePolicyStmt = Message<"pg_query.CreatePolicyStmt"> & {
  /**
   * @generated from field: string policy_name = 1 [json_name = "policy_name"];
   */
  policyName: string;

  /**
   * @generated from field: pg_query.RangeVar table = 2;
   */
  table?: RangeVar;

  /**
   * @generated from field: string cmd_name = 3 [json_name = "cmd_name"];
   */
  cmdName: string;

  /**
   * @generated from field: bool permissive = 4;
   */
  permissive: boolean;

  /**
   * @generated from field: repeated pg_query.Node roles = 5;
   */
  roles: Node[];

  /**
   * @generated from field: pg_query.Node qual = 6;
   */
  qual?: Node;

  /**
   * @generated from field: pg_query.Node with_check = 7 [json_name = "with_check"];
   */
  withCheck?: Node;
};

/**
 * @generated from message pg_query.CreatePolicyStmt
 */
export type CreatePolicyStmtJson = {
  /**
   * @generated from field: string policy_name = 1 [json_name = "policy_name"];
   */
  policy_name?: string;

  /**
   * @generated from field: pg_query.RangeVar table = 2;
   */
  table?: RangeVarJson;

  /**
   * @generated from field: string cmd_name = 3 [json_name = "cmd_name"];
   */
  cmd_name?: string;

  /**
   * @generated from field: bool permissive = 4;
   */
  permissive?: boolean;

  /**
   * @generated from field: repeated pg_query.Node roles = 5;
   */
  roles?: NodeJson[];

  /**
   * @generated from field: pg_query.Node qual = 6;
   */
  qual?: NodeJson;

  /**
   * @generated from field: pg_query.Node with_check = 7 [json_name = "with_check"];
   */
  with_check?: NodeJson;
};

/**
 * Describes the message pg_query.CreatePolicyStmt.
 * Use `create(CreatePolicyStmtSchema)` to create a new message.
 */
export const CreatePolicyStmtSchema: GenMessage<CreatePolicyStmt, CreatePolicyStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 167);

/**
 * @generated from message pg_query.AlterPolicyStmt
 */
export type AlterPolicyStmt = Message<"pg_query.AlterPolicyStmt"> & {
  /**
   * @generated from field: string policy_name = 1 [json_name = "policy_name"];
   */
  policyName: string;

  /**
   * @generated from field: pg_query.RangeVar table = 2;
   */
  table?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node roles = 3;
   */
  roles: Node[];

  /**
   * @generated from field: pg_query.Node qual = 4;
   */
  qual?: Node;

  /**
   * @generated from field: pg_query.Node with_check = 5 [json_name = "with_check"];
   */
  withCheck?: Node;
};

/**
 * @generated from message pg_query.AlterPolicyStmt
 */
export type AlterPolicyStmtJson = {
  /**
   * @generated from field: string policy_name = 1 [json_name = "policy_name"];
   */
  policy_name?: string;

  /**
   * @generated from field: pg_query.RangeVar table = 2;
   */
  table?: RangeVarJson;

  /**
   * @generated from field: repeated pg_query.Node roles = 3;
   */
  roles?: NodeJson[];

  /**
   * @generated from field: pg_query.Node qual = 4;
   */
  qual?: NodeJson;

  /**
   * @generated from field: pg_query.Node with_check = 5 [json_name = "with_check"];
   */
  with_check?: NodeJson;
};

/**
 * Describes the message pg_query.AlterPolicyStmt.
 * Use `create(AlterPolicyStmtSchema)` to create a new message.
 */
export const AlterPolicyStmtSchema: GenMessage<AlterPolicyStmt, AlterPolicyStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 168);

/**
 * @generated from message pg_query.CreateAmStmt
 */
export type CreateAmStmt = Message<"pg_query.CreateAmStmt"> & {
  /**
   * @generated from field: string amname = 1;
   */
  amname: string;

  /**
   * @generated from field: repeated pg_query.Node handler_name = 2 [json_name = "handler_name"];
   */
  handlerName: Node[];

  /**
   * @generated from field: string amtype = 3;
   */
  amtype: string;
};

/**
 * @generated from message pg_query.CreateAmStmt
 */
export type CreateAmStmtJson = {
  /**
   * @generated from field: string amname = 1;
   */
  amname?: string;

  /**
   * @generated from field: repeated pg_query.Node handler_name = 2 [json_name = "handler_name"];
   */
  handler_name?: NodeJson[];

  /**
   * @generated from field: string amtype = 3;
   */
  amtype?: string;
};

/**
 * Describes the message pg_query.CreateAmStmt.
 * Use `create(CreateAmStmtSchema)` to create a new message.
 */
export const CreateAmStmtSchema: GenMessage<CreateAmStmt, CreateAmStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 169);

/**
 * @generated from message pg_query.CreateTrigStmt
 */
export type CreateTrigStmt = Message<"pg_query.CreateTrigStmt"> & {
  /**
   * @generated from field: bool replace = 1;
   */
  replace: boolean;

  /**
   * @generated from field: bool isconstraint = 2;
   */
  isconstraint: boolean;

  /**
   * @generated from field: string trigname = 3;
   */
  trigname: string;

  /**
   * @generated from field: pg_query.RangeVar relation = 4;
   */
  relation?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node funcname = 5;
   */
  funcname: Node[];

  /**
   * @generated from field: repeated pg_query.Node args = 6;
   */
  args: Node[];

  /**
   * @generated from field: bool row = 7;
   */
  row: boolean;

  /**
   * @generated from field: int32 timing = 8;
   */
  timing: number;

  /**
   * @generated from field: int32 events = 9;
   */
  events: number;

  /**
   * @generated from field: repeated pg_query.Node columns = 10;
   */
  columns: Node[];

  /**
   * @generated from field: pg_query.Node when_clause = 11;
   */
  whenClause?: Node;

  /**
   * @generated from field: repeated pg_query.Node transition_rels = 12;
   */
  transitionRels: Node[];

  /**
   * @generated from field: bool deferrable = 13;
   */
  deferrable: boolean;

  /**
   * @generated from field: bool initdeferred = 14;
   */
  initdeferred: boolean;

  /**
   * @generated from field: pg_query.RangeVar constrrel = 15;
   */
  constrrel?: RangeVar;
};

/**
 * @generated from message pg_query.CreateTrigStmt
 */
export type CreateTrigStmtJson = {
  /**
   * @generated from field: bool replace = 1;
   */
  replace?: boolean;

  /**
   * @generated from field: bool isconstraint = 2;
   */
  isconstraint?: boolean;

  /**
   * @generated from field: string trigname = 3;
   */
  trigname?: string;

  /**
   * @generated from field: pg_query.RangeVar relation = 4;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: repeated pg_query.Node funcname = 5;
   */
  funcname?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node args = 6;
   */
  args?: NodeJson[];

  /**
   * @generated from field: bool row = 7;
   */
  row?: boolean;

  /**
   * @generated from field: int32 timing = 8;
   */
  timing?: number;

  /**
   * @generated from field: int32 events = 9;
   */
  events?: number;

  /**
   * @generated from field: repeated pg_query.Node columns = 10;
   */
  columns?: NodeJson[];

  /**
   * @generated from field: pg_query.Node when_clause = 11;
   */
  whenClause?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node transition_rels = 12;
   */
  transitionRels?: NodeJson[];

  /**
   * @generated from field: bool deferrable = 13;
   */
  deferrable?: boolean;

  /**
   * @generated from field: bool initdeferred = 14;
   */
  initdeferred?: boolean;

  /**
   * @generated from field: pg_query.RangeVar constrrel = 15;
   */
  constrrel?: RangeVarJson;
};

/**
 * Describes the message pg_query.CreateTrigStmt.
 * Use `create(CreateTrigStmtSchema)` to create a new message.
 */
export const CreateTrigStmtSchema: GenMessage<CreateTrigStmt, CreateTrigStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 170);

/**
 * @generated from message pg_query.CreateEventTrigStmt
 */
export type CreateEventTrigStmt = Message<"pg_query.CreateEventTrigStmt"> & {
  /**
   * @generated from field: string trigname = 1;
   */
  trigname: string;

  /**
   * @generated from field: string eventname = 2;
   */
  eventname: string;

  /**
   * @generated from field: repeated pg_query.Node whenclause = 3;
   */
  whenclause: Node[];

  /**
   * @generated from field: repeated pg_query.Node funcname = 4;
   */
  funcname: Node[];
};

/**
 * @generated from message pg_query.CreateEventTrigStmt
 */
export type CreateEventTrigStmtJson = {
  /**
   * @generated from field: string trigname = 1;
   */
  trigname?: string;

  /**
   * @generated from field: string eventname = 2;
   */
  eventname?: string;

  /**
   * @generated from field: repeated pg_query.Node whenclause = 3;
   */
  whenclause?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node funcname = 4;
   */
  funcname?: NodeJson[];
};

/**
 * Describes the message pg_query.CreateEventTrigStmt.
 * Use `create(CreateEventTrigStmtSchema)` to create a new message.
 */
export const CreateEventTrigStmtSchema: GenMessage<CreateEventTrigStmt, CreateEventTrigStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 171);

/**
 * @generated from message pg_query.AlterEventTrigStmt
 */
export type AlterEventTrigStmt = Message<"pg_query.AlterEventTrigStmt"> & {
  /**
   * @generated from field: string trigname = 1;
   */
  trigname: string;

  /**
   * @generated from field: string tgenabled = 2;
   */
  tgenabled: string;
};

/**
 * @generated from message pg_query.AlterEventTrigStmt
 */
export type AlterEventTrigStmtJson = {
  /**
   * @generated from field: string trigname = 1;
   */
  trigname?: string;

  /**
   * @generated from field: string tgenabled = 2;
   */
  tgenabled?: string;
};

/**
 * Describes the message pg_query.AlterEventTrigStmt.
 * Use `create(AlterEventTrigStmtSchema)` to create a new message.
 */
export const AlterEventTrigStmtSchema: GenMessage<AlterEventTrigStmt, AlterEventTrigStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 172);

/**
 * @generated from message pg_query.CreatePLangStmt
 */
export type CreatePLangStmt = Message<"pg_query.CreatePLangStmt"> & {
  /**
   * @generated from field: bool replace = 1;
   */
  replace: boolean;

  /**
   * @generated from field: string plname = 2;
   */
  plname: string;

  /**
   * @generated from field: repeated pg_query.Node plhandler = 3;
   */
  plhandler: Node[];

  /**
   * @generated from field: repeated pg_query.Node plinline = 4;
   */
  plinline: Node[];

  /**
   * @generated from field: repeated pg_query.Node plvalidator = 5;
   */
  plvalidator: Node[];

  /**
   * @generated from field: bool pltrusted = 6;
   */
  pltrusted: boolean;
};

/**
 * @generated from message pg_query.CreatePLangStmt
 */
export type CreatePLangStmtJson = {
  /**
   * @generated from field: bool replace = 1;
   */
  replace?: boolean;

  /**
   * @generated from field: string plname = 2;
   */
  plname?: string;

  /**
   * @generated from field: repeated pg_query.Node plhandler = 3;
   */
  plhandler?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node plinline = 4;
   */
  plinline?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node plvalidator = 5;
   */
  plvalidator?: NodeJson[];

  /**
   * @generated from field: bool pltrusted = 6;
   */
  pltrusted?: boolean;
};

/**
 * Describes the message pg_query.CreatePLangStmt.
 * Use `create(CreatePLangStmtSchema)` to create a new message.
 */
export const CreatePLangStmtSchema: GenMessage<CreatePLangStmt, CreatePLangStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 173);

/**
 * @generated from message pg_query.CreateRoleStmt
 */
export type CreateRoleStmt = Message<"pg_query.CreateRoleStmt"> & {
  /**
   * @generated from field: pg_query.RoleStmtType stmt_type = 1 [json_name = "stmt_type"];
   */
  stmtType: RoleStmtType;

  /**
   * @generated from field: string role = 2;
   */
  role: string;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.CreateRoleStmt
 */
export type CreateRoleStmtJson = {
  /**
   * @generated from field: pg_query.RoleStmtType stmt_type = 1 [json_name = "stmt_type"];
   */
  stmt_type?: RoleStmtTypeJson;

  /**
   * @generated from field: string role = 2;
   */
  role?: string;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.CreateRoleStmt.
 * Use `create(CreateRoleStmtSchema)` to create a new message.
 */
export const CreateRoleStmtSchema: GenMessage<CreateRoleStmt, CreateRoleStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 174);

/**
 * @generated from message pg_query.AlterRoleStmt
 */
export type AlterRoleStmt = Message<"pg_query.AlterRoleStmt"> & {
  /**
   * @generated from field: pg_query.RoleSpec role = 1;
   */
  role?: RoleSpec;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];

  /**
   * @generated from field: int32 action = 3;
   */
  action: number;
};

/**
 * @generated from message pg_query.AlterRoleStmt
 */
export type AlterRoleStmtJson = {
  /**
   * @generated from field: pg_query.RoleSpec role = 1;
   */
  role?: RoleSpecJson;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options?: NodeJson[];

  /**
   * @generated from field: int32 action = 3;
   */
  action?: number;
};

/**
 * Describes the message pg_query.AlterRoleStmt.
 * Use `create(AlterRoleStmtSchema)` to create a new message.
 */
export const AlterRoleStmtSchema: GenMessage<AlterRoleStmt, AlterRoleStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 175);

/**
 * @generated from message pg_query.AlterRoleSetStmt
 */
export type AlterRoleSetStmt = Message<"pg_query.AlterRoleSetStmt"> & {
  /**
   * @generated from field: pg_query.RoleSpec role = 1;
   */
  role?: RoleSpec;

  /**
   * @generated from field: string database = 2;
   */
  database: string;

  /**
   * @generated from field: pg_query.VariableSetStmt setstmt = 3;
   */
  setstmt?: VariableSetStmt;
};

/**
 * @generated from message pg_query.AlterRoleSetStmt
 */
export type AlterRoleSetStmtJson = {
  /**
   * @generated from field: pg_query.RoleSpec role = 1;
   */
  role?: RoleSpecJson;

  /**
   * @generated from field: string database = 2;
   */
  database?: string;

  /**
   * @generated from field: pg_query.VariableSetStmt setstmt = 3;
   */
  setstmt?: VariableSetStmtJson;
};

/**
 * Describes the message pg_query.AlterRoleSetStmt.
 * Use `create(AlterRoleSetStmtSchema)` to create a new message.
 */
export const AlterRoleSetStmtSchema: GenMessage<AlterRoleSetStmt, AlterRoleSetStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 176);

/**
 * @generated from message pg_query.DropRoleStmt
 */
export type DropRoleStmt = Message<"pg_query.DropRoleStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node roles = 1;
   */
  roles: Node[];

  /**
   * @generated from field: bool missing_ok = 2 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * @generated from message pg_query.DropRoleStmt
 */
export type DropRoleStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node roles = 1;
   */
  roles?: NodeJson[];

  /**
   * @generated from field: bool missing_ok = 2 [json_name = "missing_ok"];
   */
  missing_ok?: boolean;
};

/**
 * Describes the message pg_query.DropRoleStmt.
 * Use `create(DropRoleStmtSchema)` to create a new message.
 */
export const DropRoleStmtSchema: GenMessage<DropRoleStmt, DropRoleStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 177);

/**
 * @generated from message pg_query.CreateSeqStmt
 */
export type CreateSeqStmt = Message<"pg_query.CreateSeqStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar sequence = 1;
   */
  sequence?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];

  /**
   * @generated from field: uint32 owner_id = 3;
   */
  ownerId: number;

  /**
   * @generated from field: bool for_identity = 4 [json_name = "for_identity"];
   */
  forIdentity: boolean;

  /**
   * @generated from field: bool if_not_exists = 5 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;
};

/**
 * @generated from message pg_query.CreateSeqStmt
 */
export type CreateSeqStmtJson = {
  /**
   * @generated from field: pg_query.RangeVar sequence = 1;
   */
  sequence?: RangeVarJson;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options?: NodeJson[];

  /**
   * @generated from field: uint32 owner_id = 3;
   */
  ownerId?: number;

  /**
   * @generated from field: bool for_identity = 4 [json_name = "for_identity"];
   */
  for_identity?: boolean;

  /**
   * @generated from field: bool if_not_exists = 5 [json_name = "if_not_exists"];
   */
  if_not_exists?: boolean;
};

/**
 * Describes the message pg_query.CreateSeqStmt.
 * Use `create(CreateSeqStmtSchema)` to create a new message.
 */
export const CreateSeqStmtSchema: GenMessage<CreateSeqStmt, CreateSeqStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 178);

/**
 * @generated from message pg_query.AlterSeqStmt
 */
export type AlterSeqStmt = Message<"pg_query.AlterSeqStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar sequence = 1;
   */
  sequence?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];

  /**
   * @generated from field: bool for_identity = 3 [json_name = "for_identity"];
   */
  forIdentity: boolean;

  /**
   * @generated from field: bool missing_ok = 4 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * @generated from message pg_query.AlterSeqStmt
 */
export type AlterSeqStmtJson = {
  /**
   * @generated from field: pg_query.RangeVar sequence = 1;
   */
  sequence?: RangeVarJson;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options?: NodeJson[];

  /**
   * @generated from field: bool for_identity = 3 [json_name = "for_identity"];
   */
  for_identity?: boolean;

  /**
   * @generated from field: bool missing_ok = 4 [json_name = "missing_ok"];
   */
  missing_ok?: boolean;
};

/**
 * Describes the message pg_query.AlterSeqStmt.
 * Use `create(AlterSeqStmtSchema)` to create a new message.
 */
export const AlterSeqStmtSchema: GenMessage<AlterSeqStmt, AlterSeqStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 179);

/**
 * @generated from message pg_query.DefineStmt
 */
export type DefineStmt = Message<"pg_query.DefineStmt"> & {
  /**
   * @generated from field: pg_query.ObjectType kind = 1;
   */
  kind: ObjectType;

  /**
   * @generated from field: bool oldstyle = 2;
   */
  oldstyle: boolean;

  /**
   * @generated from field: repeated pg_query.Node defnames = 3;
   */
  defnames: Node[];

  /**
   * @generated from field: repeated pg_query.Node args = 4;
   */
  args: Node[];

  /**
   * @generated from field: repeated pg_query.Node definition = 5;
   */
  definition: Node[];

  /**
   * @generated from field: bool if_not_exists = 6 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;

  /**
   * @generated from field: bool replace = 7;
   */
  replace: boolean;
};

/**
 * @generated from message pg_query.DefineStmt
 */
export type DefineStmtJson = {
  /**
   * @generated from field: pg_query.ObjectType kind = 1;
   */
  kind?: ObjectTypeJson;

  /**
   * @generated from field: bool oldstyle = 2;
   */
  oldstyle?: boolean;

  /**
   * @generated from field: repeated pg_query.Node defnames = 3;
   */
  defnames?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node args = 4;
   */
  args?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node definition = 5;
   */
  definition?: NodeJson[];

  /**
   * @generated from field: bool if_not_exists = 6 [json_name = "if_not_exists"];
   */
  if_not_exists?: boolean;

  /**
   * @generated from field: bool replace = 7;
   */
  replace?: boolean;
};

/**
 * Describes the message pg_query.DefineStmt.
 * Use `create(DefineStmtSchema)` to create a new message.
 */
export const DefineStmtSchema: GenMessage<DefineStmt, DefineStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 180);

/**
 * @generated from message pg_query.CreateDomainStmt
 */
export type CreateDomainStmt = Message<"pg_query.CreateDomainStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node domainname = 1;
   */
  domainname: Node[];

  /**
   * @generated from field: pg_query.TypeName type_name = 2;
   */
  typeName?: TypeName;

  /**
   * @generated from field: pg_query.CollateClause coll_clause = 3;
   */
  collClause?: CollateClause;

  /**
   * @generated from field: repeated pg_query.Node constraints = 4;
   */
  constraints: Node[];
};

/**
 * @generated from message pg_query.CreateDomainStmt
 */
export type CreateDomainStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node domainname = 1;
   */
  domainname?: NodeJson[];

  /**
   * @generated from field: pg_query.TypeName type_name = 2;
   */
  typeName?: TypeNameJson;

  /**
   * @generated from field: pg_query.CollateClause coll_clause = 3;
   */
  collClause?: CollateClauseJson;

  /**
   * @generated from field: repeated pg_query.Node constraints = 4;
   */
  constraints?: NodeJson[];
};

/**
 * Describes the message pg_query.CreateDomainStmt.
 * Use `create(CreateDomainStmtSchema)` to create a new message.
 */
export const CreateDomainStmtSchema: GenMessage<CreateDomainStmt, CreateDomainStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 181);

/**
 * @generated from message pg_query.CreateOpClassStmt
 */
export type CreateOpClassStmt = Message<"pg_query.CreateOpClassStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node opclassname = 1;
   */
  opclassname: Node[];

  /**
   * @generated from field: repeated pg_query.Node opfamilyname = 2;
   */
  opfamilyname: Node[];

  /**
   * @generated from field: string amname = 3;
   */
  amname: string;

  /**
   * @generated from field: pg_query.TypeName datatype = 4;
   */
  datatype?: TypeName;

  /**
   * @generated from field: repeated pg_query.Node items = 5;
   */
  items: Node[];

  /**
   * @generated from field: bool is_default = 6;
   */
  isDefault: boolean;
};

/**
 * @generated from message pg_query.CreateOpClassStmt
 */
export type CreateOpClassStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node opclassname = 1;
   */
  opclassname?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node opfamilyname = 2;
   */
  opfamilyname?: NodeJson[];

  /**
   * @generated from field: string amname = 3;
   */
  amname?: string;

  /**
   * @generated from field: pg_query.TypeName datatype = 4;
   */
  datatype?: TypeNameJson;

  /**
   * @generated from field: repeated pg_query.Node items = 5;
   */
  items?: NodeJson[];

  /**
   * @generated from field: bool is_default = 6;
   */
  isDefault?: boolean;
};

/**
 * Describes the message pg_query.CreateOpClassStmt.
 * Use `create(CreateOpClassStmtSchema)` to create a new message.
 */
export const CreateOpClassStmtSchema: GenMessage<CreateOpClassStmt, CreateOpClassStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 182);

/**
 * @generated from message pg_query.CreateOpClassItem
 */
export type CreateOpClassItem = Message<"pg_query.CreateOpClassItem"> & {
  /**
   * @generated from field: int32 itemtype = 1;
   */
  itemtype: number;

  /**
   * @generated from field: pg_query.ObjectWithArgs name = 2;
   */
  name?: ObjectWithArgs;

  /**
   * @generated from field: int32 number = 3;
   */
  number: number;

  /**
   * @generated from field: repeated pg_query.Node order_family = 4 [json_name = "order_family"];
   */
  orderFamily: Node[];

  /**
   * @generated from field: repeated pg_query.Node class_args = 5 [json_name = "class_args"];
   */
  classArgs: Node[];

  /**
   * @generated from field: pg_query.TypeName storedtype = 6;
   */
  storedtype?: TypeName;
};

/**
 * @generated from message pg_query.CreateOpClassItem
 */
export type CreateOpClassItemJson = {
  /**
   * @generated from field: int32 itemtype = 1;
   */
  itemtype?: number;

  /**
   * @generated from field: pg_query.ObjectWithArgs name = 2;
   */
  name?: ObjectWithArgsJson;

  /**
   * @generated from field: int32 number = 3;
   */
  number?: number;

  /**
   * @generated from field: repeated pg_query.Node order_family = 4 [json_name = "order_family"];
   */
  order_family?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node class_args = 5 [json_name = "class_args"];
   */
  class_args?: NodeJson[];

  /**
   * @generated from field: pg_query.TypeName storedtype = 6;
   */
  storedtype?: TypeNameJson;
};

/**
 * Describes the message pg_query.CreateOpClassItem.
 * Use `create(CreateOpClassItemSchema)` to create a new message.
 */
export const CreateOpClassItemSchema: GenMessage<CreateOpClassItem, CreateOpClassItemJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 183);

/**
 * @generated from message pg_query.CreateOpFamilyStmt
 */
export type CreateOpFamilyStmt = Message<"pg_query.CreateOpFamilyStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node opfamilyname = 1;
   */
  opfamilyname: Node[];

  /**
   * @generated from field: string amname = 2;
   */
  amname: string;
};

/**
 * @generated from message pg_query.CreateOpFamilyStmt
 */
export type CreateOpFamilyStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node opfamilyname = 1;
   */
  opfamilyname?: NodeJson[];

  /**
   * @generated from field: string amname = 2;
   */
  amname?: string;
};

/**
 * Describes the message pg_query.CreateOpFamilyStmt.
 * Use `create(CreateOpFamilyStmtSchema)` to create a new message.
 */
export const CreateOpFamilyStmtSchema: GenMessage<CreateOpFamilyStmt, CreateOpFamilyStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 184);

/**
 * @generated from message pg_query.AlterOpFamilyStmt
 */
export type AlterOpFamilyStmt = Message<"pg_query.AlterOpFamilyStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node opfamilyname = 1;
   */
  opfamilyname: Node[];

  /**
   * @generated from field: string amname = 2;
   */
  amname: string;

  /**
   * @generated from field: bool is_drop = 3;
   */
  isDrop: boolean;

  /**
   * @generated from field: repeated pg_query.Node items = 4;
   */
  items: Node[];
};

/**
 * @generated from message pg_query.AlterOpFamilyStmt
 */
export type AlterOpFamilyStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node opfamilyname = 1;
   */
  opfamilyname?: NodeJson[];

  /**
   * @generated from field: string amname = 2;
   */
  amname?: string;

  /**
   * @generated from field: bool is_drop = 3;
   */
  isDrop?: boolean;

  /**
   * @generated from field: repeated pg_query.Node items = 4;
   */
  items?: NodeJson[];
};

/**
 * Describes the message pg_query.AlterOpFamilyStmt.
 * Use `create(AlterOpFamilyStmtSchema)` to create a new message.
 */
export const AlterOpFamilyStmtSchema: GenMessage<AlterOpFamilyStmt, AlterOpFamilyStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 185);

/**
 * @generated from message pg_query.DropStmt
 */
export type DropStmt = Message<"pg_query.DropStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node objects = 1;
   */
  objects: Node[];

  /**
   * @generated from field: pg_query.ObjectType remove_type = 2;
   */
  removeType: ObjectType;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 3;
   */
  behavior: DropBehavior;

  /**
   * @generated from field: bool missing_ok = 4 [json_name = "missing_ok"];
   */
  missingOk: boolean;

  /**
   * @generated from field: bool concurrent = 5;
   */
  concurrent: boolean;
};

/**
 * @generated from message pg_query.DropStmt
 */
export type DropStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node objects = 1;
   */
  objects?: NodeJson[];

  /**
   * @generated from field: pg_query.ObjectType remove_type = 2;
   */
  removeType?: ObjectTypeJson;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 3;
   */
  behavior?: DropBehaviorJson;

  /**
   * @generated from field: bool missing_ok = 4 [json_name = "missing_ok"];
   */
  missing_ok?: boolean;

  /**
   * @generated from field: bool concurrent = 5;
   */
  concurrent?: boolean;
};

/**
 * Describes the message pg_query.DropStmt.
 * Use `create(DropStmtSchema)` to create a new message.
 */
export const DropStmtSchema: GenMessage<DropStmt, DropStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 186);

/**
 * @generated from message pg_query.TruncateStmt
 */
export type TruncateStmt = Message<"pg_query.TruncateStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node relations = 1;
   */
  relations: Node[];

  /**
   * @generated from field: bool restart_seqs = 2 [json_name = "restart_seqs"];
   */
  restartSeqs: boolean;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 3;
   */
  behavior: DropBehavior;
};

/**
 * @generated from message pg_query.TruncateStmt
 */
export type TruncateStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node relations = 1;
   */
  relations?: NodeJson[];

  /**
   * @generated from field: bool restart_seqs = 2 [json_name = "restart_seqs"];
   */
  restart_seqs?: boolean;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 3;
   */
  behavior?: DropBehaviorJson;
};

/**
 * Describes the message pg_query.TruncateStmt.
 * Use `create(TruncateStmtSchema)` to create a new message.
 */
export const TruncateStmtSchema: GenMessage<TruncateStmt, TruncateStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 187);

/**
 * @generated from message pg_query.CommentStmt
 */
export type CommentStmt = Message<"pg_query.CommentStmt"> & {
  /**
   * @generated from field: pg_query.ObjectType objtype = 1;
   */
  objtype: ObjectType;

  /**
   * @generated from field: pg_query.Node object = 2;
   */
  object?: Node;

  /**
   * @generated from field: string comment = 3;
   */
  comment: string;
};

/**
 * @generated from message pg_query.CommentStmt
 */
export type CommentStmtJson = {
  /**
   * @generated from field: pg_query.ObjectType objtype = 1;
   */
  objtype?: ObjectTypeJson;

  /**
   * @generated from field: pg_query.Node object = 2;
   */
  object?: NodeJson;

  /**
   * @generated from field: string comment = 3;
   */
  comment?: string;
};

/**
 * Describes the message pg_query.CommentStmt.
 * Use `create(CommentStmtSchema)` to create a new message.
 */
export const CommentStmtSchema: GenMessage<CommentStmt, CommentStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 188);

/**
 * @generated from message pg_query.SecLabelStmt
 */
export type SecLabelStmt = Message<"pg_query.SecLabelStmt"> & {
  /**
   * @generated from field: pg_query.ObjectType objtype = 1;
   */
  objtype: ObjectType;

  /**
   * @generated from field: pg_query.Node object = 2;
   */
  object?: Node;

  /**
   * @generated from field: string provider = 3;
   */
  provider: string;

  /**
   * @generated from field: string label = 4;
   */
  label: string;
};

/**
 * @generated from message pg_query.SecLabelStmt
 */
export type SecLabelStmtJson = {
  /**
   * @generated from field: pg_query.ObjectType objtype = 1;
   */
  objtype?: ObjectTypeJson;

  /**
   * @generated from field: pg_query.Node object = 2;
   */
  object?: NodeJson;

  /**
   * @generated from field: string provider = 3;
   */
  provider?: string;

  /**
   * @generated from field: string label = 4;
   */
  label?: string;
};

/**
 * Describes the message pg_query.SecLabelStmt.
 * Use `create(SecLabelStmtSchema)` to create a new message.
 */
export const SecLabelStmtSchema: GenMessage<SecLabelStmt, SecLabelStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 189);

/**
 * @generated from message pg_query.DeclareCursorStmt
 */
export type DeclareCursorStmt = Message<"pg_query.DeclareCursorStmt"> & {
  /**
   * @generated from field: string portalname = 1;
   */
  portalname: string;

  /**
   * @generated from field: int32 options = 2;
   */
  options: number;

  /**
   * @generated from field: pg_query.Node query = 3;
   */
  query?: Node;
};

/**
 * @generated from message pg_query.DeclareCursorStmt
 */
export type DeclareCursorStmtJson = {
  /**
   * @generated from field: string portalname = 1;
   */
  portalname?: string;

  /**
   * @generated from field: int32 options = 2;
   */
  options?: number;

  /**
   * @generated from field: pg_query.Node query = 3;
   */
  query?: NodeJson;
};

/**
 * Describes the message pg_query.DeclareCursorStmt.
 * Use `create(DeclareCursorStmtSchema)` to create a new message.
 */
export const DeclareCursorStmtSchema: GenMessage<DeclareCursorStmt, DeclareCursorStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 190);

/**
 * @generated from message pg_query.ClosePortalStmt
 */
export type ClosePortalStmt = Message<"pg_query.ClosePortalStmt"> & {
  /**
   * @generated from field: string portalname = 1;
   */
  portalname: string;
};

/**
 * @generated from message pg_query.ClosePortalStmt
 */
export type ClosePortalStmtJson = {
  /**
   * @generated from field: string portalname = 1;
   */
  portalname?: string;
};

/**
 * Describes the message pg_query.ClosePortalStmt.
 * Use `create(ClosePortalStmtSchema)` to create a new message.
 */
export const ClosePortalStmtSchema: GenMessage<ClosePortalStmt, ClosePortalStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 191);

/**
 * @generated from message pg_query.FetchStmt
 */
export type FetchStmt = Message<"pg_query.FetchStmt"> & {
  /**
   * @generated from field: pg_query.FetchDirection direction = 1;
   */
  direction: FetchDirection;

  /**
   * @generated from field: int64 how_many = 2;
   */
  howMany: bigint;

  /**
   * @generated from field: string portalname = 3;
   */
  portalname: string;

  /**
   * @generated from field: bool ismove = 4;
   */
  ismove: boolean;
};

/**
 * @generated from message pg_query.FetchStmt
 */
export type FetchStmtJson = {
  /**
   * @generated from field: pg_query.FetchDirection direction = 1;
   */
  direction?: FetchDirectionJson;

  /**
   * @generated from field: int64 how_many = 2;
   */
  howMany?: string;

  /**
   * @generated from field: string portalname = 3;
   */
  portalname?: string;

  /**
   * @generated from field: bool ismove = 4;
   */
  ismove?: boolean;
};

/**
 * Describes the message pg_query.FetchStmt.
 * Use `create(FetchStmtSchema)` to create a new message.
 */
export const FetchStmtSchema: GenMessage<FetchStmt, FetchStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 192);

/**
 * @generated from message pg_query.IndexStmt
 */
export type IndexStmt = Message<"pg_query.IndexStmt"> & {
  /**
   * @generated from field: string idxname = 1;
   */
  idxname: string;

  /**
   * @generated from field: pg_query.RangeVar relation = 2;
   */
  relation?: RangeVar;

  /**
   * @generated from field: string access_method = 3;
   */
  accessMethod: string;

  /**
   * @generated from field: string table_space = 4;
   */
  tableSpace: string;

  /**
   * @generated from field: repeated pg_query.Node index_params = 5;
   */
  indexParams: Node[];

  /**
   * @generated from field: repeated pg_query.Node index_including_params = 6;
   */
  indexIncludingParams: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 7;
   */
  options: Node[];

  /**
   * @generated from field: pg_query.Node where_clause = 8;
   */
  whereClause?: Node;

  /**
   * @generated from field: repeated pg_query.Node exclude_op_names = 9;
   */
  excludeOpNames: Node[];

  /**
   * @generated from field: string idxcomment = 10;
   */
  idxcomment: string;

  /**
   * @generated from field: uint32 index_oid = 11;
   */
  indexOid: number;

  /**
   * @generated from field: uint32 old_number = 12;
   */
  oldNumber: number;

  /**
   * @generated from field: uint32 old_create_subid = 13;
   */
  oldCreateSubid: number;

  /**
   * @generated from field: uint32 old_first_relfilelocator_subid = 14;
   */
  oldFirstRelfilelocatorSubid: number;

  /**
   * @generated from field: bool unique = 15;
   */
  unique: boolean;

  /**
   * @generated from field: bool nulls_not_distinct = 16 [json_name = "nulls_not_distinct"];
   */
  nullsNotDistinct: boolean;

  /**
   * @generated from field: bool primary = 17;
   */
  primary: boolean;

  /**
   * @generated from field: bool isconstraint = 18;
   */
  isconstraint: boolean;

  /**
   * @generated from field: bool deferrable = 19;
   */
  deferrable: boolean;

  /**
   * @generated from field: bool initdeferred = 20;
   */
  initdeferred: boolean;

  /**
   * @generated from field: bool transformed = 21;
   */
  transformed: boolean;

  /**
   * @generated from field: bool concurrent = 22;
   */
  concurrent: boolean;

  /**
   * @generated from field: bool if_not_exists = 23 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;

  /**
   * @generated from field: bool reset_default_tblspc = 24 [json_name = "reset_default_tblspc"];
   */
  resetDefaultTblspc: boolean;
};

/**
 * @generated from message pg_query.IndexStmt
 */
export type IndexStmtJson = {
  /**
   * @generated from field: string idxname = 1;
   */
  idxname?: string;

  /**
   * @generated from field: pg_query.RangeVar relation = 2;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: string access_method = 3;
   */
  accessMethod?: string;

  /**
   * @generated from field: string table_space = 4;
   */
  tableSpace?: string;

  /**
   * @generated from field: repeated pg_query.Node index_params = 5;
   */
  indexParams?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node index_including_params = 6;
   */
  indexIncludingParams?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node options = 7;
   */
  options?: NodeJson[];

  /**
   * @generated from field: pg_query.Node where_clause = 8;
   */
  whereClause?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node exclude_op_names = 9;
   */
  excludeOpNames?: NodeJson[];

  /**
   * @generated from field: string idxcomment = 10;
   */
  idxcomment?: string;

  /**
   * @generated from field: uint32 index_oid = 11;
   */
  indexOid?: number;

  /**
   * @generated from field: uint32 old_number = 12;
   */
  oldNumber?: number;

  /**
   * @generated from field: uint32 old_create_subid = 13;
   */
  oldCreateSubid?: number;

  /**
   * @generated from field: uint32 old_first_relfilelocator_subid = 14;
   */
  oldFirstRelfilelocatorSubid?: number;

  /**
   * @generated from field: bool unique = 15;
   */
  unique?: boolean;

  /**
   * @generated from field: bool nulls_not_distinct = 16 [json_name = "nulls_not_distinct"];
   */
  nulls_not_distinct?: boolean;

  /**
   * @generated from field: bool primary = 17;
   */
  primary?: boolean;

  /**
   * @generated from field: bool isconstraint = 18;
   */
  isconstraint?: boolean;

  /**
   * @generated from field: bool deferrable = 19;
   */
  deferrable?: boolean;

  /**
   * @generated from field: bool initdeferred = 20;
   */
  initdeferred?: boolean;

  /**
   * @generated from field: bool transformed = 21;
   */
  transformed?: boolean;

  /**
   * @generated from field: bool concurrent = 22;
   */
  concurrent?: boolean;

  /**
   * @generated from field: bool if_not_exists = 23 [json_name = "if_not_exists"];
   */
  if_not_exists?: boolean;

  /**
   * @generated from field: bool reset_default_tblspc = 24 [json_name = "reset_default_tblspc"];
   */
  reset_default_tblspc?: boolean;
};

/**
 * Describes the message pg_query.IndexStmt.
 * Use `create(IndexStmtSchema)` to create a new message.
 */
export const IndexStmtSchema: GenMessage<IndexStmt, IndexStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 193);

/**
 * @generated from message pg_query.CreateStatsStmt
 */
export type CreateStatsStmt = Message<"pg_query.CreateStatsStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node defnames = 1;
   */
  defnames: Node[];

  /**
   * @generated from field: repeated pg_query.Node stat_types = 2 [json_name = "stat_types"];
   */
  statTypes: Node[];

  /**
   * @generated from field: repeated pg_query.Node exprs = 3;
   */
  exprs: Node[];

  /**
   * @generated from field: repeated pg_query.Node relations = 4;
   */
  relations: Node[];

  /**
   * @generated from field: string stxcomment = 5;
   */
  stxcomment: string;

  /**
   * @generated from field: bool transformed = 6;
   */
  transformed: boolean;

  /**
   * @generated from field: bool if_not_exists = 7 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;
};

/**
 * @generated from message pg_query.CreateStatsStmt
 */
export type CreateStatsStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node defnames = 1;
   */
  defnames?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node stat_types = 2 [json_name = "stat_types"];
   */
  stat_types?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node exprs = 3;
   */
  exprs?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node relations = 4;
   */
  relations?: NodeJson[];

  /**
   * @generated from field: string stxcomment = 5;
   */
  stxcomment?: string;

  /**
   * @generated from field: bool transformed = 6;
   */
  transformed?: boolean;

  /**
   * @generated from field: bool if_not_exists = 7 [json_name = "if_not_exists"];
   */
  if_not_exists?: boolean;
};

/**
 * Describes the message pg_query.CreateStatsStmt.
 * Use `create(CreateStatsStmtSchema)` to create a new message.
 */
export const CreateStatsStmtSchema: GenMessage<CreateStatsStmt, CreateStatsStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 194);

/**
 * @generated from message pg_query.StatsElem
 */
export type StatsElem = Message<"pg_query.StatsElem"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: Node;
};

/**
 * @generated from message pg_query.StatsElem
 */
export type StatsElemJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: pg_query.Node expr = 2;
   */
  expr?: NodeJson;
};

/**
 * Describes the message pg_query.StatsElem.
 * Use `create(StatsElemSchema)` to create a new message.
 */
export const StatsElemSchema: GenMessage<StatsElem, StatsElemJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 195);

/**
 * @generated from message pg_query.AlterStatsStmt
 */
export type AlterStatsStmt = Message<"pg_query.AlterStatsStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node defnames = 1;
   */
  defnames: Node[];

  /**
   * @generated from field: int32 stxstattarget = 2;
   */
  stxstattarget: number;

  /**
   * @generated from field: bool missing_ok = 3 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * @generated from message pg_query.AlterStatsStmt
 */
export type AlterStatsStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node defnames = 1;
   */
  defnames?: NodeJson[];

  /**
   * @generated from field: int32 stxstattarget = 2;
   */
  stxstattarget?: number;

  /**
   * @generated from field: bool missing_ok = 3 [json_name = "missing_ok"];
   */
  missing_ok?: boolean;
};

/**
 * Describes the message pg_query.AlterStatsStmt.
 * Use `create(AlterStatsStmtSchema)` to create a new message.
 */
export const AlterStatsStmtSchema: GenMessage<AlterStatsStmt, AlterStatsStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 196);

/**
 * @generated from message pg_query.CreateFunctionStmt
 */
export type CreateFunctionStmt = Message<"pg_query.CreateFunctionStmt"> & {
  /**
   * @generated from field: bool is_procedure = 1 [json_name = "is_procedure"];
   */
  isProcedure: boolean;

  /**
   * @generated from field: bool replace = 2;
   */
  replace: boolean;

  /**
   * @generated from field: repeated pg_query.Node funcname = 3;
   */
  funcname: Node[];

  /**
   * @generated from field: repeated pg_query.Node parameters = 4;
   */
  parameters: Node[];

  /**
   * @generated from field: pg_query.TypeName return_type = 5;
   */
  returnType?: TypeName;

  /**
   * @generated from field: repeated pg_query.Node options = 6;
   */
  options: Node[];

  /**
   * @generated from field: pg_query.Node sql_body = 7 [json_name = "sql_body"];
   */
  sqlBody?: Node;
};

/**
 * @generated from message pg_query.CreateFunctionStmt
 */
export type CreateFunctionStmtJson = {
  /**
   * @generated from field: bool is_procedure = 1 [json_name = "is_procedure"];
   */
  is_procedure?: boolean;

  /**
   * @generated from field: bool replace = 2;
   */
  replace?: boolean;

  /**
   * @generated from field: repeated pg_query.Node funcname = 3;
   */
  funcname?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node parameters = 4;
   */
  parameters?: NodeJson[];

  /**
   * @generated from field: pg_query.TypeName return_type = 5;
   */
  returnType?: TypeNameJson;

  /**
   * @generated from field: repeated pg_query.Node options = 6;
   */
  options?: NodeJson[];

  /**
   * @generated from field: pg_query.Node sql_body = 7 [json_name = "sql_body"];
   */
  sql_body?: NodeJson;
};

/**
 * Describes the message pg_query.CreateFunctionStmt.
 * Use `create(CreateFunctionStmtSchema)` to create a new message.
 */
export const CreateFunctionStmtSchema: GenMessage<CreateFunctionStmt, CreateFunctionStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 197);

/**
 * @generated from message pg_query.FunctionParameter
 */
export type FunctionParameter = Message<"pg_query.FunctionParameter"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: pg_query.TypeName arg_type = 2;
   */
  argType?: TypeName;

  /**
   * @generated from field: pg_query.FunctionParameterMode mode = 3;
   */
  mode: FunctionParameterMode;

  /**
   * @generated from field: pg_query.Node defexpr = 4;
   */
  defexpr?: Node;
};

/**
 * @generated from message pg_query.FunctionParameter
 */
export type FunctionParameterJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: pg_query.TypeName arg_type = 2;
   */
  argType?: TypeNameJson;

  /**
   * @generated from field: pg_query.FunctionParameterMode mode = 3;
   */
  mode?: FunctionParameterModeJson;

  /**
   * @generated from field: pg_query.Node defexpr = 4;
   */
  defexpr?: NodeJson;
};

/**
 * Describes the message pg_query.FunctionParameter.
 * Use `create(FunctionParameterSchema)` to create a new message.
 */
export const FunctionParameterSchema: GenMessage<FunctionParameter, FunctionParameterJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 198);

/**
 * @generated from message pg_query.AlterFunctionStmt
 */
export type AlterFunctionStmt = Message<"pg_query.AlterFunctionStmt"> & {
  /**
   * @generated from field: pg_query.ObjectType objtype = 1;
   */
  objtype: ObjectType;

  /**
   * @generated from field: pg_query.ObjectWithArgs func = 2;
   */
  func?: ObjectWithArgs;

  /**
   * @generated from field: repeated pg_query.Node actions = 3;
   */
  actions: Node[];
};

/**
 * @generated from message pg_query.AlterFunctionStmt
 */
export type AlterFunctionStmtJson = {
  /**
   * @generated from field: pg_query.ObjectType objtype = 1;
   */
  objtype?: ObjectTypeJson;

  /**
   * @generated from field: pg_query.ObjectWithArgs func = 2;
   */
  func?: ObjectWithArgsJson;

  /**
   * @generated from field: repeated pg_query.Node actions = 3;
   */
  actions?: NodeJson[];
};

/**
 * Describes the message pg_query.AlterFunctionStmt.
 * Use `create(AlterFunctionStmtSchema)` to create a new message.
 */
export const AlterFunctionStmtSchema: GenMessage<AlterFunctionStmt, AlterFunctionStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 199);

/**
 * @generated from message pg_query.DoStmt
 */
export type DoStmt = Message<"pg_query.DoStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node args = 1;
   */
  args: Node[];
};

/**
 * @generated from message pg_query.DoStmt
 */
export type DoStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node args = 1;
   */
  args?: NodeJson[];
};

/**
 * Describes the message pg_query.DoStmt.
 * Use `create(DoStmtSchema)` to create a new message.
 */
export const DoStmtSchema: GenMessage<DoStmt, DoStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 200);

/**
 * @generated from message pg_query.InlineCodeBlock
 */
export type InlineCodeBlock = Message<"pg_query.InlineCodeBlock"> & {
  /**
   * @generated from field: string source_text = 1 [json_name = "source_text"];
   */
  sourceText: string;

  /**
   * @generated from field: uint32 lang_oid = 2;
   */
  langOid: number;

  /**
   * @generated from field: bool lang_is_trusted = 3;
   */
  langIsTrusted: boolean;

  /**
   * @generated from field: bool atomic = 4;
   */
  atomic: boolean;
};

/**
 * @generated from message pg_query.InlineCodeBlock
 */
export type InlineCodeBlockJson = {
  /**
   * @generated from field: string source_text = 1 [json_name = "source_text"];
   */
  source_text?: string;

  /**
   * @generated from field: uint32 lang_oid = 2;
   */
  langOid?: number;

  /**
   * @generated from field: bool lang_is_trusted = 3;
   */
  langIsTrusted?: boolean;

  /**
   * @generated from field: bool atomic = 4;
   */
  atomic?: boolean;
};

/**
 * Describes the message pg_query.InlineCodeBlock.
 * Use `create(InlineCodeBlockSchema)` to create a new message.
 */
export const InlineCodeBlockSchema: GenMessage<InlineCodeBlock, InlineCodeBlockJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 201);

/**
 * @generated from message pg_query.CallStmt
 */
export type CallStmt = Message<"pg_query.CallStmt"> & {
  /**
   * @generated from field: pg_query.FuncCall funccall = 1;
   */
  funccall?: FuncCall;

  /**
   * @generated from field: pg_query.FuncExpr funcexpr = 2;
   */
  funcexpr?: FuncExpr;

  /**
   * @generated from field: repeated pg_query.Node outargs = 3;
   */
  outargs: Node[];
};

/**
 * @generated from message pg_query.CallStmt
 */
export type CallStmtJson = {
  /**
   * @generated from field: pg_query.FuncCall funccall = 1;
   */
  funccall?: FuncCallJson;

  /**
   * @generated from field: pg_query.FuncExpr funcexpr = 2;
   */
  funcexpr?: FuncExprJson;

  /**
   * @generated from field: repeated pg_query.Node outargs = 3;
   */
  outargs?: NodeJson[];
};

/**
 * Describes the message pg_query.CallStmt.
 * Use `create(CallStmtSchema)` to create a new message.
 */
export const CallStmtSchema: GenMessage<CallStmt, CallStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 202);

/**
 * @generated from message pg_query.CallContext
 */
export type CallContext = Message<"pg_query.CallContext"> & {
  /**
   * @generated from field: bool atomic = 1;
   */
  atomic: boolean;
};

/**
 * @generated from message pg_query.CallContext
 */
export type CallContextJson = {
  /**
   * @generated from field: bool atomic = 1;
   */
  atomic?: boolean;
};

/**
 * Describes the message pg_query.CallContext.
 * Use `create(CallContextSchema)` to create a new message.
 */
export const CallContextSchema: GenMessage<CallContext, CallContextJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 203);

/**
 * @generated from message pg_query.RenameStmt
 */
export type RenameStmt = Message<"pg_query.RenameStmt"> & {
  /**
   * @generated from field: pg_query.ObjectType rename_type = 1;
   */
  renameType: ObjectType;

  /**
   * @generated from field: pg_query.ObjectType relation_type = 2;
   */
  relationType: ObjectType;

  /**
   * @generated from field: pg_query.RangeVar relation = 3;
   */
  relation?: RangeVar;

  /**
   * @generated from field: pg_query.Node object = 4;
   */
  object?: Node;

  /**
   * @generated from field: string subname = 5;
   */
  subname: string;

  /**
   * @generated from field: string newname = 6;
   */
  newname: string;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 7;
   */
  behavior: DropBehavior;

  /**
   * @generated from field: bool missing_ok = 8 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * @generated from message pg_query.RenameStmt
 */
export type RenameStmtJson = {
  /**
   * @generated from field: pg_query.ObjectType rename_type = 1;
   */
  renameType?: ObjectTypeJson;

  /**
   * @generated from field: pg_query.ObjectType relation_type = 2;
   */
  relationType?: ObjectTypeJson;

  /**
   * @generated from field: pg_query.RangeVar relation = 3;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: pg_query.Node object = 4;
   */
  object?: NodeJson;

  /**
   * @generated from field: string subname = 5;
   */
  subname?: string;

  /**
   * @generated from field: string newname = 6;
   */
  newname?: string;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 7;
   */
  behavior?: DropBehaviorJson;

  /**
   * @generated from field: bool missing_ok = 8 [json_name = "missing_ok"];
   */
  missing_ok?: boolean;
};

/**
 * Describes the message pg_query.RenameStmt.
 * Use `create(RenameStmtSchema)` to create a new message.
 */
export const RenameStmtSchema: GenMessage<RenameStmt, RenameStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 204);

/**
 * @generated from message pg_query.AlterObjectDependsStmt
 */
export type AlterObjectDependsStmt = Message<"pg_query.AlterObjectDependsStmt"> & {
  /**
   * @generated from field: pg_query.ObjectType object_type = 1;
   */
  objectType: ObjectType;

  /**
   * @generated from field: pg_query.RangeVar relation = 2;
   */
  relation?: RangeVar;

  /**
   * @generated from field: pg_query.Node object = 3;
   */
  object?: Node;

  /**
   * @generated from field: pg_query.String extname = 4;
   */
  extname?: String;

  /**
   * @generated from field: bool remove = 5;
   */
  remove: boolean;
};

/**
 * @generated from message pg_query.AlterObjectDependsStmt
 */
export type AlterObjectDependsStmtJson = {
  /**
   * @generated from field: pg_query.ObjectType object_type = 1;
   */
  objectType?: ObjectTypeJson;

  /**
   * @generated from field: pg_query.RangeVar relation = 2;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: pg_query.Node object = 3;
   */
  object?: NodeJson;

  /**
   * @generated from field: pg_query.String extname = 4;
   */
  extname?: StringJson;

  /**
   * @generated from field: bool remove = 5;
   */
  remove?: boolean;
};

/**
 * Describes the message pg_query.AlterObjectDependsStmt.
 * Use `create(AlterObjectDependsStmtSchema)` to create a new message.
 */
export const AlterObjectDependsStmtSchema: GenMessage<AlterObjectDependsStmt, AlterObjectDependsStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 205);

/**
 * @generated from message pg_query.AlterObjectSchemaStmt
 */
export type AlterObjectSchemaStmt = Message<"pg_query.AlterObjectSchemaStmt"> & {
  /**
   * @generated from field: pg_query.ObjectType object_type = 1;
   */
  objectType: ObjectType;

  /**
   * @generated from field: pg_query.RangeVar relation = 2;
   */
  relation?: RangeVar;

  /**
   * @generated from field: pg_query.Node object = 3;
   */
  object?: Node;

  /**
   * @generated from field: string newschema = 4;
   */
  newschema: string;

  /**
   * @generated from field: bool missing_ok = 5 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * @generated from message pg_query.AlterObjectSchemaStmt
 */
export type AlterObjectSchemaStmtJson = {
  /**
   * @generated from field: pg_query.ObjectType object_type = 1;
   */
  objectType?: ObjectTypeJson;

  /**
   * @generated from field: pg_query.RangeVar relation = 2;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: pg_query.Node object = 3;
   */
  object?: NodeJson;

  /**
   * @generated from field: string newschema = 4;
   */
  newschema?: string;

  /**
   * @generated from field: bool missing_ok = 5 [json_name = "missing_ok"];
   */
  missing_ok?: boolean;
};

/**
 * Describes the message pg_query.AlterObjectSchemaStmt.
 * Use `create(AlterObjectSchemaStmtSchema)` to create a new message.
 */
export const AlterObjectSchemaStmtSchema: GenMessage<AlterObjectSchemaStmt, AlterObjectSchemaStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 206);

/**
 * @generated from message pg_query.AlterOwnerStmt
 */
export type AlterOwnerStmt = Message<"pg_query.AlterOwnerStmt"> & {
  /**
   * @generated from field: pg_query.ObjectType object_type = 1;
   */
  objectType: ObjectType;

  /**
   * @generated from field: pg_query.RangeVar relation = 2;
   */
  relation?: RangeVar;

  /**
   * @generated from field: pg_query.Node object = 3;
   */
  object?: Node;

  /**
   * @generated from field: pg_query.RoleSpec newowner = 4;
   */
  newowner?: RoleSpec;
};

/**
 * @generated from message pg_query.AlterOwnerStmt
 */
export type AlterOwnerStmtJson = {
  /**
   * @generated from field: pg_query.ObjectType object_type = 1;
   */
  objectType?: ObjectTypeJson;

  /**
   * @generated from field: pg_query.RangeVar relation = 2;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: pg_query.Node object = 3;
   */
  object?: NodeJson;

  /**
   * @generated from field: pg_query.RoleSpec newowner = 4;
   */
  newowner?: RoleSpecJson;
};

/**
 * Describes the message pg_query.AlterOwnerStmt.
 * Use `create(AlterOwnerStmtSchema)` to create a new message.
 */
export const AlterOwnerStmtSchema: GenMessage<AlterOwnerStmt, AlterOwnerStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 207);

/**
 * @generated from message pg_query.AlterOperatorStmt
 */
export type AlterOperatorStmt = Message<"pg_query.AlterOperatorStmt"> & {
  /**
   * @generated from field: pg_query.ObjectWithArgs opername = 1;
   */
  opername?: ObjectWithArgs;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.AlterOperatorStmt
 */
export type AlterOperatorStmtJson = {
  /**
   * @generated from field: pg_query.ObjectWithArgs opername = 1;
   */
  opername?: ObjectWithArgsJson;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.AlterOperatorStmt.
 * Use `create(AlterOperatorStmtSchema)` to create a new message.
 */
export const AlterOperatorStmtSchema: GenMessage<AlterOperatorStmt, AlterOperatorStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 208);

/**
 * @generated from message pg_query.AlterTypeStmt
 */
export type AlterTypeStmt = Message<"pg_query.AlterTypeStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node type_name = 1;
   */
  typeName: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.AlterTypeStmt
 */
export type AlterTypeStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node type_name = 1;
   */
  typeName?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.AlterTypeStmt.
 * Use `create(AlterTypeStmtSchema)` to create a new message.
 */
export const AlterTypeStmtSchema: GenMessage<AlterTypeStmt, AlterTypeStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 209);

/**
 * @generated from message pg_query.RuleStmt
 */
export type RuleStmt = Message<"pg_query.RuleStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: string rulename = 2;
   */
  rulename: string;

  /**
   * @generated from field: pg_query.Node where_clause = 3;
   */
  whereClause?: Node;

  /**
   * @generated from field: pg_query.CmdType event = 4;
   */
  event: CmdType;

  /**
   * @generated from field: bool instead = 5;
   */
  instead: boolean;

  /**
   * @generated from field: repeated pg_query.Node actions = 6;
   */
  actions: Node[];

  /**
   * @generated from field: bool replace = 7;
   */
  replace: boolean;
};

/**
 * @generated from message pg_query.RuleStmt
 */
export type RuleStmtJson = {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: string rulename = 2;
   */
  rulename?: string;

  /**
   * @generated from field: pg_query.Node where_clause = 3;
   */
  whereClause?: NodeJson;

  /**
   * @generated from field: pg_query.CmdType event = 4;
   */
  event?: CmdTypeJson;

  /**
   * @generated from field: bool instead = 5;
   */
  instead?: boolean;

  /**
   * @generated from field: repeated pg_query.Node actions = 6;
   */
  actions?: NodeJson[];

  /**
   * @generated from field: bool replace = 7;
   */
  replace?: boolean;
};

/**
 * Describes the message pg_query.RuleStmt.
 * Use `create(RuleStmtSchema)` to create a new message.
 */
export const RuleStmtSchema: GenMessage<RuleStmt, RuleStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 210);

/**
 * @generated from message pg_query.NotifyStmt
 */
export type NotifyStmt = Message<"pg_query.NotifyStmt"> & {
  /**
   * @generated from field: string conditionname = 1;
   */
  conditionname: string;

  /**
   * @generated from field: string payload = 2;
   */
  payload: string;
};

/**
 * @generated from message pg_query.NotifyStmt
 */
export type NotifyStmtJson = {
  /**
   * @generated from field: string conditionname = 1;
   */
  conditionname?: string;

  /**
   * @generated from field: string payload = 2;
   */
  payload?: string;
};

/**
 * Describes the message pg_query.NotifyStmt.
 * Use `create(NotifyStmtSchema)` to create a new message.
 */
export const NotifyStmtSchema: GenMessage<NotifyStmt, NotifyStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 211);

/**
 * @generated from message pg_query.ListenStmt
 */
export type ListenStmt = Message<"pg_query.ListenStmt"> & {
  /**
   * @generated from field: string conditionname = 1;
   */
  conditionname: string;
};

/**
 * @generated from message pg_query.ListenStmt
 */
export type ListenStmtJson = {
  /**
   * @generated from field: string conditionname = 1;
   */
  conditionname?: string;
};

/**
 * Describes the message pg_query.ListenStmt.
 * Use `create(ListenStmtSchema)` to create a new message.
 */
export const ListenStmtSchema: GenMessage<ListenStmt, ListenStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 212);

/**
 * @generated from message pg_query.UnlistenStmt
 */
export type UnlistenStmt = Message<"pg_query.UnlistenStmt"> & {
  /**
   * @generated from field: string conditionname = 1;
   */
  conditionname: string;
};

/**
 * @generated from message pg_query.UnlistenStmt
 */
export type UnlistenStmtJson = {
  /**
   * @generated from field: string conditionname = 1;
   */
  conditionname?: string;
};

/**
 * Describes the message pg_query.UnlistenStmt.
 * Use `create(UnlistenStmtSchema)` to create a new message.
 */
export const UnlistenStmtSchema: GenMessage<UnlistenStmt, UnlistenStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 213);

/**
 * @generated from message pg_query.TransactionStmt
 */
export type TransactionStmt = Message<"pg_query.TransactionStmt"> & {
  /**
   * @generated from field: pg_query.TransactionStmtKind kind = 1;
   */
  kind: TransactionStmtKind;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];

  /**
   * @generated from field: string savepoint_name = 3 [json_name = "savepoint_name"];
   */
  savepointName: string;

  /**
   * @generated from field: string gid = 4;
   */
  gid: string;

  /**
   * @generated from field: bool chain = 5;
   */
  chain: boolean;
};

/**
 * @generated from message pg_query.TransactionStmt
 */
export type TransactionStmtJson = {
  /**
   * @generated from field: pg_query.TransactionStmtKind kind = 1;
   */
  kind?: TransactionStmtKindJson;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options?: NodeJson[];

  /**
   * @generated from field: string savepoint_name = 3 [json_name = "savepoint_name"];
   */
  savepoint_name?: string;

  /**
   * @generated from field: string gid = 4;
   */
  gid?: string;

  /**
   * @generated from field: bool chain = 5;
   */
  chain?: boolean;
};

/**
 * Describes the message pg_query.TransactionStmt.
 * Use `create(TransactionStmtSchema)` to create a new message.
 */
export const TransactionStmtSchema: GenMessage<TransactionStmt, TransactionStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 214);

/**
 * @generated from message pg_query.CompositeTypeStmt
 */
export type CompositeTypeStmt = Message<"pg_query.CompositeTypeStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar typevar = 1;
   */
  typevar?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node coldeflist = 2;
   */
  coldeflist: Node[];
};

/**
 * @generated from message pg_query.CompositeTypeStmt
 */
export type CompositeTypeStmtJson = {
  /**
   * @generated from field: pg_query.RangeVar typevar = 1;
   */
  typevar?: RangeVarJson;

  /**
   * @generated from field: repeated pg_query.Node coldeflist = 2;
   */
  coldeflist?: NodeJson[];
};

/**
 * Describes the message pg_query.CompositeTypeStmt.
 * Use `create(CompositeTypeStmtSchema)` to create a new message.
 */
export const CompositeTypeStmtSchema: GenMessage<CompositeTypeStmt, CompositeTypeStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 215);

/**
 * @generated from message pg_query.CreateEnumStmt
 */
export type CreateEnumStmt = Message<"pg_query.CreateEnumStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node type_name = 1;
   */
  typeName: Node[];

  /**
   * @generated from field: repeated pg_query.Node vals = 2;
   */
  vals: Node[];
};

/**
 * @generated from message pg_query.CreateEnumStmt
 */
export type CreateEnumStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node type_name = 1;
   */
  typeName?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node vals = 2;
   */
  vals?: NodeJson[];
};

/**
 * Describes the message pg_query.CreateEnumStmt.
 * Use `create(CreateEnumStmtSchema)` to create a new message.
 */
export const CreateEnumStmtSchema: GenMessage<CreateEnumStmt, CreateEnumStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 216);

/**
 * @generated from message pg_query.CreateRangeStmt
 */
export type CreateRangeStmt = Message<"pg_query.CreateRangeStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node type_name = 1;
   */
  typeName: Node[];

  /**
   * @generated from field: repeated pg_query.Node params = 2;
   */
  params: Node[];
};

/**
 * @generated from message pg_query.CreateRangeStmt
 */
export type CreateRangeStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node type_name = 1;
   */
  typeName?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node params = 2;
   */
  params?: NodeJson[];
};

/**
 * Describes the message pg_query.CreateRangeStmt.
 * Use `create(CreateRangeStmtSchema)` to create a new message.
 */
export const CreateRangeStmtSchema: GenMessage<CreateRangeStmt, CreateRangeStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 217);

/**
 * @generated from message pg_query.AlterEnumStmt
 */
export type AlterEnumStmt = Message<"pg_query.AlterEnumStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node type_name = 1;
   */
  typeName: Node[];

  /**
   * @generated from field: string old_val = 2;
   */
  oldVal: string;

  /**
   * @generated from field: string new_val = 3;
   */
  newVal: string;

  /**
   * @generated from field: string new_val_neighbor = 4;
   */
  newValNeighbor: string;

  /**
   * @generated from field: bool new_val_is_after = 5;
   */
  newValIsAfter: boolean;

  /**
   * @generated from field: bool skip_if_new_val_exists = 6;
   */
  skipIfNewValExists: boolean;
};

/**
 * @generated from message pg_query.AlterEnumStmt
 */
export type AlterEnumStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node type_name = 1;
   */
  typeName?: NodeJson[];

  /**
   * @generated from field: string old_val = 2;
   */
  oldVal?: string;

  /**
   * @generated from field: string new_val = 3;
   */
  newVal?: string;

  /**
   * @generated from field: string new_val_neighbor = 4;
   */
  newValNeighbor?: string;

  /**
   * @generated from field: bool new_val_is_after = 5;
   */
  newValIsAfter?: boolean;

  /**
   * @generated from field: bool skip_if_new_val_exists = 6;
   */
  skipIfNewValExists?: boolean;
};

/**
 * Describes the message pg_query.AlterEnumStmt.
 * Use `create(AlterEnumStmtSchema)` to create a new message.
 */
export const AlterEnumStmtSchema: GenMessage<AlterEnumStmt, AlterEnumStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 218);

/**
 * @generated from message pg_query.ViewStmt
 */
export type ViewStmt = Message<"pg_query.ViewStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar view = 1;
   */
  view?: RangeVar;

  /**
   * @generated from field: repeated pg_query.Node aliases = 2;
   */
  aliases: Node[];

  /**
   * @generated from field: pg_query.Node query = 3;
   */
  query?: Node;

  /**
   * @generated from field: bool replace = 4;
   */
  replace: boolean;

  /**
   * @generated from field: repeated pg_query.Node options = 5;
   */
  options: Node[];

  /**
   * @generated from field: pg_query.ViewCheckOption with_check_option = 6;
   */
  withCheckOption: ViewCheckOption;
};

/**
 * @generated from message pg_query.ViewStmt
 */
export type ViewStmtJson = {
  /**
   * @generated from field: pg_query.RangeVar view = 1;
   */
  view?: RangeVarJson;

  /**
   * @generated from field: repeated pg_query.Node aliases = 2;
   */
  aliases?: NodeJson[];

  /**
   * @generated from field: pg_query.Node query = 3;
   */
  query?: NodeJson;

  /**
   * @generated from field: bool replace = 4;
   */
  replace?: boolean;

  /**
   * @generated from field: repeated pg_query.Node options = 5;
   */
  options?: NodeJson[];

  /**
   * @generated from field: pg_query.ViewCheckOption with_check_option = 6;
   */
  withCheckOption?: ViewCheckOptionJson;
};

/**
 * Describes the message pg_query.ViewStmt.
 * Use `create(ViewStmtSchema)` to create a new message.
 */
export const ViewStmtSchema: GenMessage<ViewStmt, ViewStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 219);

/**
 * @generated from message pg_query.LoadStmt
 */
export type LoadStmt = Message<"pg_query.LoadStmt"> & {
  /**
   * @generated from field: string filename = 1;
   */
  filename: string;
};

/**
 * @generated from message pg_query.LoadStmt
 */
export type LoadStmtJson = {
  /**
   * @generated from field: string filename = 1;
   */
  filename?: string;
};

/**
 * Describes the message pg_query.LoadStmt.
 * Use `create(LoadStmtSchema)` to create a new message.
 */
export const LoadStmtSchema: GenMessage<LoadStmt, LoadStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 220);

/**
 * @generated from message pg_query.CreatedbStmt
 */
export type CreatedbStmt = Message<"pg_query.CreatedbStmt"> & {
  /**
   * @generated from field: string dbname = 1;
   */
  dbname: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.CreatedbStmt
 */
export type CreatedbStmtJson = {
  /**
   * @generated from field: string dbname = 1;
   */
  dbname?: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.CreatedbStmt.
 * Use `create(CreatedbStmtSchema)` to create a new message.
 */
export const CreatedbStmtSchema: GenMessage<CreatedbStmt, CreatedbStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 221);

/**
 * @generated from message pg_query.AlterDatabaseStmt
 */
export type AlterDatabaseStmt = Message<"pg_query.AlterDatabaseStmt"> & {
  /**
   * @generated from field: string dbname = 1;
   */
  dbname: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.AlterDatabaseStmt
 */
export type AlterDatabaseStmtJson = {
  /**
   * @generated from field: string dbname = 1;
   */
  dbname?: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.AlterDatabaseStmt.
 * Use `create(AlterDatabaseStmtSchema)` to create a new message.
 */
export const AlterDatabaseStmtSchema: GenMessage<AlterDatabaseStmt, AlterDatabaseStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 222);

/**
 * @generated from message pg_query.AlterDatabaseRefreshCollStmt
 */
export type AlterDatabaseRefreshCollStmt = Message<"pg_query.AlterDatabaseRefreshCollStmt"> & {
  /**
   * @generated from field: string dbname = 1;
   */
  dbname: string;
};

/**
 * @generated from message pg_query.AlterDatabaseRefreshCollStmt
 */
export type AlterDatabaseRefreshCollStmtJson = {
  /**
   * @generated from field: string dbname = 1;
   */
  dbname?: string;
};

/**
 * Describes the message pg_query.AlterDatabaseRefreshCollStmt.
 * Use `create(AlterDatabaseRefreshCollStmtSchema)` to create a new message.
 */
export const AlterDatabaseRefreshCollStmtSchema: GenMessage<AlterDatabaseRefreshCollStmt, AlterDatabaseRefreshCollStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 223);

/**
 * @generated from message pg_query.AlterDatabaseSetStmt
 */
export type AlterDatabaseSetStmt = Message<"pg_query.AlterDatabaseSetStmt"> & {
  /**
   * @generated from field: string dbname = 1;
   */
  dbname: string;

  /**
   * @generated from field: pg_query.VariableSetStmt setstmt = 2;
   */
  setstmt?: VariableSetStmt;
};

/**
 * @generated from message pg_query.AlterDatabaseSetStmt
 */
export type AlterDatabaseSetStmtJson = {
  /**
   * @generated from field: string dbname = 1;
   */
  dbname?: string;

  /**
   * @generated from field: pg_query.VariableSetStmt setstmt = 2;
   */
  setstmt?: VariableSetStmtJson;
};

/**
 * Describes the message pg_query.AlterDatabaseSetStmt.
 * Use `create(AlterDatabaseSetStmtSchema)` to create a new message.
 */
export const AlterDatabaseSetStmtSchema: GenMessage<AlterDatabaseSetStmt, AlterDatabaseSetStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 224);

/**
 * @generated from message pg_query.DropdbStmt
 */
export type DropdbStmt = Message<"pg_query.DropdbStmt"> & {
  /**
   * @generated from field: string dbname = 1;
   */
  dbname: string;

  /**
   * @generated from field: bool missing_ok = 2 [json_name = "missing_ok"];
   */
  missingOk: boolean;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.DropdbStmt
 */
export type DropdbStmtJson = {
  /**
   * @generated from field: string dbname = 1;
   */
  dbname?: string;

  /**
   * @generated from field: bool missing_ok = 2 [json_name = "missing_ok"];
   */
  missing_ok?: boolean;

  /**
   * @generated from field: repeated pg_query.Node options = 3;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.DropdbStmt.
 * Use `create(DropdbStmtSchema)` to create a new message.
 */
export const DropdbStmtSchema: GenMessage<DropdbStmt, DropdbStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 225);

/**
 * @generated from message pg_query.AlterSystemStmt
 */
export type AlterSystemStmt = Message<"pg_query.AlterSystemStmt"> & {
  /**
   * @generated from field: pg_query.VariableSetStmt setstmt = 1;
   */
  setstmt?: VariableSetStmt;
};

/**
 * @generated from message pg_query.AlterSystemStmt
 */
export type AlterSystemStmtJson = {
  /**
   * @generated from field: pg_query.VariableSetStmt setstmt = 1;
   */
  setstmt?: VariableSetStmtJson;
};

/**
 * Describes the message pg_query.AlterSystemStmt.
 * Use `create(AlterSystemStmtSchema)` to create a new message.
 */
export const AlterSystemStmtSchema: GenMessage<AlterSystemStmt, AlterSystemStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 226);

/**
 * @generated from message pg_query.ClusterStmt
 */
export type ClusterStmt = Message<"pg_query.ClusterStmt"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: string indexname = 2;
   */
  indexname: string;

  /**
   * @generated from field: repeated pg_query.Node params = 3;
   */
  params: Node[];
};

/**
 * @generated from message pg_query.ClusterStmt
 */
export type ClusterStmtJson = {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: string indexname = 2;
   */
  indexname?: string;

  /**
   * @generated from field: repeated pg_query.Node params = 3;
   */
  params?: NodeJson[];
};

/**
 * Describes the message pg_query.ClusterStmt.
 * Use `create(ClusterStmtSchema)` to create a new message.
 */
export const ClusterStmtSchema: GenMessage<ClusterStmt, ClusterStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 227);

/**
 * @generated from message pg_query.VacuumStmt
 */
export type VacuumStmt = Message<"pg_query.VacuumStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node options = 1;
   */
  options: Node[];

  /**
   * @generated from field: repeated pg_query.Node rels = 2;
   */
  rels: Node[];

  /**
   * @generated from field: bool is_vacuumcmd = 3 [json_name = "is_vacuumcmd"];
   */
  isVacuumcmd: boolean;
};

/**
 * @generated from message pg_query.VacuumStmt
 */
export type VacuumStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node options = 1;
   */
  options?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node rels = 2;
   */
  rels?: NodeJson[];

  /**
   * @generated from field: bool is_vacuumcmd = 3 [json_name = "is_vacuumcmd"];
   */
  is_vacuumcmd?: boolean;
};

/**
 * Describes the message pg_query.VacuumStmt.
 * Use `create(VacuumStmtSchema)` to create a new message.
 */
export const VacuumStmtSchema: GenMessage<VacuumStmt, VacuumStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 228);

/**
 * @generated from message pg_query.VacuumRelation
 */
export type VacuumRelation = Message<"pg_query.VacuumRelation"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: uint32 oid = 2;
   */
  oid: number;

  /**
   * @generated from field: repeated pg_query.Node va_cols = 3 [json_name = "va_cols"];
   */
  vaCols: Node[];
};

/**
 * @generated from message pg_query.VacuumRelation
 */
export type VacuumRelationJson = {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: uint32 oid = 2;
   */
  oid?: number;

  /**
   * @generated from field: repeated pg_query.Node va_cols = 3 [json_name = "va_cols"];
   */
  va_cols?: NodeJson[];
};

/**
 * Describes the message pg_query.VacuumRelation.
 * Use `create(VacuumRelationSchema)` to create a new message.
 */
export const VacuumRelationSchema: GenMessage<VacuumRelation, VacuumRelationJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 229);

/**
 * @generated from message pg_query.ExplainStmt
 */
export type ExplainStmt = Message<"pg_query.ExplainStmt"> & {
  /**
   * @generated from field: pg_query.Node query = 1;
   */
  query?: Node;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.ExplainStmt
 */
export type ExplainStmtJson = {
  /**
   * @generated from field: pg_query.Node query = 1;
   */
  query?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.ExplainStmt.
 * Use `create(ExplainStmtSchema)` to create a new message.
 */
export const ExplainStmtSchema: GenMessage<ExplainStmt, ExplainStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 230);

/**
 * @generated from message pg_query.CreateTableAsStmt
 */
export type CreateTableAsStmt = Message<"pg_query.CreateTableAsStmt"> & {
  /**
   * @generated from field: pg_query.Node query = 1;
   */
  query?: Node;

  /**
   * @generated from field: pg_query.IntoClause into = 2;
   */
  into?: IntoClause;

  /**
   * @generated from field: pg_query.ObjectType objtype = 3;
   */
  objtype: ObjectType;

  /**
   * @generated from field: bool is_select_into = 4 [json_name = "is_select_into"];
   */
  isSelectInto: boolean;

  /**
   * @generated from field: bool if_not_exists = 5 [json_name = "if_not_exists"];
   */
  ifNotExists: boolean;
};

/**
 * @generated from message pg_query.CreateTableAsStmt
 */
export type CreateTableAsStmtJson = {
  /**
   * @generated from field: pg_query.Node query = 1;
   */
  query?: NodeJson;

  /**
   * @generated from field: pg_query.IntoClause into = 2;
   */
  into?: IntoClauseJson;

  /**
   * @generated from field: pg_query.ObjectType objtype = 3;
   */
  objtype?: ObjectTypeJson;

  /**
   * @generated from field: bool is_select_into = 4 [json_name = "is_select_into"];
   */
  is_select_into?: boolean;

  /**
   * @generated from field: bool if_not_exists = 5 [json_name = "if_not_exists"];
   */
  if_not_exists?: boolean;
};

/**
 * Describes the message pg_query.CreateTableAsStmt.
 * Use `create(CreateTableAsStmtSchema)` to create a new message.
 */
export const CreateTableAsStmtSchema: GenMessage<CreateTableAsStmt, CreateTableAsStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 231);

/**
 * @generated from message pg_query.RefreshMatViewStmt
 */
export type RefreshMatViewStmt = Message<"pg_query.RefreshMatViewStmt"> & {
  /**
   * @generated from field: bool concurrent = 1;
   */
  concurrent: boolean;

  /**
   * @generated from field: bool skip_data = 2;
   */
  skipData: boolean;

  /**
   * @generated from field: pg_query.RangeVar relation = 3;
   */
  relation?: RangeVar;
};

/**
 * @generated from message pg_query.RefreshMatViewStmt
 */
export type RefreshMatViewStmtJson = {
  /**
   * @generated from field: bool concurrent = 1;
   */
  concurrent?: boolean;

  /**
   * @generated from field: bool skip_data = 2;
   */
  skipData?: boolean;

  /**
   * @generated from field: pg_query.RangeVar relation = 3;
   */
  relation?: RangeVarJson;
};

/**
 * Describes the message pg_query.RefreshMatViewStmt.
 * Use `create(RefreshMatViewStmtSchema)` to create a new message.
 */
export const RefreshMatViewStmtSchema: GenMessage<RefreshMatViewStmt, RefreshMatViewStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 232);

/**
 * @generated from message pg_query.CheckPointStmt
 */
export type CheckPointStmt = Message<"pg_query.CheckPointStmt"> & {
};

/**
 * @generated from message pg_query.CheckPointStmt
 */
export type CheckPointStmtJson = {
};

/**
 * Describes the message pg_query.CheckPointStmt.
 * Use `create(CheckPointStmtSchema)` to create a new message.
 */
export const CheckPointStmtSchema: GenMessage<CheckPointStmt, CheckPointStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 233);

/**
 * @generated from message pg_query.DiscardStmt
 */
export type DiscardStmt = Message<"pg_query.DiscardStmt"> & {
  /**
   * @generated from field: pg_query.DiscardMode target = 1;
   */
  target: DiscardMode;
};

/**
 * @generated from message pg_query.DiscardStmt
 */
export type DiscardStmtJson = {
  /**
   * @generated from field: pg_query.DiscardMode target = 1;
   */
  target?: DiscardModeJson;
};

/**
 * Describes the message pg_query.DiscardStmt.
 * Use `create(DiscardStmtSchema)` to create a new message.
 */
export const DiscardStmtSchema: GenMessage<DiscardStmt, DiscardStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 234);

/**
 * @generated from message pg_query.LockStmt
 */
export type LockStmt = Message<"pg_query.LockStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node relations = 1;
   */
  relations: Node[];

  /**
   * @generated from field: int32 mode = 2;
   */
  mode: number;

  /**
   * @generated from field: bool nowait = 3;
   */
  nowait: boolean;
};

/**
 * @generated from message pg_query.LockStmt
 */
export type LockStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node relations = 1;
   */
  relations?: NodeJson[];

  /**
   * @generated from field: int32 mode = 2;
   */
  mode?: number;

  /**
   * @generated from field: bool nowait = 3;
   */
  nowait?: boolean;
};

/**
 * Describes the message pg_query.LockStmt.
 * Use `create(LockStmtSchema)` to create a new message.
 */
export const LockStmtSchema: GenMessage<LockStmt, LockStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 235);

/**
 * @generated from message pg_query.ConstraintsSetStmt
 */
export type ConstraintsSetStmt = Message<"pg_query.ConstraintsSetStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node constraints = 1;
   */
  constraints: Node[];

  /**
   * @generated from field: bool deferred = 2;
   */
  deferred: boolean;
};

/**
 * @generated from message pg_query.ConstraintsSetStmt
 */
export type ConstraintsSetStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node constraints = 1;
   */
  constraints?: NodeJson[];

  /**
   * @generated from field: bool deferred = 2;
   */
  deferred?: boolean;
};

/**
 * Describes the message pg_query.ConstraintsSetStmt.
 * Use `create(ConstraintsSetStmtSchema)` to create a new message.
 */
export const ConstraintsSetStmtSchema: GenMessage<ConstraintsSetStmt, ConstraintsSetStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 236);

/**
 * @generated from message pg_query.ReindexStmt
 */
export type ReindexStmt = Message<"pg_query.ReindexStmt"> & {
  /**
   * @generated from field: pg_query.ReindexObjectType kind = 1;
   */
  kind: ReindexObjectType;

  /**
   * @generated from field: pg_query.RangeVar relation = 2;
   */
  relation?: RangeVar;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: repeated pg_query.Node params = 4;
   */
  params: Node[];
};

/**
 * @generated from message pg_query.ReindexStmt
 */
export type ReindexStmtJson = {
  /**
   * @generated from field: pg_query.ReindexObjectType kind = 1;
   */
  kind?: ReindexObjectTypeJson;

  /**
   * @generated from field: pg_query.RangeVar relation = 2;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: string name = 3;
   */
  name?: string;

  /**
   * @generated from field: repeated pg_query.Node params = 4;
   */
  params?: NodeJson[];
};

/**
 * Describes the message pg_query.ReindexStmt.
 * Use `create(ReindexStmtSchema)` to create a new message.
 */
export const ReindexStmtSchema: GenMessage<ReindexStmt, ReindexStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 237);

/**
 * @generated from message pg_query.CreateConversionStmt
 */
export type CreateConversionStmt = Message<"pg_query.CreateConversionStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node conversion_name = 1 [json_name = "conversion_name"];
   */
  conversionName: Node[];

  /**
   * @generated from field: string for_encoding_name = 2 [json_name = "for_encoding_name"];
   */
  forEncodingName: string;

  /**
   * @generated from field: string to_encoding_name = 3 [json_name = "to_encoding_name"];
   */
  toEncodingName: string;

  /**
   * @generated from field: repeated pg_query.Node func_name = 4 [json_name = "func_name"];
   */
  funcName: Node[];

  /**
   * @generated from field: bool def = 5;
   */
  def: boolean;
};

/**
 * @generated from message pg_query.CreateConversionStmt
 */
export type CreateConversionStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node conversion_name = 1 [json_name = "conversion_name"];
   */
  conversion_name?: NodeJson[];

  /**
   * @generated from field: string for_encoding_name = 2 [json_name = "for_encoding_name"];
   */
  for_encoding_name?: string;

  /**
   * @generated from field: string to_encoding_name = 3 [json_name = "to_encoding_name"];
   */
  to_encoding_name?: string;

  /**
   * @generated from field: repeated pg_query.Node func_name = 4 [json_name = "func_name"];
   */
  func_name?: NodeJson[];

  /**
   * @generated from field: bool def = 5;
   */
  def?: boolean;
};

/**
 * Describes the message pg_query.CreateConversionStmt.
 * Use `create(CreateConversionStmtSchema)` to create a new message.
 */
export const CreateConversionStmtSchema: GenMessage<CreateConversionStmt, CreateConversionStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 238);

/**
 * @generated from message pg_query.CreateCastStmt
 */
export type CreateCastStmt = Message<"pg_query.CreateCastStmt"> & {
  /**
   * @generated from field: pg_query.TypeName sourcetype = 1;
   */
  sourcetype?: TypeName;

  /**
   * @generated from field: pg_query.TypeName targettype = 2;
   */
  targettype?: TypeName;

  /**
   * @generated from field: pg_query.ObjectWithArgs func = 3;
   */
  func?: ObjectWithArgs;

  /**
   * @generated from field: pg_query.CoercionContext context = 4;
   */
  context: CoercionContext;

  /**
   * @generated from field: bool inout = 5;
   */
  inout: boolean;
};

/**
 * @generated from message pg_query.CreateCastStmt
 */
export type CreateCastStmtJson = {
  /**
   * @generated from field: pg_query.TypeName sourcetype = 1;
   */
  sourcetype?: TypeNameJson;

  /**
   * @generated from field: pg_query.TypeName targettype = 2;
   */
  targettype?: TypeNameJson;

  /**
   * @generated from field: pg_query.ObjectWithArgs func = 3;
   */
  func?: ObjectWithArgsJson;

  /**
   * @generated from field: pg_query.CoercionContext context = 4;
   */
  context?: CoercionContextJson;

  /**
   * @generated from field: bool inout = 5;
   */
  inout?: boolean;
};

/**
 * Describes the message pg_query.CreateCastStmt.
 * Use `create(CreateCastStmtSchema)` to create a new message.
 */
export const CreateCastStmtSchema: GenMessage<CreateCastStmt, CreateCastStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 239);

/**
 * @generated from message pg_query.CreateTransformStmt
 */
export type CreateTransformStmt = Message<"pg_query.CreateTransformStmt"> & {
  /**
   * @generated from field: bool replace = 1;
   */
  replace: boolean;

  /**
   * @generated from field: pg_query.TypeName type_name = 2 [json_name = "type_name"];
   */
  typeName?: TypeName;

  /**
   * @generated from field: string lang = 3;
   */
  lang: string;

  /**
   * @generated from field: pg_query.ObjectWithArgs fromsql = 4;
   */
  fromsql?: ObjectWithArgs;

  /**
   * @generated from field: pg_query.ObjectWithArgs tosql = 5;
   */
  tosql?: ObjectWithArgs;
};

/**
 * @generated from message pg_query.CreateTransformStmt
 */
export type CreateTransformStmtJson = {
  /**
   * @generated from field: bool replace = 1;
   */
  replace?: boolean;

  /**
   * @generated from field: pg_query.TypeName type_name = 2 [json_name = "type_name"];
   */
  type_name?: TypeNameJson;

  /**
   * @generated from field: string lang = 3;
   */
  lang?: string;

  /**
   * @generated from field: pg_query.ObjectWithArgs fromsql = 4;
   */
  fromsql?: ObjectWithArgsJson;

  /**
   * @generated from field: pg_query.ObjectWithArgs tosql = 5;
   */
  tosql?: ObjectWithArgsJson;
};

/**
 * Describes the message pg_query.CreateTransformStmt.
 * Use `create(CreateTransformStmtSchema)` to create a new message.
 */
export const CreateTransformStmtSchema: GenMessage<CreateTransformStmt, CreateTransformStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 240);

/**
 * @generated from message pg_query.PrepareStmt
 */
export type PrepareStmt = Message<"pg_query.PrepareStmt"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated pg_query.Node argtypes = 2;
   */
  argtypes: Node[];

  /**
   * @generated from field: pg_query.Node query = 3;
   */
  query?: Node;
};

/**
 * @generated from message pg_query.PrepareStmt
 */
export type PrepareStmtJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: repeated pg_query.Node argtypes = 2;
   */
  argtypes?: NodeJson[];

  /**
   * @generated from field: pg_query.Node query = 3;
   */
  query?: NodeJson;
};

/**
 * Describes the message pg_query.PrepareStmt.
 * Use `create(PrepareStmtSchema)` to create a new message.
 */
export const PrepareStmtSchema: GenMessage<PrepareStmt, PrepareStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 241);

/**
 * @generated from message pg_query.ExecuteStmt
 */
export type ExecuteStmt = Message<"pg_query.ExecuteStmt"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated pg_query.Node params = 2;
   */
  params: Node[];
};

/**
 * @generated from message pg_query.ExecuteStmt
 */
export type ExecuteStmtJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: repeated pg_query.Node params = 2;
   */
  params?: NodeJson[];
};

/**
 * Describes the message pg_query.ExecuteStmt.
 * Use `create(ExecuteStmtSchema)` to create a new message.
 */
export const ExecuteStmtSchema: GenMessage<ExecuteStmt, ExecuteStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 242);

/**
 * @generated from message pg_query.DeallocateStmt
 */
export type DeallocateStmt = Message<"pg_query.DeallocateStmt"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * @generated from message pg_query.DeallocateStmt
 */
export type DeallocateStmtJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;
};

/**
 * Describes the message pg_query.DeallocateStmt.
 * Use `create(DeallocateStmtSchema)` to create a new message.
 */
export const DeallocateStmtSchema: GenMessage<DeallocateStmt, DeallocateStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 243);

/**
 * @generated from message pg_query.DropOwnedStmt
 */
export type DropOwnedStmt = Message<"pg_query.DropOwnedStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node roles = 1;
   */
  roles: Node[];

  /**
   * @generated from field: pg_query.DropBehavior behavior = 2;
   */
  behavior: DropBehavior;
};

/**
 * @generated from message pg_query.DropOwnedStmt
 */
export type DropOwnedStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node roles = 1;
   */
  roles?: NodeJson[];

  /**
   * @generated from field: pg_query.DropBehavior behavior = 2;
   */
  behavior?: DropBehaviorJson;
};

/**
 * Describes the message pg_query.DropOwnedStmt.
 * Use `create(DropOwnedStmtSchema)` to create a new message.
 */
export const DropOwnedStmtSchema: GenMessage<DropOwnedStmt, DropOwnedStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 244);

/**
 * @generated from message pg_query.ReassignOwnedStmt
 */
export type ReassignOwnedStmt = Message<"pg_query.ReassignOwnedStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node roles = 1;
   */
  roles: Node[];

  /**
   * @generated from field: pg_query.RoleSpec newrole = 2;
   */
  newrole?: RoleSpec;
};

/**
 * @generated from message pg_query.ReassignOwnedStmt
 */
export type ReassignOwnedStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node roles = 1;
   */
  roles?: NodeJson[];

  /**
   * @generated from field: pg_query.RoleSpec newrole = 2;
   */
  newrole?: RoleSpecJson;
};

/**
 * Describes the message pg_query.ReassignOwnedStmt.
 * Use `create(ReassignOwnedStmtSchema)` to create a new message.
 */
export const ReassignOwnedStmtSchema: GenMessage<ReassignOwnedStmt, ReassignOwnedStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 245);

/**
 * @generated from message pg_query.AlterTSDictionaryStmt
 */
export type AlterTSDictionaryStmt = Message<"pg_query.AlterTSDictionaryStmt"> & {
  /**
   * @generated from field: repeated pg_query.Node dictname = 1;
   */
  dictname: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.AlterTSDictionaryStmt
 */
export type AlterTSDictionaryStmtJson = {
  /**
   * @generated from field: repeated pg_query.Node dictname = 1;
   */
  dictname?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.AlterTSDictionaryStmt.
 * Use `create(AlterTSDictionaryStmtSchema)` to create a new message.
 */
export const AlterTSDictionaryStmtSchema: GenMessage<AlterTSDictionaryStmt, AlterTSDictionaryStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 246);

/**
 * @generated from message pg_query.AlterTSConfigurationStmt
 */
export type AlterTSConfigurationStmt = Message<"pg_query.AlterTSConfigurationStmt"> & {
  /**
   * @generated from field: pg_query.AlterTSConfigType kind = 1;
   */
  kind: AlterTSConfigType;

  /**
   * @generated from field: repeated pg_query.Node cfgname = 2;
   */
  cfgname: Node[];

  /**
   * @generated from field: repeated pg_query.Node tokentype = 3;
   */
  tokentype: Node[];

  /**
   * @generated from field: repeated pg_query.Node dicts = 4;
   */
  dicts: Node[];

  /**
   * @generated from field: bool override = 5;
   */
  override: boolean;

  /**
   * @generated from field: bool replace = 6;
   */
  replace: boolean;

  /**
   * @generated from field: bool missing_ok = 7 [json_name = "missing_ok"];
   */
  missingOk: boolean;
};

/**
 * @generated from message pg_query.AlterTSConfigurationStmt
 */
export type AlterTSConfigurationStmtJson = {
  /**
   * @generated from field: pg_query.AlterTSConfigType kind = 1;
   */
  kind?: AlterTSConfigTypeJson;

  /**
   * @generated from field: repeated pg_query.Node cfgname = 2;
   */
  cfgname?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node tokentype = 3;
   */
  tokentype?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node dicts = 4;
   */
  dicts?: NodeJson[];

  /**
   * @generated from field: bool override = 5;
   */
  override?: boolean;

  /**
   * @generated from field: bool replace = 6;
   */
  replace?: boolean;

  /**
   * @generated from field: bool missing_ok = 7 [json_name = "missing_ok"];
   */
  missing_ok?: boolean;
};

/**
 * Describes the message pg_query.AlterTSConfigurationStmt.
 * Use `create(AlterTSConfigurationStmtSchema)` to create a new message.
 */
export const AlterTSConfigurationStmtSchema: GenMessage<AlterTSConfigurationStmt, AlterTSConfigurationStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 247);

/**
 * @generated from message pg_query.PublicationTable
 */
export type PublicationTable = Message<"pg_query.PublicationTable"> & {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVar;

  /**
   * @generated from field: pg_query.Node where_clause = 2;
   */
  whereClause?: Node;

  /**
   * @generated from field: repeated pg_query.Node columns = 3;
   */
  columns: Node[];
};

/**
 * @generated from message pg_query.PublicationTable
 */
export type PublicationTableJson = {
  /**
   * @generated from field: pg_query.RangeVar relation = 1;
   */
  relation?: RangeVarJson;

  /**
   * @generated from field: pg_query.Node where_clause = 2;
   */
  whereClause?: NodeJson;

  /**
   * @generated from field: repeated pg_query.Node columns = 3;
   */
  columns?: NodeJson[];
};

/**
 * Describes the message pg_query.PublicationTable.
 * Use `create(PublicationTableSchema)` to create a new message.
 */
export const PublicationTableSchema: GenMessage<PublicationTable, PublicationTableJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 248);

/**
 * @generated from message pg_query.PublicationObjSpec
 */
export type PublicationObjSpec = Message<"pg_query.PublicationObjSpec"> & {
  /**
   * @generated from field: pg_query.PublicationObjSpecType pubobjtype = 1;
   */
  pubobjtype: PublicationObjSpecType;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: pg_query.PublicationTable pubtable = 3;
   */
  pubtable?: PublicationTable;

  /**
   * @generated from field: int32 location = 4;
   */
  location: number;
};

/**
 * @generated from message pg_query.PublicationObjSpec
 */
export type PublicationObjSpecJson = {
  /**
   * @generated from field: pg_query.PublicationObjSpecType pubobjtype = 1;
   */
  pubobjtype?: PublicationObjSpecTypeJson;

  /**
   * @generated from field: string name = 2;
   */
  name?: string;

  /**
   * @generated from field: pg_query.PublicationTable pubtable = 3;
   */
  pubtable?: PublicationTableJson;

  /**
   * @generated from field: int32 location = 4;
   */
  location?: number;
};

/**
 * Describes the message pg_query.PublicationObjSpec.
 * Use `create(PublicationObjSpecSchema)` to create a new message.
 */
export const PublicationObjSpecSchema: GenMessage<PublicationObjSpec, PublicationObjSpecJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 249);

/**
 * @generated from message pg_query.CreatePublicationStmt
 */
export type CreatePublicationStmt = Message<"pg_query.CreatePublicationStmt"> & {
  /**
   * @generated from field: string pubname = 1;
   */
  pubname: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];

  /**
   * @generated from field: repeated pg_query.Node pubobjects = 3;
   */
  pubobjects: Node[];

  /**
   * @generated from field: bool for_all_tables = 4 [json_name = "for_all_tables"];
   */
  forAllTables: boolean;
};

/**
 * @generated from message pg_query.CreatePublicationStmt
 */
export type CreatePublicationStmtJson = {
  /**
   * @generated from field: string pubname = 1;
   */
  pubname?: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node pubobjects = 3;
   */
  pubobjects?: NodeJson[];

  /**
   * @generated from field: bool for_all_tables = 4 [json_name = "for_all_tables"];
   */
  for_all_tables?: boolean;
};

/**
 * Describes the message pg_query.CreatePublicationStmt.
 * Use `create(CreatePublicationStmtSchema)` to create a new message.
 */
export const CreatePublicationStmtSchema: GenMessage<CreatePublicationStmt, CreatePublicationStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 250);

/**
 * @generated from message pg_query.AlterPublicationStmt
 */
export type AlterPublicationStmt = Message<"pg_query.AlterPublicationStmt"> & {
  /**
   * @generated from field: string pubname = 1;
   */
  pubname: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options: Node[];

  /**
   * @generated from field: repeated pg_query.Node pubobjects = 3;
   */
  pubobjects: Node[];

  /**
   * @generated from field: bool for_all_tables = 4 [json_name = "for_all_tables"];
   */
  forAllTables: boolean;

  /**
   * @generated from field: pg_query.AlterPublicationAction action = 5;
   */
  action: AlterPublicationAction;
};

/**
 * @generated from message pg_query.AlterPublicationStmt
 */
export type AlterPublicationStmtJson = {
  /**
   * @generated from field: string pubname = 1;
   */
  pubname?: string;

  /**
   * @generated from field: repeated pg_query.Node options = 2;
   */
  options?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node pubobjects = 3;
   */
  pubobjects?: NodeJson[];

  /**
   * @generated from field: bool for_all_tables = 4 [json_name = "for_all_tables"];
   */
  for_all_tables?: boolean;

  /**
   * @generated from field: pg_query.AlterPublicationAction action = 5;
   */
  action?: AlterPublicationActionJson;
};

/**
 * Describes the message pg_query.AlterPublicationStmt.
 * Use `create(AlterPublicationStmtSchema)` to create a new message.
 */
export const AlterPublicationStmtSchema: GenMessage<AlterPublicationStmt, AlterPublicationStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 251);

/**
 * @generated from message pg_query.CreateSubscriptionStmt
 */
export type CreateSubscriptionStmt = Message<"pg_query.CreateSubscriptionStmt"> & {
  /**
   * @generated from field: string subname = 1;
   */
  subname: string;

  /**
   * @generated from field: string conninfo = 2;
   */
  conninfo: string;

  /**
   * @generated from field: repeated pg_query.Node publication = 3;
   */
  publication: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 4;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.CreateSubscriptionStmt
 */
export type CreateSubscriptionStmtJson = {
  /**
   * @generated from field: string subname = 1;
   */
  subname?: string;

  /**
   * @generated from field: string conninfo = 2;
   */
  conninfo?: string;

  /**
   * @generated from field: repeated pg_query.Node publication = 3;
   */
  publication?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node options = 4;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.CreateSubscriptionStmt.
 * Use `create(CreateSubscriptionStmtSchema)` to create a new message.
 */
export const CreateSubscriptionStmtSchema: GenMessage<CreateSubscriptionStmt, CreateSubscriptionStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 252);

/**
 * @generated from message pg_query.AlterSubscriptionStmt
 */
export type AlterSubscriptionStmt = Message<"pg_query.AlterSubscriptionStmt"> & {
  /**
   * @generated from field: pg_query.AlterSubscriptionType kind = 1;
   */
  kind: AlterSubscriptionType;

  /**
   * @generated from field: string subname = 2;
   */
  subname: string;

  /**
   * @generated from field: string conninfo = 3;
   */
  conninfo: string;

  /**
   * @generated from field: repeated pg_query.Node publication = 4;
   */
  publication: Node[];

  /**
   * @generated from field: repeated pg_query.Node options = 5;
   */
  options: Node[];
};

/**
 * @generated from message pg_query.AlterSubscriptionStmt
 */
export type AlterSubscriptionStmtJson = {
  /**
   * @generated from field: pg_query.AlterSubscriptionType kind = 1;
   */
  kind?: AlterSubscriptionTypeJson;

  /**
   * @generated from field: string subname = 2;
   */
  subname?: string;

  /**
   * @generated from field: string conninfo = 3;
   */
  conninfo?: string;

  /**
   * @generated from field: repeated pg_query.Node publication = 4;
   */
  publication?: NodeJson[];

  /**
   * @generated from field: repeated pg_query.Node options = 5;
   */
  options?: NodeJson[];
};

/**
 * Describes the message pg_query.AlterSubscriptionStmt.
 * Use `create(AlterSubscriptionStmtSchema)` to create a new message.
 */
export const AlterSubscriptionStmtSchema: GenMessage<AlterSubscriptionStmt, AlterSubscriptionStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 253);

/**
 * @generated from message pg_query.DropSubscriptionStmt
 */
export type DropSubscriptionStmt = Message<"pg_query.DropSubscriptionStmt"> & {
  /**
   * @generated from field: string subname = 1;
   */
  subname: string;

  /**
   * @generated from field: bool missing_ok = 2 [json_name = "missing_ok"];
   */
  missingOk: boolean;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 3;
   */
  behavior: DropBehavior;
};

/**
 * @generated from message pg_query.DropSubscriptionStmt
 */
export type DropSubscriptionStmtJson = {
  /**
   * @generated from field: string subname = 1;
   */
  subname?: string;

  /**
   * @generated from field: bool missing_ok = 2 [json_name = "missing_ok"];
   */
  missing_ok?: boolean;

  /**
   * @generated from field: pg_query.DropBehavior behavior = 3;
   */
  behavior?: DropBehaviorJson;
};

/**
 * Describes the message pg_query.DropSubscriptionStmt.
 * Use `create(DropSubscriptionStmtSchema)` to create a new message.
 */
export const DropSubscriptionStmtSchema: GenMessage<DropSubscriptionStmt, DropSubscriptionStmtJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 254);

/**
 * @generated from message pg_query.ScanToken
 */
export type ScanToken = Message<"pg_query.ScanToken"> & {
  /**
   * @generated from field: int32 start = 1;
   */
  start: number;

  /**
   * @generated from field: int32 end = 2;
   */
  end: number;

  /**
   * @generated from field: pg_query.Token token = 4;
   */
  token: Token;

  /**
   * @generated from field: pg_query.KeywordKind keyword_kind = 5;
   */
  keywordKind: KeywordKind;
};

/**
 * @generated from message pg_query.ScanToken
 */
export type ScanTokenJson = {
  /**
   * @generated from field: int32 start = 1;
   */
  start?: number;

  /**
   * @generated from field: int32 end = 2;
   */
  end?: number;

  /**
   * @generated from field: pg_query.Token token = 4;
   */
  token?: TokenJson;

  /**
   * @generated from field: pg_query.KeywordKind keyword_kind = 5;
   */
  keywordKind?: KeywordKindJson;
};

/**
 * Describes the message pg_query.ScanToken.
 * Use `create(ScanTokenSchema)` to create a new message.
 */
export const ScanTokenSchema: GenMessage<ScanToken, ScanTokenJson> = /*@__PURE__*/
  messageDesc(file_pg_query, 255);

/**
 * @generated from enum pg_query.OverridingKind
 */
export enum OverridingKind {
  /**
   * @generated from enum value: OVERRIDING_KIND_UNDEFINED = 0;
   */
  OVERRIDING_KIND_UNDEFINED = 0,

  /**
   * @generated from enum value: OVERRIDING_NOT_SET = 1;
   */
  OVERRIDING_NOT_SET = 1,

  /**
   * @generated from enum value: OVERRIDING_USER_VALUE = 2;
   */
  OVERRIDING_USER_VALUE = 2,

  /**
   * @generated from enum value: OVERRIDING_SYSTEM_VALUE = 3;
   */
  OVERRIDING_SYSTEM_VALUE = 3,
}

/**
 * @generated from enum pg_query.OverridingKind
 */
export type OverridingKindJson = "OVERRIDING_KIND_UNDEFINED" | "OVERRIDING_NOT_SET" | "OVERRIDING_USER_VALUE" | "OVERRIDING_SYSTEM_VALUE";

/**
 * Describes the enum pg_query.OverridingKind.
 */
export const OverridingKindSchema: GenEnum<OverridingKind, OverridingKindJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 0);

/**
 * @generated from enum pg_query.QuerySource
 */
export enum QuerySource {
  /**
   * @generated from enum value: QUERY_SOURCE_UNDEFINED = 0;
   */
  QUERY_SOURCE_UNDEFINED = 0,

  /**
   * @generated from enum value: QSRC_ORIGINAL = 1;
   */
  QSRC_ORIGINAL = 1,

  /**
   * @generated from enum value: QSRC_PARSER = 2;
   */
  QSRC_PARSER = 2,

  /**
   * @generated from enum value: QSRC_INSTEAD_RULE = 3;
   */
  QSRC_INSTEAD_RULE = 3,

  /**
   * @generated from enum value: QSRC_QUAL_INSTEAD_RULE = 4;
   */
  QSRC_QUAL_INSTEAD_RULE = 4,

  /**
   * @generated from enum value: QSRC_NON_INSTEAD_RULE = 5;
   */
  QSRC_NON_INSTEAD_RULE = 5,
}

/**
 * @generated from enum pg_query.QuerySource
 */
export type QuerySourceJson = "QUERY_SOURCE_UNDEFINED" | "QSRC_ORIGINAL" | "QSRC_PARSER" | "QSRC_INSTEAD_RULE" | "QSRC_QUAL_INSTEAD_RULE" | "QSRC_NON_INSTEAD_RULE";

/**
 * Describes the enum pg_query.QuerySource.
 */
export const QuerySourceSchema: GenEnum<QuerySource, QuerySourceJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 1);

/**
 * @generated from enum pg_query.SortByDir
 */
export enum SortByDir {
  /**
   * @generated from enum value: SORT_BY_DIR_UNDEFINED = 0;
   */
  SORT_BY_DIR_UNDEFINED = 0,

  /**
   * @generated from enum value: SORTBY_DEFAULT = 1;
   */
  SORTBY_DEFAULT = 1,

  /**
   * @generated from enum value: SORTBY_ASC = 2;
   */
  SORTBY_ASC = 2,

  /**
   * @generated from enum value: SORTBY_DESC = 3;
   */
  SORTBY_DESC = 3,

  /**
   * @generated from enum value: SORTBY_USING = 4;
   */
  SORTBY_USING = 4,
}

/**
 * @generated from enum pg_query.SortByDir
 */
export type SortByDirJson = "SORT_BY_DIR_UNDEFINED" | "SORTBY_DEFAULT" | "SORTBY_ASC" | "SORTBY_DESC" | "SORTBY_USING";

/**
 * Describes the enum pg_query.SortByDir.
 */
export const SortByDirSchema: GenEnum<SortByDir, SortByDirJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 2);

/**
 * @generated from enum pg_query.SortByNulls
 */
export enum SortByNulls {
  /**
   * @generated from enum value: SORT_BY_NULLS_UNDEFINED = 0;
   */
  SORT_BY_NULLS_UNDEFINED = 0,

  /**
   * @generated from enum value: SORTBY_NULLS_DEFAULT = 1;
   */
  SORTBY_NULLS_DEFAULT = 1,

  /**
   * @generated from enum value: SORTBY_NULLS_FIRST = 2;
   */
  SORTBY_NULLS_FIRST = 2,

  /**
   * @generated from enum value: SORTBY_NULLS_LAST = 3;
   */
  SORTBY_NULLS_LAST = 3,
}

/**
 * @generated from enum pg_query.SortByNulls
 */
export type SortByNullsJson = "SORT_BY_NULLS_UNDEFINED" | "SORTBY_NULLS_DEFAULT" | "SORTBY_NULLS_FIRST" | "SORTBY_NULLS_LAST";

/**
 * Describes the enum pg_query.SortByNulls.
 */
export const SortByNullsSchema: GenEnum<SortByNulls, SortByNullsJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 3);

/**
 * @generated from enum pg_query.SetQuantifier
 */
export enum SetQuantifier {
  /**
   * @generated from enum value: SET_QUANTIFIER_UNDEFINED = 0;
   */
  UNDEFINED = 0,

  /**
   * @generated from enum value: SET_QUANTIFIER_DEFAULT = 1;
   */
  DEFAULT = 1,

  /**
   * @generated from enum value: SET_QUANTIFIER_ALL = 2;
   */
  ALL = 2,

  /**
   * @generated from enum value: SET_QUANTIFIER_DISTINCT = 3;
   */
  DISTINCT = 3,
}

/**
 * @generated from enum pg_query.SetQuantifier
 */
export type SetQuantifierJson = "SET_QUANTIFIER_UNDEFINED" | "SET_QUANTIFIER_DEFAULT" | "SET_QUANTIFIER_ALL" | "SET_QUANTIFIER_DISTINCT";

/**
 * Describes the enum pg_query.SetQuantifier.
 */
export const SetQuantifierSchema: GenEnum<SetQuantifier, SetQuantifierJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 4);

/**
 * @generated from enum pg_query.A_Expr_Kind
 */
export enum A_Expr_Kind {
  /**
   * @generated from enum value: A_EXPR_KIND_UNDEFINED = 0;
   */
  A_EXPR_KIND_UNDEFINED = 0,

  /**
   * @generated from enum value: AEXPR_OP = 1;
   */
  AEXPR_OP = 1,

  /**
   * @generated from enum value: AEXPR_OP_ANY = 2;
   */
  AEXPR_OP_ANY = 2,

  /**
   * @generated from enum value: AEXPR_OP_ALL = 3;
   */
  AEXPR_OP_ALL = 3,

  /**
   * @generated from enum value: AEXPR_DISTINCT = 4;
   */
  AEXPR_DISTINCT = 4,

  /**
   * @generated from enum value: AEXPR_NOT_DISTINCT = 5;
   */
  AEXPR_NOT_DISTINCT = 5,

  /**
   * @generated from enum value: AEXPR_NULLIF = 6;
   */
  AEXPR_NULLIF = 6,

  /**
   * @generated from enum value: AEXPR_IN = 7;
   */
  AEXPR_IN = 7,

  /**
   * @generated from enum value: AEXPR_LIKE = 8;
   */
  AEXPR_LIKE = 8,

  /**
   * @generated from enum value: AEXPR_ILIKE = 9;
   */
  AEXPR_ILIKE = 9,

  /**
   * @generated from enum value: AEXPR_SIMILAR = 10;
   */
  AEXPR_SIMILAR = 10,

  /**
   * @generated from enum value: AEXPR_BETWEEN = 11;
   */
  AEXPR_BETWEEN = 11,

  /**
   * @generated from enum value: AEXPR_NOT_BETWEEN = 12;
   */
  AEXPR_NOT_BETWEEN = 12,

  /**
   * @generated from enum value: AEXPR_BETWEEN_SYM = 13;
   */
  AEXPR_BETWEEN_SYM = 13,

  /**
   * @generated from enum value: AEXPR_NOT_BETWEEN_SYM = 14;
   */
  AEXPR_NOT_BETWEEN_SYM = 14,
}

/**
 * @generated from enum pg_query.A_Expr_Kind
 */
export type A_Expr_KindJson = "A_EXPR_KIND_UNDEFINED" | "AEXPR_OP" | "AEXPR_OP_ANY" | "AEXPR_OP_ALL" | "AEXPR_DISTINCT" | "AEXPR_NOT_DISTINCT" | "AEXPR_NULLIF" | "AEXPR_IN" | "AEXPR_LIKE" | "AEXPR_ILIKE" | "AEXPR_SIMILAR" | "AEXPR_BETWEEN" | "AEXPR_NOT_BETWEEN" | "AEXPR_BETWEEN_SYM" | "AEXPR_NOT_BETWEEN_SYM";

/**
 * Describes the enum pg_query.A_Expr_Kind.
 */
export const A_Expr_KindSchema: GenEnum<A_Expr_Kind, A_Expr_KindJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 5);

/**
 * @generated from enum pg_query.RoleSpecType
 */
export enum RoleSpecType {
  /**
   * @generated from enum value: ROLE_SPEC_TYPE_UNDEFINED = 0;
   */
  ROLE_SPEC_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: ROLESPEC_CSTRING = 1;
   */
  ROLESPEC_CSTRING = 1,

  /**
   * @generated from enum value: ROLESPEC_CURRENT_ROLE = 2;
   */
  ROLESPEC_CURRENT_ROLE = 2,

  /**
   * @generated from enum value: ROLESPEC_CURRENT_USER = 3;
   */
  ROLESPEC_CURRENT_USER = 3,

  /**
   * @generated from enum value: ROLESPEC_SESSION_USER = 4;
   */
  ROLESPEC_SESSION_USER = 4,

  /**
   * @generated from enum value: ROLESPEC_PUBLIC = 5;
   */
  ROLESPEC_PUBLIC = 5,
}

/**
 * @generated from enum pg_query.RoleSpecType
 */
export type RoleSpecTypeJson = "ROLE_SPEC_TYPE_UNDEFINED" | "ROLESPEC_CSTRING" | "ROLESPEC_CURRENT_ROLE" | "ROLESPEC_CURRENT_USER" | "ROLESPEC_SESSION_USER" | "ROLESPEC_PUBLIC";

/**
 * Describes the enum pg_query.RoleSpecType.
 */
export const RoleSpecTypeSchema: GenEnum<RoleSpecType, RoleSpecTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 6);

/**
 * @generated from enum pg_query.TableLikeOption
 */
export enum TableLikeOption {
  /**
   * @generated from enum value: TABLE_LIKE_OPTION_UNDEFINED = 0;
   */
  TABLE_LIKE_OPTION_UNDEFINED = 0,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_COMMENTS = 1;
   */
  CREATE_TABLE_LIKE_COMMENTS = 1,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_COMPRESSION = 2;
   */
  CREATE_TABLE_LIKE_COMPRESSION = 2,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_CONSTRAINTS = 3;
   */
  CREATE_TABLE_LIKE_CONSTRAINTS = 3,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_DEFAULTS = 4;
   */
  CREATE_TABLE_LIKE_DEFAULTS = 4,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_GENERATED = 5;
   */
  CREATE_TABLE_LIKE_GENERATED = 5,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_IDENTITY = 6;
   */
  CREATE_TABLE_LIKE_IDENTITY = 6,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_INDEXES = 7;
   */
  CREATE_TABLE_LIKE_INDEXES = 7,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_STATISTICS = 8;
   */
  CREATE_TABLE_LIKE_STATISTICS = 8,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_STORAGE = 9;
   */
  CREATE_TABLE_LIKE_STORAGE = 9,

  /**
   * @generated from enum value: CREATE_TABLE_LIKE_ALL = 10;
   */
  CREATE_TABLE_LIKE_ALL = 10,
}

/**
 * @generated from enum pg_query.TableLikeOption
 */
export type TableLikeOptionJson = "TABLE_LIKE_OPTION_UNDEFINED" | "CREATE_TABLE_LIKE_COMMENTS" | "CREATE_TABLE_LIKE_COMPRESSION" | "CREATE_TABLE_LIKE_CONSTRAINTS" | "CREATE_TABLE_LIKE_DEFAULTS" | "CREATE_TABLE_LIKE_GENERATED" | "CREATE_TABLE_LIKE_IDENTITY" | "CREATE_TABLE_LIKE_INDEXES" | "CREATE_TABLE_LIKE_STATISTICS" | "CREATE_TABLE_LIKE_STORAGE" | "CREATE_TABLE_LIKE_ALL";

/**
 * Describes the enum pg_query.TableLikeOption.
 */
export const TableLikeOptionSchema: GenEnum<TableLikeOption, TableLikeOptionJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 7);

/**
 * @generated from enum pg_query.DefElemAction
 */
export enum DefElemAction {
  /**
   * @generated from enum value: DEF_ELEM_ACTION_UNDEFINED = 0;
   */
  DEF_ELEM_ACTION_UNDEFINED = 0,

  /**
   * @generated from enum value: DEFELEM_UNSPEC = 1;
   */
  DEFELEM_UNSPEC = 1,

  /**
   * @generated from enum value: DEFELEM_SET = 2;
   */
  DEFELEM_SET = 2,

  /**
   * @generated from enum value: DEFELEM_ADD = 3;
   */
  DEFELEM_ADD = 3,

  /**
   * @generated from enum value: DEFELEM_DROP = 4;
   */
  DEFELEM_DROP = 4,
}

/**
 * @generated from enum pg_query.DefElemAction
 */
export type DefElemActionJson = "DEF_ELEM_ACTION_UNDEFINED" | "DEFELEM_UNSPEC" | "DEFELEM_SET" | "DEFELEM_ADD" | "DEFELEM_DROP";

/**
 * Describes the enum pg_query.DefElemAction.
 */
export const DefElemActionSchema: GenEnum<DefElemAction, DefElemActionJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 8);

/**
 * @generated from enum pg_query.PartitionStrategy
 */
export enum PartitionStrategy {
  /**
   * @generated from enum value: PARTITION_STRATEGY_UNDEFINED = 0;
   */
  UNDEFINED = 0,

  /**
   * @generated from enum value: PARTITION_STRATEGY_LIST = 1;
   */
  LIST = 1,

  /**
   * @generated from enum value: PARTITION_STRATEGY_RANGE = 2;
   */
  RANGE = 2,

  /**
   * @generated from enum value: PARTITION_STRATEGY_HASH = 3;
   */
  HASH = 3,
}

/**
 * @generated from enum pg_query.PartitionStrategy
 */
export type PartitionStrategyJson = "PARTITION_STRATEGY_UNDEFINED" | "PARTITION_STRATEGY_LIST" | "PARTITION_STRATEGY_RANGE" | "PARTITION_STRATEGY_HASH";

/**
 * Describes the enum pg_query.PartitionStrategy.
 */
export const PartitionStrategySchema: GenEnum<PartitionStrategy, PartitionStrategyJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 9);

/**
 * @generated from enum pg_query.PartitionRangeDatumKind
 */
export enum PartitionRangeDatumKind {
  /**
   * @generated from enum value: PARTITION_RANGE_DATUM_KIND_UNDEFINED = 0;
   */
  PARTITION_RANGE_DATUM_KIND_UNDEFINED = 0,

  /**
   * @generated from enum value: PARTITION_RANGE_DATUM_MINVALUE = 1;
   */
  PARTITION_RANGE_DATUM_MINVALUE = 1,

  /**
   * @generated from enum value: PARTITION_RANGE_DATUM_VALUE = 2;
   */
  PARTITION_RANGE_DATUM_VALUE = 2,

  /**
   * @generated from enum value: PARTITION_RANGE_DATUM_MAXVALUE = 3;
   */
  PARTITION_RANGE_DATUM_MAXVALUE = 3,
}

/**
 * @generated from enum pg_query.PartitionRangeDatumKind
 */
export type PartitionRangeDatumKindJson = "PARTITION_RANGE_DATUM_KIND_UNDEFINED" | "PARTITION_RANGE_DATUM_MINVALUE" | "PARTITION_RANGE_DATUM_VALUE" | "PARTITION_RANGE_DATUM_MAXVALUE";

/**
 * Describes the enum pg_query.PartitionRangeDatumKind.
 */
export const PartitionRangeDatumKindSchema: GenEnum<PartitionRangeDatumKind, PartitionRangeDatumKindJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 10);

/**
 * @generated from enum pg_query.RTEKind
 */
export enum RTEKind {
  /**
   * @generated from enum value: RTEKIND_UNDEFINED = 0;
   */
  RTEKIND_UNDEFINED = 0,

  /**
   * @generated from enum value: RTE_RELATION = 1;
   */
  RTE_RELATION = 1,

  /**
   * @generated from enum value: RTE_SUBQUERY = 2;
   */
  RTE_SUBQUERY = 2,

  /**
   * @generated from enum value: RTE_JOIN = 3;
   */
  RTE_JOIN = 3,

  /**
   * @generated from enum value: RTE_FUNCTION = 4;
   */
  RTE_FUNCTION = 4,

  /**
   * @generated from enum value: RTE_TABLEFUNC = 5;
   */
  RTE_TABLEFUNC = 5,

  /**
   * @generated from enum value: RTE_VALUES = 6;
   */
  RTE_VALUES = 6,

  /**
   * @generated from enum value: RTE_CTE = 7;
   */
  RTE_CTE = 7,

  /**
   * @generated from enum value: RTE_NAMEDTUPLESTORE = 8;
   */
  RTE_NAMEDTUPLESTORE = 8,

  /**
   * @generated from enum value: RTE_RESULT = 9;
   */
  RTE_RESULT = 9,
}

/**
 * @generated from enum pg_query.RTEKind
 */
export type RTEKindJson = "RTEKIND_UNDEFINED" | "RTE_RELATION" | "RTE_SUBQUERY" | "RTE_JOIN" | "RTE_FUNCTION" | "RTE_TABLEFUNC" | "RTE_VALUES" | "RTE_CTE" | "RTE_NAMEDTUPLESTORE" | "RTE_RESULT";

/**
 * Describes the enum pg_query.RTEKind.
 */
export const RTEKindSchema: GenEnum<RTEKind, RTEKindJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 11);

/**
 * @generated from enum pg_query.WCOKind
 */
export enum WCOKind {
  /**
   * @generated from enum value: WCOKIND_UNDEFINED = 0;
   */
  WCOKIND_UNDEFINED = 0,

  /**
   * @generated from enum value: WCO_VIEW_CHECK = 1;
   */
  WCO_VIEW_CHECK = 1,

  /**
   * @generated from enum value: WCO_RLS_INSERT_CHECK = 2;
   */
  WCO_RLS_INSERT_CHECK = 2,

  /**
   * @generated from enum value: WCO_RLS_UPDATE_CHECK = 3;
   */
  WCO_RLS_UPDATE_CHECK = 3,

  /**
   * @generated from enum value: WCO_RLS_CONFLICT_CHECK = 4;
   */
  WCO_RLS_CONFLICT_CHECK = 4,

  /**
   * @generated from enum value: WCO_RLS_MERGE_UPDATE_CHECK = 5;
   */
  WCO_RLS_MERGE_UPDATE_CHECK = 5,

  /**
   * @generated from enum value: WCO_RLS_MERGE_DELETE_CHECK = 6;
   */
  WCO_RLS_MERGE_DELETE_CHECK = 6,
}

/**
 * @generated from enum pg_query.WCOKind
 */
export type WCOKindJson = "WCOKIND_UNDEFINED" | "WCO_VIEW_CHECK" | "WCO_RLS_INSERT_CHECK" | "WCO_RLS_UPDATE_CHECK" | "WCO_RLS_CONFLICT_CHECK" | "WCO_RLS_MERGE_UPDATE_CHECK" | "WCO_RLS_MERGE_DELETE_CHECK";

/**
 * Describes the enum pg_query.WCOKind.
 */
export const WCOKindSchema: GenEnum<WCOKind, WCOKindJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 12);

/**
 * @generated from enum pg_query.GroupingSetKind
 */
export enum GroupingSetKind {
  /**
   * @generated from enum value: GROUPING_SET_KIND_UNDEFINED = 0;
   */
  GROUPING_SET_KIND_UNDEFINED = 0,

  /**
   * @generated from enum value: GROUPING_SET_EMPTY = 1;
   */
  GROUPING_SET_EMPTY = 1,

  /**
   * @generated from enum value: GROUPING_SET_SIMPLE = 2;
   */
  GROUPING_SET_SIMPLE = 2,

  /**
   * @generated from enum value: GROUPING_SET_ROLLUP = 3;
   */
  GROUPING_SET_ROLLUP = 3,

  /**
   * @generated from enum value: GROUPING_SET_CUBE = 4;
   */
  GROUPING_SET_CUBE = 4,

  /**
   * @generated from enum value: GROUPING_SET_SETS = 5;
   */
  GROUPING_SET_SETS = 5,
}

/**
 * @generated from enum pg_query.GroupingSetKind
 */
export type GroupingSetKindJson = "GROUPING_SET_KIND_UNDEFINED" | "GROUPING_SET_EMPTY" | "GROUPING_SET_SIMPLE" | "GROUPING_SET_ROLLUP" | "GROUPING_SET_CUBE" | "GROUPING_SET_SETS";

/**
 * Describes the enum pg_query.GroupingSetKind.
 */
export const GroupingSetKindSchema: GenEnum<GroupingSetKind, GroupingSetKindJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 13);

/**
 * @generated from enum pg_query.CTEMaterialize
 */
export enum CTEMaterialize {
  /**
   * @generated from enum value: CTEMATERIALIZE_UNDEFINED = 0;
   */
  CTEMATERIALIZE_UNDEFINED = 0,

  /**
   * @generated from enum value: CTEMaterializeDefault = 1;
   */
  CTEMaterializeDefault = 1,

  /**
   * @generated from enum value: CTEMaterializeAlways = 2;
   */
  CTEMaterializeAlways = 2,

  /**
   * @generated from enum value: CTEMaterializeNever = 3;
   */
  CTEMaterializeNever = 3,
}

/**
 * @generated from enum pg_query.CTEMaterialize
 */
export type CTEMaterializeJson = "CTEMATERIALIZE_UNDEFINED" | "CTEMaterializeDefault" | "CTEMaterializeAlways" | "CTEMaterializeNever";

/**
 * Describes the enum pg_query.CTEMaterialize.
 */
export const CTEMaterializeSchema: GenEnum<CTEMaterialize, CTEMaterializeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 14);

/**
 * @generated from enum pg_query.SetOperation
 */
export enum SetOperation {
  /**
   * @generated from enum value: SET_OPERATION_UNDEFINED = 0;
   */
  SET_OPERATION_UNDEFINED = 0,

  /**
   * @generated from enum value: SETOP_NONE = 1;
   */
  SETOP_NONE = 1,

  /**
   * @generated from enum value: SETOP_UNION = 2;
   */
  SETOP_UNION = 2,

  /**
   * @generated from enum value: SETOP_INTERSECT = 3;
   */
  SETOP_INTERSECT = 3,

  /**
   * @generated from enum value: SETOP_EXCEPT = 4;
   */
  SETOP_EXCEPT = 4,
}

/**
 * @generated from enum pg_query.SetOperation
 */
export type SetOperationJson = "SET_OPERATION_UNDEFINED" | "SETOP_NONE" | "SETOP_UNION" | "SETOP_INTERSECT" | "SETOP_EXCEPT";

/**
 * Describes the enum pg_query.SetOperation.
 */
export const SetOperationSchema: GenEnum<SetOperation, SetOperationJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 15);

/**
 * @generated from enum pg_query.ObjectType
 */
export enum ObjectType {
  /**
   * @generated from enum value: OBJECT_TYPE_UNDEFINED = 0;
   */
  OBJECT_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: OBJECT_ACCESS_METHOD = 1;
   */
  OBJECT_ACCESS_METHOD = 1,

  /**
   * @generated from enum value: OBJECT_AGGREGATE = 2;
   */
  OBJECT_AGGREGATE = 2,

  /**
   * @generated from enum value: OBJECT_AMOP = 3;
   */
  OBJECT_AMOP = 3,

  /**
   * @generated from enum value: OBJECT_AMPROC = 4;
   */
  OBJECT_AMPROC = 4,

  /**
   * @generated from enum value: OBJECT_ATTRIBUTE = 5;
   */
  OBJECT_ATTRIBUTE = 5,

  /**
   * @generated from enum value: OBJECT_CAST = 6;
   */
  OBJECT_CAST = 6,

  /**
   * @generated from enum value: OBJECT_COLUMN = 7;
   */
  OBJECT_COLUMN = 7,

  /**
   * @generated from enum value: OBJECT_COLLATION = 8;
   */
  OBJECT_COLLATION = 8,

  /**
   * @generated from enum value: OBJECT_CONVERSION = 9;
   */
  OBJECT_CONVERSION = 9,

  /**
   * @generated from enum value: OBJECT_DATABASE = 10;
   */
  OBJECT_DATABASE = 10,

  /**
   * @generated from enum value: OBJECT_DEFAULT = 11;
   */
  OBJECT_DEFAULT = 11,

  /**
   * @generated from enum value: OBJECT_DEFACL = 12;
   */
  OBJECT_DEFACL = 12,

  /**
   * @generated from enum value: OBJECT_DOMAIN = 13;
   */
  OBJECT_DOMAIN = 13,

  /**
   * @generated from enum value: OBJECT_DOMCONSTRAINT = 14;
   */
  OBJECT_DOMCONSTRAINT = 14,

  /**
   * @generated from enum value: OBJECT_EVENT_TRIGGER = 15;
   */
  OBJECT_EVENT_TRIGGER = 15,

  /**
   * @generated from enum value: OBJECT_EXTENSION = 16;
   */
  OBJECT_EXTENSION = 16,

  /**
   * @generated from enum value: OBJECT_FDW = 17;
   */
  OBJECT_FDW = 17,

  /**
   * @generated from enum value: OBJECT_FOREIGN_SERVER = 18;
   */
  OBJECT_FOREIGN_SERVER = 18,

  /**
   * @generated from enum value: OBJECT_FOREIGN_TABLE = 19;
   */
  OBJECT_FOREIGN_TABLE = 19,

  /**
   * @generated from enum value: OBJECT_FUNCTION = 20;
   */
  OBJECT_FUNCTION = 20,

  /**
   * @generated from enum value: OBJECT_INDEX = 21;
   */
  OBJECT_INDEX = 21,

  /**
   * @generated from enum value: OBJECT_LANGUAGE = 22;
   */
  OBJECT_LANGUAGE = 22,

  /**
   * @generated from enum value: OBJECT_LARGEOBJECT = 23;
   */
  OBJECT_LARGEOBJECT = 23,

  /**
   * @generated from enum value: OBJECT_MATVIEW = 24;
   */
  OBJECT_MATVIEW = 24,

  /**
   * @generated from enum value: OBJECT_OPCLASS = 25;
   */
  OBJECT_OPCLASS = 25,

  /**
   * @generated from enum value: OBJECT_OPERATOR = 26;
   */
  OBJECT_OPERATOR = 26,

  /**
   * @generated from enum value: OBJECT_OPFAMILY = 27;
   */
  OBJECT_OPFAMILY = 27,

  /**
   * @generated from enum value: OBJECT_PARAMETER_ACL = 28;
   */
  OBJECT_PARAMETER_ACL = 28,

  /**
   * @generated from enum value: OBJECT_POLICY = 29;
   */
  OBJECT_POLICY = 29,

  /**
   * @generated from enum value: OBJECT_PROCEDURE = 30;
   */
  OBJECT_PROCEDURE = 30,

  /**
   * @generated from enum value: OBJECT_PUBLICATION = 31;
   */
  OBJECT_PUBLICATION = 31,

  /**
   * @generated from enum value: OBJECT_PUBLICATION_NAMESPACE = 32;
   */
  OBJECT_PUBLICATION_NAMESPACE = 32,

  /**
   * @generated from enum value: OBJECT_PUBLICATION_REL = 33;
   */
  OBJECT_PUBLICATION_REL = 33,

  /**
   * @generated from enum value: OBJECT_ROLE = 34;
   */
  OBJECT_ROLE = 34,

  /**
   * @generated from enum value: OBJECT_ROUTINE = 35;
   */
  OBJECT_ROUTINE = 35,

  /**
   * @generated from enum value: OBJECT_RULE = 36;
   */
  OBJECT_RULE = 36,

  /**
   * @generated from enum value: OBJECT_SCHEMA = 37;
   */
  OBJECT_SCHEMA = 37,

  /**
   * @generated from enum value: OBJECT_SEQUENCE = 38;
   */
  OBJECT_SEQUENCE = 38,

  /**
   * @generated from enum value: OBJECT_SUBSCRIPTION = 39;
   */
  OBJECT_SUBSCRIPTION = 39,

  /**
   * @generated from enum value: OBJECT_STATISTIC_EXT = 40;
   */
  OBJECT_STATISTIC_EXT = 40,

  /**
   * @generated from enum value: OBJECT_TABCONSTRAINT = 41;
   */
  OBJECT_TABCONSTRAINT = 41,

  /**
   * @generated from enum value: OBJECT_TABLE = 42;
   */
  OBJECT_TABLE = 42,

  /**
   * @generated from enum value: OBJECT_TABLESPACE = 43;
   */
  OBJECT_TABLESPACE = 43,

  /**
   * @generated from enum value: OBJECT_TRANSFORM = 44;
   */
  OBJECT_TRANSFORM = 44,

  /**
   * @generated from enum value: OBJECT_TRIGGER = 45;
   */
  OBJECT_TRIGGER = 45,

  /**
   * @generated from enum value: OBJECT_TSCONFIGURATION = 46;
   */
  OBJECT_TSCONFIGURATION = 46,

  /**
   * @generated from enum value: OBJECT_TSDICTIONARY = 47;
   */
  OBJECT_TSDICTIONARY = 47,

  /**
   * @generated from enum value: OBJECT_TSPARSER = 48;
   */
  OBJECT_TSPARSER = 48,

  /**
   * @generated from enum value: OBJECT_TSTEMPLATE = 49;
   */
  OBJECT_TSTEMPLATE = 49,

  /**
   * @generated from enum value: OBJECT_TYPE = 50;
   */
  OBJECT_TYPE = 50,

  /**
   * @generated from enum value: OBJECT_USER_MAPPING = 51;
   */
  OBJECT_USER_MAPPING = 51,

  /**
   * @generated from enum value: OBJECT_VIEW = 52;
   */
  OBJECT_VIEW = 52,
}

/**
 * @generated from enum pg_query.ObjectType
 */
export type ObjectTypeJson = "OBJECT_TYPE_UNDEFINED" | "OBJECT_ACCESS_METHOD" | "OBJECT_AGGREGATE" | "OBJECT_AMOP" | "OBJECT_AMPROC" | "OBJECT_ATTRIBUTE" | "OBJECT_CAST" | "OBJECT_COLUMN" | "OBJECT_COLLATION" | "OBJECT_CONVERSION" | "OBJECT_DATABASE" | "OBJECT_DEFAULT" | "OBJECT_DEFACL" | "OBJECT_DOMAIN" | "OBJECT_DOMCONSTRAINT" | "OBJECT_EVENT_TRIGGER" | "OBJECT_EXTENSION" | "OBJECT_FDW" | "OBJECT_FOREIGN_SERVER" | "OBJECT_FOREIGN_TABLE" | "OBJECT_FUNCTION" | "OBJECT_INDEX" | "OBJECT_LANGUAGE" | "OBJECT_LARGEOBJECT" | "OBJECT_MATVIEW" | "OBJECT_OPCLASS" | "OBJECT_OPERATOR" | "OBJECT_OPFAMILY" | "OBJECT_PARAMETER_ACL" | "OBJECT_POLICY" | "OBJECT_PROCEDURE" | "OBJECT_PUBLICATION" | "OBJECT_PUBLICATION_NAMESPACE" | "OBJECT_PUBLICATION_REL" | "OBJECT_ROLE" | "OBJECT_ROUTINE" | "OBJECT_RULE" | "OBJECT_SCHEMA" | "OBJECT_SEQUENCE" | "OBJECT_SUBSCRIPTION" | "OBJECT_STATISTIC_EXT" | "OBJECT_TABCONSTRAINT" | "OBJECT_TABLE" | "OBJECT_TABLESPACE" | "OBJECT_TRANSFORM" | "OBJECT_TRIGGER" | "OBJECT_TSCONFIGURATION" | "OBJECT_TSDICTIONARY" | "OBJECT_TSPARSER" | "OBJECT_TSTEMPLATE" | "OBJECT_TYPE" | "OBJECT_USER_MAPPING" | "OBJECT_VIEW";

/**
 * Describes the enum pg_query.ObjectType.
 */
export const ObjectTypeSchema: GenEnum<ObjectType, ObjectTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 16);

/**
 * @generated from enum pg_query.DropBehavior
 */
export enum DropBehavior {
  /**
   * @generated from enum value: DROP_BEHAVIOR_UNDEFINED = 0;
   */
  DROP_BEHAVIOR_UNDEFINED = 0,

  /**
   * @generated from enum value: DROP_RESTRICT = 1;
   */
  DROP_RESTRICT = 1,

  /**
   * @generated from enum value: DROP_CASCADE = 2;
   */
  DROP_CASCADE = 2,
}

/**
 * @generated from enum pg_query.DropBehavior
 */
export type DropBehaviorJson = "DROP_BEHAVIOR_UNDEFINED" | "DROP_RESTRICT" | "DROP_CASCADE";

/**
 * Describes the enum pg_query.DropBehavior.
 */
export const DropBehaviorSchema: GenEnum<DropBehavior, DropBehaviorJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 17);

/**
 * @generated from enum pg_query.AlterTableType
 */
export enum AlterTableType {
  /**
   * @generated from enum value: ALTER_TABLE_TYPE_UNDEFINED = 0;
   */
  ALTER_TABLE_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: AT_AddColumn = 1;
   */
  AT_AddColumn = 1,

  /**
   * @generated from enum value: AT_AddColumnToView = 2;
   */
  AT_AddColumnToView = 2,

  /**
   * @generated from enum value: AT_ColumnDefault = 3;
   */
  AT_ColumnDefault = 3,

  /**
   * @generated from enum value: AT_CookedColumnDefault = 4;
   */
  AT_CookedColumnDefault = 4,

  /**
   * @generated from enum value: AT_DropNotNull = 5;
   */
  AT_DropNotNull = 5,

  /**
   * @generated from enum value: AT_SetNotNull = 6;
   */
  AT_SetNotNull = 6,

  /**
   * @generated from enum value: AT_DropExpression = 7;
   */
  AT_DropExpression = 7,

  /**
   * @generated from enum value: AT_CheckNotNull = 8;
   */
  AT_CheckNotNull = 8,

  /**
   * @generated from enum value: AT_SetStatistics = 9;
   */
  AT_SetStatistics = 9,

  /**
   * @generated from enum value: AT_SetOptions = 10;
   */
  AT_SetOptions = 10,

  /**
   * @generated from enum value: AT_ResetOptions = 11;
   */
  AT_ResetOptions = 11,

  /**
   * @generated from enum value: AT_SetStorage = 12;
   */
  AT_SetStorage = 12,

  /**
   * @generated from enum value: AT_SetCompression = 13;
   */
  AT_SetCompression = 13,

  /**
   * @generated from enum value: AT_DropColumn = 14;
   */
  AT_DropColumn = 14,

  /**
   * @generated from enum value: AT_AddIndex = 15;
   */
  AT_AddIndex = 15,

  /**
   * @generated from enum value: AT_ReAddIndex = 16;
   */
  AT_ReAddIndex = 16,

  /**
   * @generated from enum value: AT_AddConstraint = 17;
   */
  AT_AddConstraint = 17,

  /**
   * @generated from enum value: AT_ReAddConstraint = 18;
   */
  AT_ReAddConstraint = 18,

  /**
   * @generated from enum value: AT_ReAddDomainConstraint = 19;
   */
  AT_ReAddDomainConstraint = 19,

  /**
   * @generated from enum value: AT_AlterConstraint = 20;
   */
  AT_AlterConstraint = 20,

  /**
   * @generated from enum value: AT_ValidateConstraint = 21;
   */
  AT_ValidateConstraint = 21,

  /**
   * @generated from enum value: AT_AddIndexConstraint = 22;
   */
  AT_AddIndexConstraint = 22,

  /**
   * @generated from enum value: AT_DropConstraint = 23;
   */
  AT_DropConstraint = 23,

  /**
   * @generated from enum value: AT_ReAddComment = 24;
   */
  AT_ReAddComment = 24,

  /**
   * @generated from enum value: AT_AlterColumnType = 25;
   */
  AT_AlterColumnType = 25,

  /**
   * @generated from enum value: AT_AlterColumnGenericOptions = 26;
   */
  AT_AlterColumnGenericOptions = 26,

  /**
   * @generated from enum value: AT_ChangeOwner = 27;
   */
  AT_ChangeOwner = 27,

  /**
   * @generated from enum value: AT_ClusterOn = 28;
   */
  AT_ClusterOn = 28,

  /**
   * @generated from enum value: AT_DropCluster = 29;
   */
  AT_DropCluster = 29,

  /**
   * @generated from enum value: AT_SetLogged = 30;
   */
  AT_SetLogged = 30,

  /**
   * @generated from enum value: AT_SetUnLogged = 31;
   */
  AT_SetUnLogged = 31,

  /**
   * @generated from enum value: AT_DropOids = 32;
   */
  AT_DropOids = 32,

  /**
   * @generated from enum value: AT_SetAccessMethod = 33;
   */
  AT_SetAccessMethod = 33,

  /**
   * @generated from enum value: AT_SetTableSpace = 34;
   */
  AT_SetTableSpace = 34,

  /**
   * @generated from enum value: AT_SetRelOptions = 35;
   */
  AT_SetRelOptions = 35,

  /**
   * @generated from enum value: AT_ResetRelOptions = 36;
   */
  AT_ResetRelOptions = 36,

  /**
   * @generated from enum value: AT_ReplaceRelOptions = 37;
   */
  AT_ReplaceRelOptions = 37,

  /**
   * @generated from enum value: AT_EnableTrig = 38;
   */
  AT_EnableTrig = 38,

  /**
   * @generated from enum value: AT_EnableAlwaysTrig = 39;
   */
  AT_EnableAlwaysTrig = 39,

  /**
   * @generated from enum value: AT_EnableReplicaTrig = 40;
   */
  AT_EnableReplicaTrig = 40,

  /**
   * @generated from enum value: AT_DisableTrig = 41;
   */
  AT_DisableTrig = 41,

  /**
   * @generated from enum value: AT_EnableTrigAll = 42;
   */
  AT_EnableTrigAll = 42,

  /**
   * @generated from enum value: AT_DisableTrigAll = 43;
   */
  AT_DisableTrigAll = 43,

  /**
   * @generated from enum value: AT_EnableTrigUser = 44;
   */
  AT_EnableTrigUser = 44,

  /**
   * @generated from enum value: AT_DisableTrigUser = 45;
   */
  AT_DisableTrigUser = 45,

  /**
   * @generated from enum value: AT_EnableRule = 46;
   */
  AT_EnableRule = 46,

  /**
   * @generated from enum value: AT_EnableAlwaysRule = 47;
   */
  AT_EnableAlwaysRule = 47,

  /**
   * @generated from enum value: AT_EnableReplicaRule = 48;
   */
  AT_EnableReplicaRule = 48,

  /**
   * @generated from enum value: AT_DisableRule = 49;
   */
  AT_DisableRule = 49,

  /**
   * @generated from enum value: AT_AddInherit = 50;
   */
  AT_AddInherit = 50,

  /**
   * @generated from enum value: AT_DropInherit = 51;
   */
  AT_DropInherit = 51,

  /**
   * @generated from enum value: AT_AddOf = 52;
   */
  AT_AddOf = 52,

  /**
   * @generated from enum value: AT_DropOf = 53;
   */
  AT_DropOf = 53,

  /**
   * @generated from enum value: AT_ReplicaIdentity = 54;
   */
  AT_ReplicaIdentity = 54,

  /**
   * @generated from enum value: AT_EnableRowSecurity = 55;
   */
  AT_EnableRowSecurity = 55,

  /**
   * @generated from enum value: AT_DisableRowSecurity = 56;
   */
  AT_DisableRowSecurity = 56,

  /**
   * @generated from enum value: AT_ForceRowSecurity = 57;
   */
  AT_ForceRowSecurity = 57,

  /**
   * @generated from enum value: AT_NoForceRowSecurity = 58;
   */
  AT_NoForceRowSecurity = 58,

  /**
   * @generated from enum value: AT_GenericOptions = 59;
   */
  AT_GenericOptions = 59,

  /**
   * @generated from enum value: AT_AttachPartition = 60;
   */
  AT_AttachPartition = 60,

  /**
   * @generated from enum value: AT_DetachPartition = 61;
   */
  AT_DetachPartition = 61,

  /**
   * @generated from enum value: AT_DetachPartitionFinalize = 62;
   */
  AT_DetachPartitionFinalize = 62,

  /**
   * @generated from enum value: AT_AddIdentity = 63;
   */
  AT_AddIdentity = 63,

  /**
   * @generated from enum value: AT_SetIdentity = 64;
   */
  AT_SetIdentity = 64,

  /**
   * @generated from enum value: AT_DropIdentity = 65;
   */
  AT_DropIdentity = 65,

  /**
   * @generated from enum value: AT_ReAddStatistics = 66;
   */
  AT_ReAddStatistics = 66,
}

/**
 * @generated from enum pg_query.AlterTableType
 */
export type AlterTableTypeJson = "ALTER_TABLE_TYPE_UNDEFINED" | "AT_AddColumn" | "AT_AddColumnToView" | "AT_ColumnDefault" | "AT_CookedColumnDefault" | "AT_DropNotNull" | "AT_SetNotNull" | "AT_DropExpression" | "AT_CheckNotNull" | "AT_SetStatistics" | "AT_SetOptions" | "AT_ResetOptions" | "AT_SetStorage" | "AT_SetCompression" | "AT_DropColumn" | "AT_AddIndex" | "AT_ReAddIndex" | "AT_AddConstraint" | "AT_ReAddConstraint" | "AT_ReAddDomainConstraint" | "AT_AlterConstraint" | "AT_ValidateConstraint" | "AT_AddIndexConstraint" | "AT_DropConstraint" | "AT_ReAddComment" | "AT_AlterColumnType" | "AT_AlterColumnGenericOptions" | "AT_ChangeOwner" | "AT_ClusterOn" | "AT_DropCluster" | "AT_SetLogged" | "AT_SetUnLogged" | "AT_DropOids" | "AT_SetAccessMethod" | "AT_SetTableSpace" | "AT_SetRelOptions" | "AT_ResetRelOptions" | "AT_ReplaceRelOptions" | "AT_EnableTrig" | "AT_EnableAlwaysTrig" | "AT_EnableReplicaTrig" | "AT_DisableTrig" | "AT_EnableTrigAll" | "AT_DisableTrigAll" | "AT_EnableTrigUser" | "AT_DisableTrigUser" | "AT_EnableRule" | "AT_EnableAlwaysRule" | "AT_EnableReplicaRule" | "AT_DisableRule" | "AT_AddInherit" | "AT_DropInherit" | "AT_AddOf" | "AT_DropOf" | "AT_ReplicaIdentity" | "AT_EnableRowSecurity" | "AT_DisableRowSecurity" | "AT_ForceRowSecurity" | "AT_NoForceRowSecurity" | "AT_GenericOptions" | "AT_AttachPartition" | "AT_DetachPartition" | "AT_DetachPartitionFinalize" | "AT_AddIdentity" | "AT_SetIdentity" | "AT_DropIdentity" | "AT_ReAddStatistics";

/**
 * Describes the enum pg_query.AlterTableType.
 */
export const AlterTableTypeSchema: GenEnum<AlterTableType, AlterTableTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 18);

/**
 * @generated from enum pg_query.GrantTargetType
 */
export enum GrantTargetType {
  /**
   * @generated from enum value: GRANT_TARGET_TYPE_UNDEFINED = 0;
   */
  GRANT_TARGET_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: ACL_TARGET_OBJECT = 1;
   */
  ACL_TARGET_OBJECT = 1,

  /**
   * @generated from enum value: ACL_TARGET_ALL_IN_SCHEMA = 2;
   */
  ACL_TARGET_ALL_IN_SCHEMA = 2,

  /**
   * @generated from enum value: ACL_TARGET_DEFAULTS = 3;
   */
  ACL_TARGET_DEFAULTS = 3,
}

/**
 * @generated from enum pg_query.GrantTargetType
 */
export type GrantTargetTypeJson = "GRANT_TARGET_TYPE_UNDEFINED" | "ACL_TARGET_OBJECT" | "ACL_TARGET_ALL_IN_SCHEMA" | "ACL_TARGET_DEFAULTS";

/**
 * Describes the enum pg_query.GrantTargetType.
 */
export const GrantTargetTypeSchema: GenEnum<GrantTargetType, GrantTargetTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 19);

/**
 * @generated from enum pg_query.VariableSetKind
 */
export enum VariableSetKind {
  /**
   * @generated from enum value: VARIABLE_SET_KIND_UNDEFINED = 0;
   */
  VARIABLE_SET_KIND_UNDEFINED = 0,

  /**
   * @generated from enum value: VAR_SET_VALUE = 1;
   */
  VAR_SET_VALUE = 1,

  /**
   * @generated from enum value: VAR_SET_DEFAULT = 2;
   */
  VAR_SET_DEFAULT = 2,

  /**
   * @generated from enum value: VAR_SET_CURRENT = 3;
   */
  VAR_SET_CURRENT = 3,

  /**
   * @generated from enum value: VAR_SET_MULTI = 4;
   */
  VAR_SET_MULTI = 4,

  /**
   * @generated from enum value: VAR_RESET = 5;
   */
  VAR_RESET = 5,

  /**
   * @generated from enum value: VAR_RESET_ALL = 6;
   */
  VAR_RESET_ALL = 6,
}

/**
 * @generated from enum pg_query.VariableSetKind
 */
export type VariableSetKindJson = "VARIABLE_SET_KIND_UNDEFINED" | "VAR_SET_VALUE" | "VAR_SET_DEFAULT" | "VAR_SET_CURRENT" | "VAR_SET_MULTI" | "VAR_RESET" | "VAR_RESET_ALL";

/**
 * Describes the enum pg_query.VariableSetKind.
 */
export const VariableSetKindSchema: GenEnum<VariableSetKind, VariableSetKindJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 20);

/**
 * @generated from enum pg_query.ConstrType
 */
export enum ConstrType {
  /**
   * @generated from enum value: CONSTR_TYPE_UNDEFINED = 0;
   */
  CONSTR_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: CONSTR_NULL = 1;
   */
  CONSTR_NULL = 1,

  /**
   * @generated from enum value: CONSTR_NOTNULL = 2;
   */
  CONSTR_NOTNULL = 2,

  /**
   * @generated from enum value: CONSTR_DEFAULT = 3;
   */
  CONSTR_DEFAULT = 3,

  /**
   * @generated from enum value: CONSTR_IDENTITY = 4;
   */
  CONSTR_IDENTITY = 4,

  /**
   * @generated from enum value: CONSTR_GENERATED = 5;
   */
  CONSTR_GENERATED = 5,

  /**
   * @generated from enum value: CONSTR_CHECK = 6;
   */
  CONSTR_CHECK = 6,

  /**
   * @generated from enum value: CONSTR_PRIMARY = 7;
   */
  CONSTR_PRIMARY = 7,

  /**
   * @generated from enum value: CONSTR_UNIQUE = 8;
   */
  CONSTR_UNIQUE = 8,

  /**
   * @generated from enum value: CONSTR_EXCLUSION = 9;
   */
  CONSTR_EXCLUSION = 9,

  /**
   * @generated from enum value: CONSTR_FOREIGN = 10;
   */
  CONSTR_FOREIGN = 10,

  /**
   * @generated from enum value: CONSTR_ATTR_DEFERRABLE = 11;
   */
  CONSTR_ATTR_DEFERRABLE = 11,

  /**
   * @generated from enum value: CONSTR_ATTR_NOT_DEFERRABLE = 12;
   */
  CONSTR_ATTR_NOT_DEFERRABLE = 12,

  /**
   * @generated from enum value: CONSTR_ATTR_DEFERRED = 13;
   */
  CONSTR_ATTR_DEFERRED = 13,

  /**
   * @generated from enum value: CONSTR_ATTR_IMMEDIATE = 14;
   */
  CONSTR_ATTR_IMMEDIATE = 14,
}

/**
 * @generated from enum pg_query.ConstrType
 */
export type ConstrTypeJson = "CONSTR_TYPE_UNDEFINED" | "CONSTR_NULL" | "CONSTR_NOTNULL" | "CONSTR_DEFAULT" | "CONSTR_IDENTITY" | "CONSTR_GENERATED" | "CONSTR_CHECK" | "CONSTR_PRIMARY" | "CONSTR_UNIQUE" | "CONSTR_EXCLUSION" | "CONSTR_FOREIGN" | "CONSTR_ATTR_DEFERRABLE" | "CONSTR_ATTR_NOT_DEFERRABLE" | "CONSTR_ATTR_DEFERRED" | "CONSTR_ATTR_IMMEDIATE";

/**
 * Describes the enum pg_query.ConstrType.
 */
export const ConstrTypeSchema: GenEnum<ConstrType, ConstrTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 21);

/**
 * @generated from enum pg_query.ImportForeignSchemaType
 */
export enum ImportForeignSchemaType {
  /**
   * @generated from enum value: IMPORT_FOREIGN_SCHEMA_TYPE_UNDEFINED = 0;
   */
  IMPORT_FOREIGN_SCHEMA_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: FDW_IMPORT_SCHEMA_ALL = 1;
   */
  FDW_IMPORT_SCHEMA_ALL = 1,

  /**
   * @generated from enum value: FDW_IMPORT_SCHEMA_LIMIT_TO = 2;
   */
  FDW_IMPORT_SCHEMA_LIMIT_TO = 2,

  /**
   * @generated from enum value: FDW_IMPORT_SCHEMA_EXCEPT = 3;
   */
  FDW_IMPORT_SCHEMA_EXCEPT = 3,
}

/**
 * @generated from enum pg_query.ImportForeignSchemaType
 */
export type ImportForeignSchemaTypeJson = "IMPORT_FOREIGN_SCHEMA_TYPE_UNDEFINED" | "FDW_IMPORT_SCHEMA_ALL" | "FDW_IMPORT_SCHEMA_LIMIT_TO" | "FDW_IMPORT_SCHEMA_EXCEPT";

/**
 * Describes the enum pg_query.ImportForeignSchemaType.
 */
export const ImportForeignSchemaTypeSchema: GenEnum<ImportForeignSchemaType, ImportForeignSchemaTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 22);

/**
 * @generated from enum pg_query.RoleStmtType
 */
export enum RoleStmtType {
  /**
   * @generated from enum value: ROLE_STMT_TYPE_UNDEFINED = 0;
   */
  ROLE_STMT_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: ROLESTMT_ROLE = 1;
   */
  ROLESTMT_ROLE = 1,

  /**
   * @generated from enum value: ROLESTMT_USER = 2;
   */
  ROLESTMT_USER = 2,

  /**
   * @generated from enum value: ROLESTMT_GROUP = 3;
   */
  ROLESTMT_GROUP = 3,
}

/**
 * @generated from enum pg_query.RoleStmtType
 */
export type RoleStmtTypeJson = "ROLE_STMT_TYPE_UNDEFINED" | "ROLESTMT_ROLE" | "ROLESTMT_USER" | "ROLESTMT_GROUP";

/**
 * Describes the enum pg_query.RoleStmtType.
 */
export const RoleStmtTypeSchema: GenEnum<RoleStmtType, RoleStmtTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 23);

/**
 * @generated from enum pg_query.FetchDirection
 */
export enum FetchDirection {
  /**
   * @generated from enum value: FETCH_DIRECTION_UNDEFINED = 0;
   */
  FETCH_DIRECTION_UNDEFINED = 0,

  /**
   * @generated from enum value: FETCH_FORWARD = 1;
   */
  FETCH_FORWARD = 1,

  /**
   * @generated from enum value: FETCH_BACKWARD = 2;
   */
  FETCH_BACKWARD = 2,

  /**
   * @generated from enum value: FETCH_ABSOLUTE = 3;
   */
  FETCH_ABSOLUTE = 3,

  /**
   * @generated from enum value: FETCH_RELATIVE = 4;
   */
  FETCH_RELATIVE = 4,
}

/**
 * @generated from enum pg_query.FetchDirection
 */
export type FetchDirectionJson = "FETCH_DIRECTION_UNDEFINED" | "FETCH_FORWARD" | "FETCH_BACKWARD" | "FETCH_ABSOLUTE" | "FETCH_RELATIVE";

/**
 * Describes the enum pg_query.FetchDirection.
 */
export const FetchDirectionSchema: GenEnum<FetchDirection, FetchDirectionJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 24);

/**
 * @generated from enum pg_query.FunctionParameterMode
 */
export enum FunctionParameterMode {
  /**
   * @generated from enum value: FUNCTION_PARAMETER_MODE_UNDEFINED = 0;
   */
  FUNCTION_PARAMETER_MODE_UNDEFINED = 0,

  /**
   * @generated from enum value: FUNC_PARAM_IN = 1;
   */
  FUNC_PARAM_IN = 1,

  /**
   * @generated from enum value: FUNC_PARAM_OUT = 2;
   */
  FUNC_PARAM_OUT = 2,

  /**
   * @generated from enum value: FUNC_PARAM_INOUT = 3;
   */
  FUNC_PARAM_INOUT = 3,

  /**
   * @generated from enum value: FUNC_PARAM_VARIADIC = 4;
   */
  FUNC_PARAM_VARIADIC = 4,

  /**
   * @generated from enum value: FUNC_PARAM_TABLE = 5;
   */
  FUNC_PARAM_TABLE = 5,

  /**
   * @generated from enum value: FUNC_PARAM_DEFAULT = 6;
   */
  FUNC_PARAM_DEFAULT = 6,
}

/**
 * @generated from enum pg_query.FunctionParameterMode
 */
export type FunctionParameterModeJson = "FUNCTION_PARAMETER_MODE_UNDEFINED" | "FUNC_PARAM_IN" | "FUNC_PARAM_OUT" | "FUNC_PARAM_INOUT" | "FUNC_PARAM_VARIADIC" | "FUNC_PARAM_TABLE" | "FUNC_PARAM_DEFAULT";

/**
 * Describes the enum pg_query.FunctionParameterMode.
 */
export const FunctionParameterModeSchema: GenEnum<FunctionParameterMode, FunctionParameterModeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 25);

/**
 * @generated from enum pg_query.TransactionStmtKind
 */
export enum TransactionStmtKind {
  /**
   * @generated from enum value: TRANSACTION_STMT_KIND_UNDEFINED = 0;
   */
  TRANSACTION_STMT_KIND_UNDEFINED = 0,

  /**
   * @generated from enum value: TRANS_STMT_BEGIN = 1;
   */
  TRANS_STMT_BEGIN = 1,

  /**
   * @generated from enum value: TRANS_STMT_START = 2;
   */
  TRANS_STMT_START = 2,

  /**
   * @generated from enum value: TRANS_STMT_COMMIT = 3;
   */
  TRANS_STMT_COMMIT = 3,

  /**
   * @generated from enum value: TRANS_STMT_ROLLBACK = 4;
   */
  TRANS_STMT_ROLLBACK = 4,

  /**
   * @generated from enum value: TRANS_STMT_SAVEPOINT = 5;
   */
  TRANS_STMT_SAVEPOINT = 5,

  /**
   * @generated from enum value: TRANS_STMT_RELEASE = 6;
   */
  TRANS_STMT_RELEASE = 6,

  /**
   * @generated from enum value: TRANS_STMT_ROLLBACK_TO = 7;
   */
  TRANS_STMT_ROLLBACK_TO = 7,

  /**
   * @generated from enum value: TRANS_STMT_PREPARE = 8;
   */
  TRANS_STMT_PREPARE = 8,

  /**
   * @generated from enum value: TRANS_STMT_COMMIT_PREPARED = 9;
   */
  TRANS_STMT_COMMIT_PREPARED = 9,

  /**
   * @generated from enum value: TRANS_STMT_ROLLBACK_PREPARED = 10;
   */
  TRANS_STMT_ROLLBACK_PREPARED = 10,
}

/**
 * @generated from enum pg_query.TransactionStmtKind
 */
export type TransactionStmtKindJson = "TRANSACTION_STMT_KIND_UNDEFINED" | "TRANS_STMT_BEGIN" | "TRANS_STMT_START" | "TRANS_STMT_COMMIT" | "TRANS_STMT_ROLLBACK" | "TRANS_STMT_SAVEPOINT" | "TRANS_STMT_RELEASE" | "TRANS_STMT_ROLLBACK_TO" | "TRANS_STMT_PREPARE" | "TRANS_STMT_COMMIT_PREPARED" | "TRANS_STMT_ROLLBACK_PREPARED";

/**
 * Describes the enum pg_query.TransactionStmtKind.
 */
export const TransactionStmtKindSchema: GenEnum<TransactionStmtKind, TransactionStmtKindJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 26);

/**
 * @generated from enum pg_query.ViewCheckOption
 */
export enum ViewCheckOption {
  /**
   * @generated from enum value: VIEW_CHECK_OPTION_UNDEFINED = 0;
   */
  VIEW_CHECK_OPTION_UNDEFINED = 0,

  /**
   * @generated from enum value: NO_CHECK_OPTION = 1;
   */
  NO_CHECK_OPTION = 1,

  /**
   * @generated from enum value: LOCAL_CHECK_OPTION = 2;
   */
  LOCAL_CHECK_OPTION = 2,

  /**
   * @generated from enum value: CASCADED_CHECK_OPTION = 3;
   */
  CASCADED_CHECK_OPTION = 3,
}

/**
 * @generated from enum pg_query.ViewCheckOption
 */
export type ViewCheckOptionJson = "VIEW_CHECK_OPTION_UNDEFINED" | "NO_CHECK_OPTION" | "LOCAL_CHECK_OPTION" | "CASCADED_CHECK_OPTION";

/**
 * Describes the enum pg_query.ViewCheckOption.
 */
export const ViewCheckOptionSchema: GenEnum<ViewCheckOption, ViewCheckOptionJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 27);

/**
 * @generated from enum pg_query.DiscardMode
 */
export enum DiscardMode {
  /**
   * @generated from enum value: DISCARD_MODE_UNDEFINED = 0;
   */
  DISCARD_MODE_UNDEFINED = 0,

  /**
   * @generated from enum value: DISCARD_ALL = 1;
   */
  DISCARD_ALL = 1,

  /**
   * @generated from enum value: DISCARD_PLANS = 2;
   */
  DISCARD_PLANS = 2,

  /**
   * @generated from enum value: DISCARD_SEQUENCES = 3;
   */
  DISCARD_SEQUENCES = 3,

  /**
   * @generated from enum value: DISCARD_TEMP = 4;
   */
  DISCARD_TEMP = 4,
}

/**
 * @generated from enum pg_query.DiscardMode
 */
export type DiscardModeJson = "DISCARD_MODE_UNDEFINED" | "DISCARD_ALL" | "DISCARD_PLANS" | "DISCARD_SEQUENCES" | "DISCARD_TEMP";

/**
 * Describes the enum pg_query.DiscardMode.
 */
export const DiscardModeSchema: GenEnum<DiscardMode, DiscardModeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 28);

/**
 * @generated from enum pg_query.ReindexObjectType
 */
export enum ReindexObjectType {
  /**
   * @generated from enum value: REINDEX_OBJECT_TYPE_UNDEFINED = 0;
   */
  REINDEX_OBJECT_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: REINDEX_OBJECT_INDEX = 1;
   */
  REINDEX_OBJECT_INDEX = 1,

  /**
   * @generated from enum value: REINDEX_OBJECT_TABLE = 2;
   */
  REINDEX_OBJECT_TABLE = 2,

  /**
   * @generated from enum value: REINDEX_OBJECT_SCHEMA = 3;
   */
  REINDEX_OBJECT_SCHEMA = 3,

  /**
   * @generated from enum value: REINDEX_OBJECT_SYSTEM = 4;
   */
  REINDEX_OBJECT_SYSTEM = 4,

  /**
   * @generated from enum value: REINDEX_OBJECT_DATABASE = 5;
   */
  REINDEX_OBJECT_DATABASE = 5,
}

/**
 * @generated from enum pg_query.ReindexObjectType
 */
export type ReindexObjectTypeJson = "REINDEX_OBJECT_TYPE_UNDEFINED" | "REINDEX_OBJECT_INDEX" | "REINDEX_OBJECT_TABLE" | "REINDEX_OBJECT_SCHEMA" | "REINDEX_OBJECT_SYSTEM" | "REINDEX_OBJECT_DATABASE";

/**
 * Describes the enum pg_query.ReindexObjectType.
 */
export const ReindexObjectTypeSchema: GenEnum<ReindexObjectType, ReindexObjectTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 29);

/**
 * @generated from enum pg_query.AlterTSConfigType
 */
export enum AlterTSConfigType {
  /**
   * @generated from enum value: ALTER_TSCONFIG_TYPE_UNDEFINED = 0;
   */
  ALTER_TSCONFIG_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: ALTER_TSCONFIG_ADD_MAPPING = 1;
   */
  ALTER_TSCONFIG_ADD_MAPPING = 1,

  /**
   * @generated from enum value: ALTER_TSCONFIG_ALTER_MAPPING_FOR_TOKEN = 2;
   */
  ALTER_TSCONFIG_ALTER_MAPPING_FOR_TOKEN = 2,

  /**
   * @generated from enum value: ALTER_TSCONFIG_REPLACE_DICT = 3;
   */
  ALTER_TSCONFIG_REPLACE_DICT = 3,

  /**
   * @generated from enum value: ALTER_TSCONFIG_REPLACE_DICT_FOR_TOKEN = 4;
   */
  ALTER_TSCONFIG_REPLACE_DICT_FOR_TOKEN = 4,

  /**
   * @generated from enum value: ALTER_TSCONFIG_DROP_MAPPING = 5;
   */
  ALTER_TSCONFIG_DROP_MAPPING = 5,
}

/**
 * @generated from enum pg_query.AlterTSConfigType
 */
export type AlterTSConfigTypeJson = "ALTER_TSCONFIG_TYPE_UNDEFINED" | "ALTER_TSCONFIG_ADD_MAPPING" | "ALTER_TSCONFIG_ALTER_MAPPING_FOR_TOKEN" | "ALTER_TSCONFIG_REPLACE_DICT" | "ALTER_TSCONFIG_REPLACE_DICT_FOR_TOKEN" | "ALTER_TSCONFIG_DROP_MAPPING";

/**
 * Describes the enum pg_query.AlterTSConfigType.
 */
export const AlterTSConfigTypeSchema: GenEnum<AlterTSConfigType, AlterTSConfigTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 30);

/**
 * @generated from enum pg_query.PublicationObjSpecType
 */
export enum PublicationObjSpecType {
  /**
   * @generated from enum value: PUBLICATION_OBJ_SPEC_TYPE_UNDEFINED = 0;
   */
  PUBLICATION_OBJ_SPEC_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: PUBLICATIONOBJ_TABLE = 1;
   */
  PUBLICATIONOBJ_TABLE = 1,

  /**
   * @generated from enum value: PUBLICATIONOBJ_TABLES_IN_SCHEMA = 2;
   */
  PUBLICATIONOBJ_TABLES_IN_SCHEMA = 2,

  /**
   * @generated from enum value: PUBLICATIONOBJ_TABLES_IN_CUR_SCHEMA = 3;
   */
  PUBLICATIONOBJ_TABLES_IN_CUR_SCHEMA = 3,

  /**
   * @generated from enum value: PUBLICATIONOBJ_CONTINUATION = 4;
   */
  PUBLICATIONOBJ_CONTINUATION = 4,
}

/**
 * @generated from enum pg_query.PublicationObjSpecType
 */
export type PublicationObjSpecTypeJson = "PUBLICATION_OBJ_SPEC_TYPE_UNDEFINED" | "PUBLICATIONOBJ_TABLE" | "PUBLICATIONOBJ_TABLES_IN_SCHEMA" | "PUBLICATIONOBJ_TABLES_IN_CUR_SCHEMA" | "PUBLICATIONOBJ_CONTINUATION";

/**
 * Describes the enum pg_query.PublicationObjSpecType.
 */
export const PublicationObjSpecTypeSchema: GenEnum<PublicationObjSpecType, PublicationObjSpecTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 31);

/**
 * @generated from enum pg_query.AlterPublicationAction
 */
export enum AlterPublicationAction {
  /**
   * @generated from enum value: ALTER_PUBLICATION_ACTION_UNDEFINED = 0;
   */
  ALTER_PUBLICATION_ACTION_UNDEFINED = 0,

  /**
   * @generated from enum value: AP_AddObjects = 1;
   */
  AP_AddObjects = 1,

  /**
   * @generated from enum value: AP_DropObjects = 2;
   */
  AP_DropObjects = 2,

  /**
   * @generated from enum value: AP_SetObjects = 3;
   */
  AP_SetObjects = 3,
}

/**
 * @generated from enum pg_query.AlterPublicationAction
 */
export type AlterPublicationActionJson = "ALTER_PUBLICATION_ACTION_UNDEFINED" | "AP_AddObjects" | "AP_DropObjects" | "AP_SetObjects";

/**
 * Describes the enum pg_query.AlterPublicationAction.
 */
export const AlterPublicationActionSchema: GenEnum<AlterPublicationAction, AlterPublicationActionJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 32);

/**
 * @generated from enum pg_query.AlterSubscriptionType
 */
export enum AlterSubscriptionType {
  /**
   * @generated from enum value: ALTER_SUBSCRIPTION_TYPE_UNDEFINED = 0;
   */
  ALTER_SUBSCRIPTION_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: ALTER_SUBSCRIPTION_OPTIONS = 1;
   */
  ALTER_SUBSCRIPTION_OPTIONS = 1,

  /**
   * @generated from enum value: ALTER_SUBSCRIPTION_CONNECTION = 2;
   */
  ALTER_SUBSCRIPTION_CONNECTION = 2,

  /**
   * @generated from enum value: ALTER_SUBSCRIPTION_SET_PUBLICATION = 3;
   */
  ALTER_SUBSCRIPTION_SET_PUBLICATION = 3,

  /**
   * @generated from enum value: ALTER_SUBSCRIPTION_ADD_PUBLICATION = 4;
   */
  ALTER_SUBSCRIPTION_ADD_PUBLICATION = 4,

  /**
   * @generated from enum value: ALTER_SUBSCRIPTION_DROP_PUBLICATION = 5;
   */
  ALTER_SUBSCRIPTION_DROP_PUBLICATION = 5,

  /**
   * @generated from enum value: ALTER_SUBSCRIPTION_REFRESH = 6;
   */
  ALTER_SUBSCRIPTION_REFRESH = 6,

  /**
   * @generated from enum value: ALTER_SUBSCRIPTION_ENABLED = 7;
   */
  ALTER_SUBSCRIPTION_ENABLED = 7,

  /**
   * @generated from enum value: ALTER_SUBSCRIPTION_SKIP = 8;
   */
  ALTER_SUBSCRIPTION_SKIP = 8,
}

/**
 * @generated from enum pg_query.AlterSubscriptionType
 */
export type AlterSubscriptionTypeJson = "ALTER_SUBSCRIPTION_TYPE_UNDEFINED" | "ALTER_SUBSCRIPTION_OPTIONS" | "ALTER_SUBSCRIPTION_CONNECTION" | "ALTER_SUBSCRIPTION_SET_PUBLICATION" | "ALTER_SUBSCRIPTION_ADD_PUBLICATION" | "ALTER_SUBSCRIPTION_DROP_PUBLICATION" | "ALTER_SUBSCRIPTION_REFRESH" | "ALTER_SUBSCRIPTION_ENABLED" | "ALTER_SUBSCRIPTION_SKIP";

/**
 * Describes the enum pg_query.AlterSubscriptionType.
 */
export const AlterSubscriptionTypeSchema: GenEnum<AlterSubscriptionType, AlterSubscriptionTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 33);

/**
 * @generated from enum pg_query.OnCommitAction
 */
export enum OnCommitAction {
  /**
   * @generated from enum value: ON_COMMIT_ACTION_UNDEFINED = 0;
   */
  ON_COMMIT_ACTION_UNDEFINED = 0,

  /**
   * @generated from enum value: ONCOMMIT_NOOP = 1;
   */
  ONCOMMIT_NOOP = 1,

  /**
   * @generated from enum value: ONCOMMIT_PRESERVE_ROWS = 2;
   */
  ONCOMMIT_PRESERVE_ROWS = 2,

  /**
   * @generated from enum value: ONCOMMIT_DELETE_ROWS = 3;
   */
  ONCOMMIT_DELETE_ROWS = 3,

  /**
   * @generated from enum value: ONCOMMIT_DROP = 4;
   */
  ONCOMMIT_DROP = 4,
}

/**
 * @generated from enum pg_query.OnCommitAction
 */
export type OnCommitActionJson = "ON_COMMIT_ACTION_UNDEFINED" | "ONCOMMIT_NOOP" | "ONCOMMIT_PRESERVE_ROWS" | "ONCOMMIT_DELETE_ROWS" | "ONCOMMIT_DROP";

/**
 * Describes the enum pg_query.OnCommitAction.
 */
export const OnCommitActionSchema: GenEnum<OnCommitAction, OnCommitActionJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 34);

/**
 * @generated from enum pg_query.ParamKind
 */
export enum ParamKind {
  /**
   * @generated from enum value: PARAM_KIND_UNDEFINED = 0;
   */
  PARAM_KIND_UNDEFINED = 0,

  /**
   * @generated from enum value: PARAM_EXTERN = 1;
   */
  PARAM_EXTERN = 1,

  /**
   * @generated from enum value: PARAM_EXEC = 2;
   */
  PARAM_EXEC = 2,

  /**
   * @generated from enum value: PARAM_SUBLINK = 3;
   */
  PARAM_SUBLINK = 3,

  /**
   * @generated from enum value: PARAM_MULTIEXPR = 4;
   */
  PARAM_MULTIEXPR = 4,
}

/**
 * @generated from enum pg_query.ParamKind
 */
export type ParamKindJson = "PARAM_KIND_UNDEFINED" | "PARAM_EXTERN" | "PARAM_EXEC" | "PARAM_SUBLINK" | "PARAM_MULTIEXPR";

/**
 * Describes the enum pg_query.ParamKind.
 */
export const ParamKindSchema: GenEnum<ParamKind, ParamKindJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 35);

/**
 * @generated from enum pg_query.CoercionContext
 */
export enum CoercionContext {
  /**
   * @generated from enum value: COERCION_CONTEXT_UNDEFINED = 0;
   */
  COERCION_CONTEXT_UNDEFINED = 0,

  /**
   * @generated from enum value: COERCION_IMPLICIT = 1;
   */
  COERCION_IMPLICIT = 1,

  /**
   * @generated from enum value: COERCION_ASSIGNMENT = 2;
   */
  COERCION_ASSIGNMENT = 2,

  /**
   * @generated from enum value: COERCION_PLPGSQL = 3;
   */
  COERCION_PLPGSQL = 3,

  /**
   * @generated from enum value: COERCION_EXPLICIT = 4;
   */
  COERCION_EXPLICIT = 4,
}

/**
 * @generated from enum pg_query.CoercionContext
 */
export type CoercionContextJson = "COERCION_CONTEXT_UNDEFINED" | "COERCION_IMPLICIT" | "COERCION_ASSIGNMENT" | "COERCION_PLPGSQL" | "COERCION_EXPLICIT";

/**
 * Describes the enum pg_query.CoercionContext.
 */
export const CoercionContextSchema: GenEnum<CoercionContext, CoercionContextJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 36);

/**
 * @generated from enum pg_query.CoercionForm
 */
export enum CoercionForm {
  /**
   * @generated from enum value: COERCION_FORM_UNDEFINED = 0;
   */
  COERCION_FORM_UNDEFINED = 0,

  /**
   * @generated from enum value: COERCE_EXPLICIT_CALL = 1;
   */
  COERCE_EXPLICIT_CALL = 1,

  /**
   * @generated from enum value: COERCE_EXPLICIT_CAST = 2;
   */
  COERCE_EXPLICIT_CAST = 2,

  /**
   * @generated from enum value: COERCE_IMPLICIT_CAST = 3;
   */
  COERCE_IMPLICIT_CAST = 3,

  /**
   * @generated from enum value: COERCE_SQL_SYNTAX = 4;
   */
  COERCE_SQL_SYNTAX = 4,
}

/**
 * @generated from enum pg_query.CoercionForm
 */
export type CoercionFormJson = "COERCION_FORM_UNDEFINED" | "COERCE_EXPLICIT_CALL" | "COERCE_EXPLICIT_CAST" | "COERCE_IMPLICIT_CAST" | "COERCE_SQL_SYNTAX";

/**
 * Describes the enum pg_query.CoercionForm.
 */
export const CoercionFormSchema: GenEnum<CoercionForm, CoercionFormJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 37);

/**
 * @generated from enum pg_query.BoolExprType
 */
export enum BoolExprType {
  /**
   * @generated from enum value: BOOL_EXPR_TYPE_UNDEFINED = 0;
   */
  BOOL_EXPR_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: AND_EXPR = 1;
   */
  AND_EXPR = 1,

  /**
   * @generated from enum value: OR_EXPR = 2;
   */
  OR_EXPR = 2,

  /**
   * @generated from enum value: NOT_EXPR = 3;
   */
  NOT_EXPR = 3,
}

/**
 * @generated from enum pg_query.BoolExprType
 */
export type BoolExprTypeJson = "BOOL_EXPR_TYPE_UNDEFINED" | "AND_EXPR" | "OR_EXPR" | "NOT_EXPR";

/**
 * Describes the enum pg_query.BoolExprType.
 */
export const BoolExprTypeSchema: GenEnum<BoolExprType, BoolExprTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 38);

/**
 * @generated from enum pg_query.SubLinkType
 */
export enum SubLinkType {
  /**
   * @generated from enum value: SUB_LINK_TYPE_UNDEFINED = 0;
   */
  SUB_LINK_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: EXISTS_SUBLINK = 1;
   */
  EXISTS_SUBLINK = 1,

  /**
   * @generated from enum value: ALL_SUBLINK = 2;
   */
  ALL_SUBLINK = 2,

  /**
   * @generated from enum value: ANY_SUBLINK = 3;
   */
  ANY_SUBLINK = 3,

  /**
   * @generated from enum value: ROWCOMPARE_SUBLINK = 4;
   */
  ROWCOMPARE_SUBLINK = 4,

  /**
   * @generated from enum value: EXPR_SUBLINK = 5;
   */
  EXPR_SUBLINK = 5,

  /**
   * @generated from enum value: MULTIEXPR_SUBLINK = 6;
   */
  MULTIEXPR_SUBLINK = 6,

  /**
   * @generated from enum value: ARRAY_SUBLINK = 7;
   */
  ARRAY_SUBLINK = 7,

  /**
   * @generated from enum value: CTE_SUBLINK = 8;
   */
  CTE_SUBLINK = 8,
}

/**
 * @generated from enum pg_query.SubLinkType
 */
export type SubLinkTypeJson = "SUB_LINK_TYPE_UNDEFINED" | "EXISTS_SUBLINK" | "ALL_SUBLINK" | "ANY_SUBLINK" | "ROWCOMPARE_SUBLINK" | "EXPR_SUBLINK" | "MULTIEXPR_SUBLINK" | "ARRAY_SUBLINK" | "CTE_SUBLINK";

/**
 * Describes the enum pg_query.SubLinkType.
 */
export const SubLinkTypeSchema: GenEnum<SubLinkType, SubLinkTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 39);

/**
 * @generated from enum pg_query.RowCompareType
 */
export enum RowCompareType {
  /**
   * @generated from enum value: ROW_COMPARE_TYPE_UNDEFINED = 0;
   */
  ROW_COMPARE_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: ROWCOMPARE_LT = 1;
   */
  ROWCOMPARE_LT = 1,

  /**
   * @generated from enum value: ROWCOMPARE_LE = 2;
   */
  ROWCOMPARE_LE = 2,

  /**
   * @generated from enum value: ROWCOMPARE_EQ = 3;
   */
  ROWCOMPARE_EQ = 3,

  /**
   * @generated from enum value: ROWCOMPARE_GE = 4;
   */
  ROWCOMPARE_GE = 4,

  /**
   * @generated from enum value: ROWCOMPARE_GT = 5;
   */
  ROWCOMPARE_GT = 5,

  /**
   * @generated from enum value: ROWCOMPARE_NE = 6;
   */
  ROWCOMPARE_NE = 6,
}

/**
 * @generated from enum pg_query.RowCompareType
 */
export type RowCompareTypeJson = "ROW_COMPARE_TYPE_UNDEFINED" | "ROWCOMPARE_LT" | "ROWCOMPARE_LE" | "ROWCOMPARE_EQ" | "ROWCOMPARE_GE" | "ROWCOMPARE_GT" | "ROWCOMPARE_NE";

/**
 * Describes the enum pg_query.RowCompareType.
 */
export const RowCompareTypeSchema: GenEnum<RowCompareType, RowCompareTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 40);

/**
 * @generated from enum pg_query.MinMaxOp
 */
export enum MinMaxOp {
  /**
   * @generated from enum value: MIN_MAX_OP_UNDEFINED = 0;
   */
  MIN_MAX_OP_UNDEFINED = 0,

  /**
   * @generated from enum value: IS_GREATEST = 1;
   */
  IS_GREATEST = 1,

  /**
   * @generated from enum value: IS_LEAST = 2;
   */
  IS_LEAST = 2,
}

/**
 * @generated from enum pg_query.MinMaxOp
 */
export type MinMaxOpJson = "MIN_MAX_OP_UNDEFINED" | "IS_GREATEST" | "IS_LEAST";

/**
 * Describes the enum pg_query.MinMaxOp.
 */
export const MinMaxOpSchema: GenEnum<MinMaxOp, MinMaxOpJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 41);

/**
 * @generated from enum pg_query.SQLValueFunctionOp
 */
export enum SQLValueFunctionOp {
  /**
   * @generated from enum value: SQLVALUE_FUNCTION_OP_UNDEFINED = 0;
   */
  SQLVALUE_FUNCTION_OP_UNDEFINED = 0,

  /**
   * @generated from enum value: SVFOP_CURRENT_DATE = 1;
   */
  SVFOP_CURRENT_DATE = 1,

  /**
   * @generated from enum value: SVFOP_CURRENT_TIME = 2;
   */
  SVFOP_CURRENT_TIME = 2,

  /**
   * @generated from enum value: SVFOP_CURRENT_TIME_N = 3;
   */
  SVFOP_CURRENT_TIME_N = 3,

  /**
   * @generated from enum value: SVFOP_CURRENT_TIMESTAMP = 4;
   */
  SVFOP_CURRENT_TIMESTAMP = 4,

  /**
   * @generated from enum value: SVFOP_CURRENT_TIMESTAMP_N = 5;
   */
  SVFOP_CURRENT_TIMESTAMP_N = 5,

  /**
   * @generated from enum value: SVFOP_LOCALTIME = 6;
   */
  SVFOP_LOCALTIME = 6,

  /**
   * @generated from enum value: SVFOP_LOCALTIME_N = 7;
   */
  SVFOP_LOCALTIME_N = 7,

  /**
   * @generated from enum value: SVFOP_LOCALTIMESTAMP = 8;
   */
  SVFOP_LOCALTIMESTAMP = 8,

  /**
   * @generated from enum value: SVFOP_LOCALTIMESTAMP_N = 9;
   */
  SVFOP_LOCALTIMESTAMP_N = 9,

  /**
   * @generated from enum value: SVFOP_CURRENT_ROLE = 10;
   */
  SVFOP_CURRENT_ROLE = 10,

  /**
   * @generated from enum value: SVFOP_CURRENT_USER = 11;
   */
  SVFOP_CURRENT_USER = 11,

  /**
   * @generated from enum value: SVFOP_USER = 12;
   */
  SVFOP_USER = 12,

  /**
   * @generated from enum value: SVFOP_SESSION_USER = 13;
   */
  SVFOP_SESSION_USER = 13,

  /**
   * @generated from enum value: SVFOP_CURRENT_CATALOG = 14;
   */
  SVFOP_CURRENT_CATALOG = 14,

  /**
   * @generated from enum value: SVFOP_CURRENT_SCHEMA = 15;
   */
  SVFOP_CURRENT_SCHEMA = 15,
}

/**
 * @generated from enum pg_query.SQLValueFunctionOp
 */
export type SQLValueFunctionOpJson = "SQLVALUE_FUNCTION_OP_UNDEFINED" | "SVFOP_CURRENT_DATE" | "SVFOP_CURRENT_TIME" | "SVFOP_CURRENT_TIME_N" | "SVFOP_CURRENT_TIMESTAMP" | "SVFOP_CURRENT_TIMESTAMP_N" | "SVFOP_LOCALTIME" | "SVFOP_LOCALTIME_N" | "SVFOP_LOCALTIMESTAMP" | "SVFOP_LOCALTIMESTAMP_N" | "SVFOP_CURRENT_ROLE" | "SVFOP_CURRENT_USER" | "SVFOP_USER" | "SVFOP_SESSION_USER" | "SVFOP_CURRENT_CATALOG" | "SVFOP_CURRENT_SCHEMA";

/**
 * Describes the enum pg_query.SQLValueFunctionOp.
 */
export const SQLValueFunctionOpSchema: GenEnum<SQLValueFunctionOp, SQLValueFunctionOpJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 42);

/**
 * @generated from enum pg_query.XmlExprOp
 */
export enum XmlExprOp {
  /**
   * @generated from enum value: XML_EXPR_OP_UNDEFINED = 0;
   */
  XML_EXPR_OP_UNDEFINED = 0,

  /**
   * @generated from enum value: IS_XMLCONCAT = 1;
   */
  IS_XMLCONCAT = 1,

  /**
   * @generated from enum value: IS_XMLELEMENT = 2;
   */
  IS_XMLELEMENT = 2,

  /**
   * @generated from enum value: IS_XMLFOREST = 3;
   */
  IS_XMLFOREST = 3,

  /**
   * @generated from enum value: IS_XMLPARSE = 4;
   */
  IS_XMLPARSE = 4,

  /**
   * @generated from enum value: IS_XMLPI = 5;
   */
  IS_XMLPI = 5,

  /**
   * @generated from enum value: IS_XMLROOT = 6;
   */
  IS_XMLROOT = 6,

  /**
   * @generated from enum value: IS_XMLSERIALIZE = 7;
   */
  IS_XMLSERIALIZE = 7,

  /**
   * @generated from enum value: IS_DOCUMENT = 8;
   */
  IS_DOCUMENT = 8,
}

/**
 * @generated from enum pg_query.XmlExprOp
 */
export type XmlExprOpJson = "XML_EXPR_OP_UNDEFINED" | "IS_XMLCONCAT" | "IS_XMLELEMENT" | "IS_XMLFOREST" | "IS_XMLPARSE" | "IS_XMLPI" | "IS_XMLROOT" | "IS_XMLSERIALIZE" | "IS_DOCUMENT";

/**
 * Describes the enum pg_query.XmlExprOp.
 */
export const XmlExprOpSchema: GenEnum<XmlExprOp, XmlExprOpJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 43);

/**
 * @generated from enum pg_query.XmlOptionType
 */
export enum XmlOptionType {
  /**
   * @generated from enum value: XML_OPTION_TYPE_UNDEFINED = 0;
   */
  XML_OPTION_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: XMLOPTION_DOCUMENT = 1;
   */
  XMLOPTION_DOCUMENT = 1,

  /**
   * @generated from enum value: XMLOPTION_CONTENT = 2;
   */
  XMLOPTION_CONTENT = 2,
}

/**
 * @generated from enum pg_query.XmlOptionType
 */
export type XmlOptionTypeJson = "XML_OPTION_TYPE_UNDEFINED" | "XMLOPTION_DOCUMENT" | "XMLOPTION_CONTENT";

/**
 * Describes the enum pg_query.XmlOptionType.
 */
export const XmlOptionTypeSchema: GenEnum<XmlOptionType, XmlOptionTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 44);

/**
 * @generated from enum pg_query.JsonEncoding
 */
export enum JsonEncoding {
  /**
   * @generated from enum value: JSON_ENCODING_UNDEFINED = 0;
   */
  JSON_ENCODING_UNDEFINED = 0,

  /**
   * @generated from enum value: JS_ENC_DEFAULT = 1;
   */
  JS_ENC_DEFAULT = 1,

  /**
   * @generated from enum value: JS_ENC_UTF8 = 2;
   */
  JS_ENC_UTF8 = 2,

  /**
   * @generated from enum value: JS_ENC_UTF16 = 3;
   */
  JS_ENC_UTF16 = 3,

  /**
   * @generated from enum value: JS_ENC_UTF32 = 4;
   */
  JS_ENC_UTF32 = 4,
}

/**
 * @generated from enum pg_query.JsonEncoding
 */
export type JsonEncodingJson = "JSON_ENCODING_UNDEFINED" | "JS_ENC_DEFAULT" | "JS_ENC_UTF8" | "JS_ENC_UTF16" | "JS_ENC_UTF32";

/**
 * Describes the enum pg_query.JsonEncoding.
 */
export const JsonEncodingSchema: GenEnum<JsonEncoding, JsonEncodingJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 45);

/**
 * @generated from enum pg_query.JsonFormatType
 */
export enum JsonFormatType {
  /**
   * @generated from enum value: JSON_FORMAT_TYPE_UNDEFINED = 0;
   */
  JSON_FORMAT_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: JS_FORMAT_DEFAULT = 1;
   */
  JS_FORMAT_DEFAULT = 1,

  /**
   * @generated from enum value: JS_FORMAT_JSON = 2;
   */
  JS_FORMAT_JSON = 2,

  /**
   * @generated from enum value: JS_FORMAT_JSONB = 3;
   */
  JS_FORMAT_JSONB = 3,
}

/**
 * @generated from enum pg_query.JsonFormatType
 */
export type JsonFormatTypeJson = "JSON_FORMAT_TYPE_UNDEFINED" | "JS_FORMAT_DEFAULT" | "JS_FORMAT_JSON" | "JS_FORMAT_JSONB";

/**
 * Describes the enum pg_query.JsonFormatType.
 */
export const JsonFormatTypeSchema: GenEnum<JsonFormatType, JsonFormatTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 46);

/**
 * @generated from enum pg_query.JsonConstructorType
 */
export enum JsonConstructorType {
  /**
   * @generated from enum value: JSON_CONSTRUCTOR_TYPE_UNDEFINED = 0;
   */
  JSON_CONSTRUCTOR_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: JSCTOR_JSON_OBJECT = 1;
   */
  JSCTOR_JSON_OBJECT = 1,

  /**
   * @generated from enum value: JSCTOR_JSON_ARRAY = 2;
   */
  JSCTOR_JSON_ARRAY = 2,

  /**
   * @generated from enum value: JSCTOR_JSON_OBJECTAGG = 3;
   */
  JSCTOR_JSON_OBJECTAGG = 3,

  /**
   * @generated from enum value: JSCTOR_JSON_ARRAYAGG = 4;
   */
  JSCTOR_JSON_ARRAYAGG = 4,
}

/**
 * @generated from enum pg_query.JsonConstructorType
 */
export type JsonConstructorTypeJson = "JSON_CONSTRUCTOR_TYPE_UNDEFINED" | "JSCTOR_JSON_OBJECT" | "JSCTOR_JSON_ARRAY" | "JSCTOR_JSON_OBJECTAGG" | "JSCTOR_JSON_ARRAYAGG";

/**
 * Describes the enum pg_query.JsonConstructorType.
 */
export const JsonConstructorTypeSchema: GenEnum<JsonConstructorType, JsonConstructorTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 47);

/**
 * @generated from enum pg_query.JsonValueType
 */
export enum JsonValueType {
  /**
   * @generated from enum value: JSON_VALUE_TYPE_UNDEFINED = 0;
   */
  JSON_VALUE_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: JS_TYPE_ANY = 1;
   */
  JS_TYPE_ANY = 1,

  /**
   * @generated from enum value: JS_TYPE_OBJECT = 2;
   */
  JS_TYPE_OBJECT = 2,

  /**
   * @generated from enum value: JS_TYPE_ARRAY = 3;
   */
  JS_TYPE_ARRAY = 3,

  /**
   * @generated from enum value: JS_TYPE_SCALAR = 4;
   */
  JS_TYPE_SCALAR = 4,
}

/**
 * @generated from enum pg_query.JsonValueType
 */
export type JsonValueTypeJson = "JSON_VALUE_TYPE_UNDEFINED" | "JS_TYPE_ANY" | "JS_TYPE_OBJECT" | "JS_TYPE_ARRAY" | "JS_TYPE_SCALAR";

/**
 * Describes the enum pg_query.JsonValueType.
 */
export const JsonValueTypeSchema: GenEnum<JsonValueType, JsonValueTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 48);

/**
 * @generated from enum pg_query.NullTestType
 */
export enum NullTestType {
  /**
   * @generated from enum value: NULL_TEST_TYPE_UNDEFINED = 0;
   */
  NULL_TEST_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: IS_NULL = 1;
   */
  IS_NULL = 1,

  /**
   * @generated from enum value: IS_NOT_NULL = 2;
   */
  IS_NOT_NULL = 2,
}

/**
 * @generated from enum pg_query.NullTestType
 */
export type NullTestTypeJson = "NULL_TEST_TYPE_UNDEFINED" | "IS_NULL" | "IS_NOT_NULL";

/**
 * Describes the enum pg_query.NullTestType.
 */
export const NullTestTypeSchema: GenEnum<NullTestType, NullTestTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 49);

/**
 * @generated from enum pg_query.BoolTestType
 */
export enum BoolTestType {
  /**
   * @generated from enum value: BOOL_TEST_TYPE_UNDEFINED = 0;
   */
  BOOL_TEST_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: IS_TRUE = 1;
   */
  IS_TRUE = 1,

  /**
   * @generated from enum value: IS_NOT_TRUE = 2;
   */
  IS_NOT_TRUE = 2,

  /**
   * @generated from enum value: IS_FALSE = 3;
   */
  IS_FALSE = 3,

  /**
   * @generated from enum value: IS_NOT_FALSE = 4;
   */
  IS_NOT_FALSE = 4,

  /**
   * @generated from enum value: IS_UNKNOWN = 5;
   */
  IS_UNKNOWN = 5,

  /**
   * @generated from enum value: IS_NOT_UNKNOWN = 6;
   */
  IS_NOT_UNKNOWN = 6,
}

/**
 * @generated from enum pg_query.BoolTestType
 */
export type BoolTestTypeJson = "BOOL_TEST_TYPE_UNDEFINED" | "IS_TRUE" | "IS_NOT_TRUE" | "IS_FALSE" | "IS_NOT_FALSE" | "IS_UNKNOWN" | "IS_NOT_UNKNOWN";

/**
 * Describes the enum pg_query.BoolTestType.
 */
export const BoolTestTypeSchema: GenEnum<BoolTestType, BoolTestTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 50);

/**
 * @generated from enum pg_query.CmdType
 */
export enum CmdType {
  /**
   * @generated from enum value: CMD_TYPE_UNDEFINED = 0;
   */
  CMD_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: CMD_UNKNOWN = 1;
   */
  CMD_UNKNOWN = 1,

  /**
   * @generated from enum value: CMD_SELECT = 2;
   */
  CMD_SELECT = 2,

  /**
   * @generated from enum value: CMD_UPDATE = 3;
   */
  CMD_UPDATE = 3,

  /**
   * @generated from enum value: CMD_INSERT = 4;
   */
  CMD_INSERT = 4,

  /**
   * @generated from enum value: CMD_DELETE = 5;
   */
  CMD_DELETE = 5,

  /**
   * @generated from enum value: CMD_MERGE = 6;
   */
  CMD_MERGE = 6,

  /**
   * @generated from enum value: CMD_UTILITY = 7;
   */
  CMD_UTILITY = 7,

  /**
   * @generated from enum value: CMD_NOTHING = 8;
   */
  CMD_NOTHING = 8,
}

/**
 * @generated from enum pg_query.CmdType
 */
export type CmdTypeJson = "CMD_TYPE_UNDEFINED" | "CMD_UNKNOWN" | "CMD_SELECT" | "CMD_UPDATE" | "CMD_INSERT" | "CMD_DELETE" | "CMD_MERGE" | "CMD_UTILITY" | "CMD_NOTHING";

/**
 * Describes the enum pg_query.CmdType.
 */
export const CmdTypeSchema: GenEnum<CmdType, CmdTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 51);

/**
 * @generated from enum pg_query.JoinType
 */
export enum JoinType {
  /**
   * @generated from enum value: JOIN_TYPE_UNDEFINED = 0;
   */
  JOIN_TYPE_UNDEFINED = 0,

  /**
   * @generated from enum value: JOIN_INNER = 1;
   */
  JOIN_INNER = 1,

  /**
   * @generated from enum value: JOIN_LEFT = 2;
   */
  JOIN_LEFT = 2,

  /**
   * @generated from enum value: JOIN_FULL = 3;
   */
  JOIN_FULL = 3,

  /**
   * @generated from enum value: JOIN_RIGHT = 4;
   */
  JOIN_RIGHT = 4,

  /**
   * @generated from enum value: JOIN_SEMI = 5;
   */
  JOIN_SEMI = 5,

  /**
   * @generated from enum value: JOIN_ANTI = 6;
   */
  JOIN_ANTI = 6,

  /**
   * @generated from enum value: JOIN_RIGHT_ANTI = 7;
   */
  JOIN_RIGHT_ANTI = 7,

  /**
   * @generated from enum value: JOIN_UNIQUE_OUTER = 8;
   */
  JOIN_UNIQUE_OUTER = 8,

  /**
   * @generated from enum value: JOIN_UNIQUE_INNER = 9;
   */
  JOIN_UNIQUE_INNER = 9,
}

/**
 * @generated from enum pg_query.JoinType
 */
export type JoinTypeJson = "JOIN_TYPE_UNDEFINED" | "JOIN_INNER" | "JOIN_LEFT" | "JOIN_FULL" | "JOIN_RIGHT" | "JOIN_SEMI" | "JOIN_ANTI" | "JOIN_RIGHT_ANTI" | "JOIN_UNIQUE_OUTER" | "JOIN_UNIQUE_INNER";

/**
 * Describes the enum pg_query.JoinType.
 */
export const JoinTypeSchema: GenEnum<JoinType, JoinTypeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 52);

/**
 * @generated from enum pg_query.AggStrategy
 */
export enum AggStrategy {
  /**
   * @generated from enum value: AGG_STRATEGY_UNDEFINED = 0;
   */
  AGG_STRATEGY_UNDEFINED = 0,

  /**
   * @generated from enum value: AGG_PLAIN = 1;
   */
  AGG_PLAIN = 1,

  /**
   * @generated from enum value: AGG_SORTED = 2;
   */
  AGG_SORTED = 2,

  /**
   * @generated from enum value: AGG_HASHED = 3;
   */
  AGG_HASHED = 3,

  /**
   * @generated from enum value: AGG_MIXED = 4;
   */
  AGG_MIXED = 4,
}

/**
 * @generated from enum pg_query.AggStrategy
 */
export type AggStrategyJson = "AGG_STRATEGY_UNDEFINED" | "AGG_PLAIN" | "AGG_SORTED" | "AGG_HASHED" | "AGG_MIXED";

/**
 * Describes the enum pg_query.AggStrategy.
 */
export const AggStrategySchema: GenEnum<AggStrategy, AggStrategyJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 53);

/**
 * @generated from enum pg_query.AggSplit
 */
export enum AggSplit {
  /**
   * @generated from enum value: AGG_SPLIT_UNDEFINED = 0;
   */
  AGG_SPLIT_UNDEFINED = 0,

  /**
   * @generated from enum value: AGGSPLIT_SIMPLE = 1;
   */
  AGGSPLIT_SIMPLE = 1,

  /**
   * @generated from enum value: AGGSPLIT_INITIAL_SERIAL = 2;
   */
  AGGSPLIT_INITIAL_SERIAL = 2,

  /**
   * @generated from enum value: AGGSPLIT_FINAL_DESERIAL = 3;
   */
  AGGSPLIT_FINAL_DESERIAL = 3,
}

/**
 * @generated from enum pg_query.AggSplit
 */
export type AggSplitJson = "AGG_SPLIT_UNDEFINED" | "AGGSPLIT_SIMPLE" | "AGGSPLIT_INITIAL_SERIAL" | "AGGSPLIT_FINAL_DESERIAL";

/**
 * Describes the enum pg_query.AggSplit.
 */
export const AggSplitSchema: GenEnum<AggSplit, AggSplitJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 54);

/**
 * @generated from enum pg_query.SetOpCmd
 */
export enum SetOpCmd {
  /**
   * @generated from enum value: SET_OP_CMD_UNDEFINED = 0;
   */
  SET_OP_CMD_UNDEFINED = 0,

  /**
   * @generated from enum value: SETOPCMD_INTERSECT = 1;
   */
  SETOPCMD_INTERSECT = 1,

  /**
   * @generated from enum value: SETOPCMD_INTERSECT_ALL = 2;
   */
  SETOPCMD_INTERSECT_ALL = 2,

  /**
   * @generated from enum value: SETOPCMD_EXCEPT = 3;
   */
  SETOPCMD_EXCEPT = 3,

  /**
   * @generated from enum value: SETOPCMD_EXCEPT_ALL = 4;
   */
  SETOPCMD_EXCEPT_ALL = 4,
}

/**
 * @generated from enum pg_query.SetOpCmd
 */
export type SetOpCmdJson = "SET_OP_CMD_UNDEFINED" | "SETOPCMD_INTERSECT" | "SETOPCMD_INTERSECT_ALL" | "SETOPCMD_EXCEPT" | "SETOPCMD_EXCEPT_ALL";

/**
 * Describes the enum pg_query.SetOpCmd.
 */
export const SetOpCmdSchema: GenEnum<SetOpCmd, SetOpCmdJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 55);

/**
 * @generated from enum pg_query.SetOpStrategy
 */
export enum SetOpStrategy {
  /**
   * @generated from enum value: SET_OP_STRATEGY_UNDEFINED = 0;
   */
  SET_OP_STRATEGY_UNDEFINED = 0,

  /**
   * @generated from enum value: SETOP_SORTED = 1;
   */
  SETOP_SORTED = 1,

  /**
   * @generated from enum value: SETOP_HASHED = 2;
   */
  SETOP_HASHED = 2,
}

/**
 * @generated from enum pg_query.SetOpStrategy
 */
export type SetOpStrategyJson = "SET_OP_STRATEGY_UNDEFINED" | "SETOP_SORTED" | "SETOP_HASHED";

/**
 * Describes the enum pg_query.SetOpStrategy.
 */
export const SetOpStrategySchema: GenEnum<SetOpStrategy, SetOpStrategyJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 56);

/**
 * @generated from enum pg_query.OnConflictAction
 */
export enum OnConflictAction {
  /**
   * @generated from enum value: ON_CONFLICT_ACTION_UNDEFINED = 0;
   */
  ON_CONFLICT_ACTION_UNDEFINED = 0,

  /**
   * @generated from enum value: ONCONFLICT_NONE = 1;
   */
  ONCONFLICT_NONE = 1,

  /**
   * @generated from enum value: ONCONFLICT_NOTHING = 2;
   */
  ONCONFLICT_NOTHING = 2,

  /**
   * @generated from enum value: ONCONFLICT_UPDATE = 3;
   */
  ONCONFLICT_UPDATE = 3,
}

/**
 * @generated from enum pg_query.OnConflictAction
 */
export type OnConflictActionJson = "ON_CONFLICT_ACTION_UNDEFINED" | "ONCONFLICT_NONE" | "ONCONFLICT_NOTHING" | "ONCONFLICT_UPDATE";

/**
 * Describes the enum pg_query.OnConflictAction.
 */
export const OnConflictActionSchema: GenEnum<OnConflictAction, OnConflictActionJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 57);

/**
 * @generated from enum pg_query.LimitOption
 */
export enum LimitOption {
  /**
   * @generated from enum value: LIMIT_OPTION_UNDEFINED = 0;
   */
  UNDEFINED = 0,

  /**
   * @generated from enum value: LIMIT_OPTION_DEFAULT = 1;
   */
  DEFAULT = 1,

  /**
   * @generated from enum value: LIMIT_OPTION_COUNT = 2;
   */
  COUNT = 2,

  /**
   * @generated from enum value: LIMIT_OPTION_WITH_TIES = 3;
   */
  WITH_TIES = 3,
}

/**
 * @generated from enum pg_query.LimitOption
 */
export type LimitOptionJson = "LIMIT_OPTION_UNDEFINED" | "LIMIT_OPTION_DEFAULT" | "LIMIT_OPTION_COUNT" | "LIMIT_OPTION_WITH_TIES";

/**
 * Describes the enum pg_query.LimitOption.
 */
export const LimitOptionSchema: GenEnum<LimitOption, LimitOptionJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 58);

/**
 * @generated from enum pg_query.LockClauseStrength
 */
export enum LockClauseStrength {
  /**
   * @generated from enum value: LOCK_CLAUSE_STRENGTH_UNDEFINED = 0;
   */
  LOCK_CLAUSE_STRENGTH_UNDEFINED = 0,

  /**
   * @generated from enum value: LCS_NONE = 1;
   */
  LCS_NONE = 1,

  /**
   * @generated from enum value: LCS_FORKEYSHARE = 2;
   */
  LCS_FORKEYSHARE = 2,

  /**
   * @generated from enum value: LCS_FORSHARE = 3;
   */
  LCS_FORSHARE = 3,

  /**
   * @generated from enum value: LCS_FORNOKEYUPDATE = 4;
   */
  LCS_FORNOKEYUPDATE = 4,

  /**
   * @generated from enum value: LCS_FORUPDATE = 5;
   */
  LCS_FORUPDATE = 5,
}

/**
 * @generated from enum pg_query.LockClauseStrength
 */
export type LockClauseStrengthJson = "LOCK_CLAUSE_STRENGTH_UNDEFINED" | "LCS_NONE" | "LCS_FORKEYSHARE" | "LCS_FORSHARE" | "LCS_FORNOKEYUPDATE" | "LCS_FORUPDATE";

/**
 * Describes the enum pg_query.LockClauseStrength.
 */
export const LockClauseStrengthSchema: GenEnum<LockClauseStrength, LockClauseStrengthJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 59);

/**
 * @generated from enum pg_query.LockWaitPolicy
 */
export enum LockWaitPolicy {
  /**
   * @generated from enum value: LOCK_WAIT_POLICY_UNDEFINED = 0;
   */
  LOCK_WAIT_POLICY_UNDEFINED = 0,

  /**
   * @generated from enum value: LockWaitBlock = 1;
   */
  LockWaitBlock = 1,

  /**
   * @generated from enum value: LockWaitSkip = 2;
   */
  LockWaitSkip = 2,

  /**
   * @generated from enum value: LockWaitError = 3;
   */
  LockWaitError = 3,
}

/**
 * @generated from enum pg_query.LockWaitPolicy
 */
export type LockWaitPolicyJson = "LOCK_WAIT_POLICY_UNDEFINED" | "LockWaitBlock" | "LockWaitSkip" | "LockWaitError";

/**
 * Describes the enum pg_query.LockWaitPolicy.
 */
export const LockWaitPolicySchema: GenEnum<LockWaitPolicy, LockWaitPolicyJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 60);

/**
 * @generated from enum pg_query.LockTupleMode
 */
export enum LockTupleMode {
  /**
   * @generated from enum value: LOCK_TUPLE_MODE_UNDEFINED = 0;
   */
  LOCK_TUPLE_MODE_UNDEFINED = 0,

  /**
   * @generated from enum value: LockTupleKeyShare = 1;
   */
  LockTupleKeyShare = 1,

  /**
   * @generated from enum value: LockTupleShare = 2;
   */
  LockTupleShare = 2,

  /**
   * @generated from enum value: LockTupleNoKeyExclusive = 3;
   */
  LockTupleNoKeyExclusive = 3,

  /**
   * @generated from enum value: LockTupleExclusive = 4;
   */
  LockTupleExclusive = 4,
}

/**
 * @generated from enum pg_query.LockTupleMode
 */
export type LockTupleModeJson = "LOCK_TUPLE_MODE_UNDEFINED" | "LockTupleKeyShare" | "LockTupleShare" | "LockTupleNoKeyExclusive" | "LockTupleExclusive";

/**
 * Describes the enum pg_query.LockTupleMode.
 */
export const LockTupleModeSchema: GenEnum<LockTupleMode, LockTupleModeJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 61);

/**
 * @generated from enum pg_query.KeywordKind
 */
export enum KeywordKind {
  /**
   * @generated from enum value: NO_KEYWORD = 0;
   */
  NO_KEYWORD = 0,

  /**
   * @generated from enum value: UNRESERVED_KEYWORD = 1;
   */
  UNRESERVED_KEYWORD = 1,

  /**
   * @generated from enum value: COL_NAME_KEYWORD = 2;
   */
  COL_NAME_KEYWORD = 2,

  /**
   * @generated from enum value: TYPE_FUNC_NAME_KEYWORD = 3;
   */
  TYPE_FUNC_NAME_KEYWORD = 3,

  /**
   * @generated from enum value: RESERVED_KEYWORD = 4;
   */
  RESERVED_KEYWORD = 4,
}

/**
 * @generated from enum pg_query.KeywordKind
 */
export type KeywordKindJson = "NO_KEYWORD" | "UNRESERVED_KEYWORD" | "COL_NAME_KEYWORD" | "TYPE_FUNC_NAME_KEYWORD" | "RESERVED_KEYWORD";

/**
 * Describes the enum pg_query.KeywordKind.
 */
export const KeywordKindSchema: GenEnum<KeywordKind, KeywordKindJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 62);

/**
 * @generated from enum pg_query.Token
 */
export enum Token {
  /**
   * @generated from enum value: NUL = 0;
   */
  NUL = 0,

  /**
   * Single-character tokens that are returned 1:1 (identical with "self" list in scan.l)
   * Either supporting syntax, or single-character operators (some can be both)
   * Also see https://www.postgresql.org/docs/12/sql-syntax-lexical.html#SQL-SYNTAX-SPECIAL-CHARS
   *
   * "$"
   *
   * @generated from enum value: ASCII_36 = 36;
   */
  ASCII_36 = 36,

  /**
   * "%"
   *
   * @generated from enum value: ASCII_37 = 37;
   */
  ASCII_37 = 37,

  /**
   * "("
   *
   * @generated from enum value: ASCII_40 = 40;
   */
  ASCII_40 = 40,

  /**
   * ")"
   *
   * @generated from enum value: ASCII_41 = 41;
   */
  ASCII_41 = 41,

  /**
   * "*"
   *
   * @generated from enum value: ASCII_42 = 42;
   */
  ASCII_42 = 42,

  /**
   * "+"
   *
   * @generated from enum value: ASCII_43 = 43;
   */
  ASCII_43 = 43,

  /**
   * ","
   *
   * @generated from enum value: ASCII_44 = 44;
   */
  ASCII_44 = 44,

  /**
   * "-"
   *
   * @generated from enum value: ASCII_45 = 45;
   */
  ASCII_45 = 45,

  /**
   * "."
   *
   * @generated from enum value: ASCII_46 = 46;
   */
  ASCII_46 = 46,

  /**
   * "/"
   *
   * @generated from enum value: ASCII_47 = 47;
   */
  ASCII_47 = 47,

  /**
   * ":"
   *
   * @generated from enum value: ASCII_58 = 58;
   */
  ASCII_58 = 58,

  /**
   * ";"
   *
   * @generated from enum value: ASCII_59 = 59;
   */
  ASCII_59 = 59,

  /**
   * "<"
   *
   * @generated from enum value: ASCII_60 = 60;
   */
  ASCII_60 = 60,

  /**
   * "="
   *
   * @generated from enum value: ASCII_61 = 61;
   */
  ASCII_61 = 61,

  /**
   * ">"
   *
   * @generated from enum value: ASCII_62 = 62;
   */
  ASCII_62 = 62,

  /**
   * "?"
   *
   * @generated from enum value: ASCII_63 = 63;
   */
  ASCII_63 = 63,

  /**
   * "["
   *
   * @generated from enum value: ASCII_91 = 91;
   */
  ASCII_91 = 91,

  /**
   * "\"
   *
   * @generated from enum value: ASCII_92 = 92;
   */
  ASCII_92 = 92,

  /**
   * "]"
   *
   * @generated from enum value: ASCII_93 = 93;
   */
  ASCII_93 = 93,

  /**
   * "^"
   *
   * @generated from enum value: ASCII_94 = 94;
   */
  ASCII_94 = 94,

  /**
   * Named tokens in scan.l
   *
   * @generated from enum value: IDENT = 258;
   */
  IDENT = 258,

  /**
   * @generated from enum value: UIDENT = 259;
   */
  UIDENT = 259,

  /**
   * @generated from enum value: FCONST = 260;
   */
  FCONST = 260,

  /**
   * @generated from enum value: SCONST = 261;
   */
  SCONST = 261,

  /**
   * @generated from enum value: USCONST = 262;
   */
  USCONST = 262,

  /**
   * @generated from enum value: BCONST = 263;
   */
  BCONST = 263,

  /**
   * @generated from enum value: XCONST = 264;
   */
  XCONST = 264,

  /**
   * @generated from enum value: Op = 265;
   */
  Op = 265,

  /**
   * @generated from enum value: ICONST = 266;
   */
  ICONST = 266,

  /**
   * @generated from enum value: PARAM = 267;
   */
  PARAM = 267,

  /**
   * @generated from enum value: TYPECAST = 268;
   */
  TYPECAST = 268,

  /**
   * @generated from enum value: DOT_DOT = 269;
   */
  DOT_DOT = 269,

  /**
   * @generated from enum value: COLON_EQUALS = 270;
   */
  COLON_EQUALS = 270,

  /**
   * @generated from enum value: EQUALS_GREATER = 271;
   */
  EQUALS_GREATER = 271,

  /**
   * @generated from enum value: LESS_EQUALS = 272;
   */
  LESS_EQUALS = 272,

  /**
   * @generated from enum value: GREATER_EQUALS = 273;
   */
  GREATER_EQUALS = 273,

  /**
   * @generated from enum value: NOT_EQUALS = 274;
   */
  NOT_EQUALS = 274,

  /**
   * @generated from enum value: SQL_COMMENT = 275;
   */
  SQL_COMMENT = 275,

  /**
   * @generated from enum value: C_COMMENT = 276;
   */
  C_COMMENT = 276,

  /**
   * @generated from enum value: ABORT_P = 277;
   */
  ABORT_P = 277,

  /**
   * @generated from enum value: ABSENT = 278;
   */
  ABSENT = 278,

  /**
   * @generated from enum value: ABSOLUTE_P = 279;
   */
  ABSOLUTE_P = 279,

  /**
   * @generated from enum value: ACCESS = 280;
   */
  ACCESS = 280,

  /**
   * @generated from enum value: ACTION = 281;
   */
  ACTION = 281,

  /**
   * @generated from enum value: ADD_P = 282;
   */
  ADD_P = 282,

  /**
   * @generated from enum value: ADMIN = 283;
   */
  ADMIN = 283,

  /**
   * @generated from enum value: AFTER = 284;
   */
  AFTER = 284,

  /**
   * @generated from enum value: AGGREGATE = 285;
   */
  AGGREGATE = 285,

  /**
   * @generated from enum value: ALL = 286;
   */
  ALL = 286,

  /**
   * @generated from enum value: ALSO = 287;
   */
  ALSO = 287,

  /**
   * @generated from enum value: ALTER = 288;
   */
  ALTER = 288,

  /**
   * @generated from enum value: ALWAYS = 289;
   */
  ALWAYS = 289,

  /**
   * @generated from enum value: ANALYSE = 290;
   */
  ANALYSE = 290,

  /**
   * @generated from enum value: ANALYZE = 291;
   */
  ANALYZE = 291,

  /**
   * @generated from enum value: AND = 292;
   */
  AND = 292,

  /**
   * @generated from enum value: ANY = 293;
   */
  ANY = 293,

  /**
   * @generated from enum value: ARRAY = 294;
   */
  ARRAY = 294,

  /**
   * @generated from enum value: AS = 295;
   */
  AS = 295,

  /**
   * @generated from enum value: ASC = 296;
   */
  ASC = 296,

  /**
   * @generated from enum value: ASENSITIVE = 297;
   */
  ASENSITIVE = 297,

  /**
   * @generated from enum value: ASSERTION = 298;
   */
  ASSERTION = 298,

  /**
   * @generated from enum value: ASSIGNMENT = 299;
   */
  ASSIGNMENT = 299,

  /**
   * @generated from enum value: ASYMMETRIC = 300;
   */
  ASYMMETRIC = 300,

  /**
   * @generated from enum value: ATOMIC = 301;
   */
  ATOMIC = 301,

  /**
   * @generated from enum value: AT = 302;
   */
  AT = 302,

  /**
   * @generated from enum value: ATTACH = 303;
   */
  ATTACH = 303,

  /**
   * @generated from enum value: ATTRIBUTE = 304;
   */
  ATTRIBUTE = 304,

  /**
   * @generated from enum value: AUTHORIZATION = 305;
   */
  AUTHORIZATION = 305,

  /**
   * @generated from enum value: BACKWARD = 306;
   */
  BACKWARD = 306,

  /**
   * @generated from enum value: BEFORE = 307;
   */
  BEFORE = 307,

  /**
   * @generated from enum value: BEGIN_P = 308;
   */
  BEGIN_P = 308,

  /**
   * @generated from enum value: BETWEEN = 309;
   */
  BETWEEN = 309,

  /**
   * @generated from enum value: BIGINT = 310;
   */
  BIGINT = 310,

  /**
   * @generated from enum value: BINARY = 311;
   */
  BINARY = 311,

  /**
   * @generated from enum value: BIT = 312;
   */
  BIT = 312,

  /**
   * @generated from enum value: BOOLEAN_P = 313;
   */
  BOOLEAN_P = 313,

  /**
   * @generated from enum value: BOTH = 314;
   */
  BOTH = 314,

  /**
   * @generated from enum value: BREADTH = 315;
   */
  BREADTH = 315,

  /**
   * @generated from enum value: BY = 316;
   */
  BY = 316,

  /**
   * @generated from enum value: CACHE = 317;
   */
  CACHE = 317,

  /**
   * @generated from enum value: CALL = 318;
   */
  CALL = 318,

  /**
   * @generated from enum value: CALLED = 319;
   */
  CALLED = 319,

  /**
   * @generated from enum value: CASCADE = 320;
   */
  CASCADE = 320,

  /**
   * @generated from enum value: CASCADED = 321;
   */
  CASCADED = 321,

  /**
   * @generated from enum value: CASE = 322;
   */
  CASE = 322,

  /**
   * @generated from enum value: CAST = 323;
   */
  CAST = 323,

  /**
   * @generated from enum value: CATALOG_P = 324;
   */
  CATALOG_P = 324,

  /**
   * @generated from enum value: CHAIN = 325;
   */
  CHAIN = 325,

  /**
   * @generated from enum value: CHAR_P = 326;
   */
  CHAR_P = 326,

  /**
   * @generated from enum value: CHARACTER = 327;
   */
  CHARACTER = 327,

  /**
   * @generated from enum value: CHARACTERISTICS = 328;
   */
  CHARACTERISTICS = 328,

  /**
   * @generated from enum value: CHECK = 329;
   */
  CHECK = 329,

  /**
   * @generated from enum value: CHECKPOINT = 330;
   */
  CHECKPOINT = 330,

  /**
   * @generated from enum value: CLASS = 331;
   */
  CLASS = 331,

  /**
   * @generated from enum value: CLOSE = 332;
   */
  CLOSE = 332,

  /**
   * @generated from enum value: CLUSTER = 333;
   */
  CLUSTER = 333,

  /**
   * @generated from enum value: COALESCE = 334;
   */
  COALESCE = 334,

  /**
   * @generated from enum value: COLLATE = 335;
   */
  COLLATE = 335,

  /**
   * @generated from enum value: COLLATION = 336;
   */
  COLLATION = 336,

  /**
   * @generated from enum value: COLUMN = 337;
   */
  COLUMN = 337,

  /**
   * @generated from enum value: COLUMNS = 338;
   */
  COLUMNS = 338,

  /**
   * @generated from enum value: COMMENT = 339;
   */
  COMMENT = 339,

  /**
   * @generated from enum value: COMMENTS = 340;
   */
  COMMENTS = 340,

  /**
   * @generated from enum value: COMMIT = 341;
   */
  COMMIT = 341,

  /**
   * @generated from enum value: COMMITTED = 342;
   */
  COMMITTED = 342,

  /**
   * @generated from enum value: COMPRESSION = 343;
   */
  COMPRESSION = 343,

  /**
   * @generated from enum value: CONCURRENTLY = 344;
   */
  CONCURRENTLY = 344,

  /**
   * @generated from enum value: CONFIGURATION = 345;
   */
  CONFIGURATION = 345,

  /**
   * @generated from enum value: CONFLICT = 346;
   */
  CONFLICT = 346,

  /**
   * @generated from enum value: CONNECTION = 347;
   */
  CONNECTION = 347,

  /**
   * @generated from enum value: CONSTRAINT = 348;
   */
  CONSTRAINT = 348,

  /**
   * @generated from enum value: CONSTRAINTS = 349;
   */
  CONSTRAINTS = 349,

  /**
   * @generated from enum value: CONTENT_P = 350;
   */
  CONTENT_P = 350,

  /**
   * @generated from enum value: CONTINUE_P = 351;
   */
  CONTINUE_P = 351,

  /**
   * @generated from enum value: CONVERSION_P = 352;
   */
  CONVERSION_P = 352,

  /**
   * @generated from enum value: COPY = 353;
   */
  COPY = 353,

  /**
   * @generated from enum value: COST = 354;
   */
  COST = 354,

  /**
   * @generated from enum value: CREATE = 355;
   */
  CREATE = 355,

  /**
   * @generated from enum value: CROSS = 356;
   */
  CROSS = 356,

  /**
   * @generated from enum value: CSV = 357;
   */
  CSV = 357,

  /**
   * @generated from enum value: CUBE = 358;
   */
  CUBE = 358,

  /**
   * @generated from enum value: CURRENT_P = 359;
   */
  CURRENT_P = 359,

  /**
   * @generated from enum value: CURRENT_CATALOG = 360;
   */
  CURRENT_CATALOG = 360,

  /**
   * @generated from enum value: CURRENT_DATE = 361;
   */
  CURRENT_DATE = 361,

  /**
   * @generated from enum value: CURRENT_ROLE = 362;
   */
  CURRENT_ROLE = 362,

  /**
   * @generated from enum value: CURRENT_SCHEMA = 363;
   */
  CURRENT_SCHEMA = 363,

  /**
   * @generated from enum value: CURRENT_TIME = 364;
   */
  CURRENT_TIME = 364,

  /**
   * @generated from enum value: CURRENT_TIMESTAMP = 365;
   */
  CURRENT_TIMESTAMP = 365,

  /**
   * @generated from enum value: CURRENT_USER = 366;
   */
  CURRENT_USER = 366,

  /**
   * @generated from enum value: CURSOR = 367;
   */
  CURSOR = 367,

  /**
   * @generated from enum value: CYCLE = 368;
   */
  CYCLE = 368,

  /**
   * @generated from enum value: DATA_P = 369;
   */
  DATA_P = 369,

  /**
   * @generated from enum value: DATABASE = 370;
   */
  DATABASE = 370,

  /**
   * @generated from enum value: DAY_P = 371;
   */
  DAY_P = 371,

  /**
   * @generated from enum value: DEALLOCATE = 372;
   */
  DEALLOCATE = 372,

  /**
   * @generated from enum value: DEC = 373;
   */
  DEC = 373,

  /**
   * @generated from enum value: DECIMAL_P = 374;
   */
  DECIMAL_P = 374,

  /**
   * @generated from enum value: DECLARE = 375;
   */
  DECLARE = 375,

  /**
   * @generated from enum value: DEFAULT = 376;
   */
  DEFAULT = 376,

  /**
   * @generated from enum value: DEFAULTS = 377;
   */
  DEFAULTS = 377,

  /**
   * @generated from enum value: DEFERRABLE = 378;
   */
  DEFERRABLE = 378,

  /**
   * @generated from enum value: DEFERRED = 379;
   */
  DEFERRED = 379,

  /**
   * @generated from enum value: DEFINER = 380;
   */
  DEFINER = 380,

  /**
   * @generated from enum value: DELETE_P = 381;
   */
  DELETE_P = 381,

  /**
   * @generated from enum value: DELIMITER = 382;
   */
  DELIMITER = 382,

  /**
   * @generated from enum value: DELIMITERS = 383;
   */
  DELIMITERS = 383,

  /**
   * @generated from enum value: DEPENDS = 384;
   */
  DEPENDS = 384,

  /**
   * @generated from enum value: DEPTH = 385;
   */
  DEPTH = 385,

  /**
   * @generated from enum value: DESC = 386;
   */
  DESC = 386,

  /**
   * @generated from enum value: DETACH = 387;
   */
  DETACH = 387,

  /**
   * @generated from enum value: DICTIONARY = 388;
   */
  DICTIONARY = 388,

  /**
   * @generated from enum value: DISABLE_P = 389;
   */
  DISABLE_P = 389,

  /**
   * @generated from enum value: DISCARD = 390;
   */
  DISCARD = 390,

  /**
   * @generated from enum value: DISTINCT = 391;
   */
  DISTINCT = 391,

  /**
   * @generated from enum value: DO = 392;
   */
  DO = 392,

  /**
   * @generated from enum value: DOCUMENT_P = 393;
   */
  DOCUMENT_P = 393,

  /**
   * @generated from enum value: DOMAIN_P = 394;
   */
  DOMAIN_P = 394,

  /**
   * @generated from enum value: DOUBLE_P = 395;
   */
  DOUBLE_P = 395,

  /**
   * @generated from enum value: DROP = 396;
   */
  DROP = 396,

  /**
   * @generated from enum value: EACH = 397;
   */
  EACH = 397,

  /**
   * @generated from enum value: ELSE = 398;
   */
  ELSE = 398,

  /**
   * @generated from enum value: ENABLE_P = 399;
   */
  ENABLE_P = 399,

  /**
   * @generated from enum value: ENCODING = 400;
   */
  ENCODING = 400,

  /**
   * @generated from enum value: ENCRYPTED = 401;
   */
  ENCRYPTED = 401,

  /**
   * @generated from enum value: END_P = 402;
   */
  END_P = 402,

  /**
   * @generated from enum value: ENUM_P = 403;
   */
  ENUM_P = 403,

  /**
   * @generated from enum value: ESCAPE = 404;
   */
  ESCAPE = 404,

  /**
   * @generated from enum value: EVENT = 405;
   */
  EVENT = 405,

  /**
   * @generated from enum value: EXCEPT = 406;
   */
  EXCEPT = 406,

  /**
   * @generated from enum value: EXCLUDE = 407;
   */
  EXCLUDE = 407,

  /**
   * @generated from enum value: EXCLUDING = 408;
   */
  EXCLUDING = 408,

  /**
   * @generated from enum value: EXCLUSIVE = 409;
   */
  EXCLUSIVE = 409,

  /**
   * @generated from enum value: EXECUTE = 410;
   */
  EXECUTE = 410,

  /**
   * @generated from enum value: EXISTS = 411;
   */
  EXISTS = 411,

  /**
   * @generated from enum value: EXPLAIN = 412;
   */
  EXPLAIN = 412,

  /**
   * @generated from enum value: EXPRESSION = 413;
   */
  EXPRESSION = 413,

  /**
   * @generated from enum value: EXTENSION = 414;
   */
  EXTENSION = 414,

  /**
   * @generated from enum value: EXTERNAL = 415;
   */
  EXTERNAL = 415,

  /**
   * @generated from enum value: EXTRACT = 416;
   */
  EXTRACT = 416,

  /**
   * @generated from enum value: FALSE_P = 417;
   */
  FALSE_P = 417,

  /**
   * @generated from enum value: FAMILY = 418;
   */
  FAMILY = 418,

  /**
   * @generated from enum value: FETCH = 419;
   */
  FETCH = 419,

  /**
   * @generated from enum value: FILTER = 420;
   */
  FILTER = 420,

  /**
   * @generated from enum value: FINALIZE = 421;
   */
  FINALIZE = 421,

  /**
   * @generated from enum value: FIRST_P = 422;
   */
  FIRST_P = 422,

  /**
   * @generated from enum value: FLOAT_P = 423;
   */
  FLOAT_P = 423,

  /**
   * @generated from enum value: FOLLOWING = 424;
   */
  FOLLOWING = 424,

  /**
   * @generated from enum value: FOR = 425;
   */
  FOR = 425,

  /**
   * @generated from enum value: FORCE = 426;
   */
  FORCE = 426,

  /**
   * @generated from enum value: FOREIGN = 427;
   */
  FOREIGN = 427,

  /**
   * @generated from enum value: FORMAT = 428;
   */
  FORMAT = 428,

  /**
   * @generated from enum value: FORWARD = 429;
   */
  FORWARD = 429,

  /**
   * @generated from enum value: FREEZE = 430;
   */
  FREEZE = 430,

  /**
   * @generated from enum value: FROM = 431;
   */
  FROM = 431,

  /**
   * @generated from enum value: FULL = 432;
   */
  FULL = 432,

  /**
   * @generated from enum value: FUNCTION = 433;
   */
  FUNCTION = 433,

  /**
   * @generated from enum value: FUNCTIONS = 434;
   */
  FUNCTIONS = 434,

  /**
   * @generated from enum value: GENERATED = 435;
   */
  GENERATED = 435,

  /**
   * @generated from enum value: GLOBAL = 436;
   */
  GLOBAL = 436,

  /**
   * @generated from enum value: GRANT = 437;
   */
  GRANT = 437,

  /**
   * @generated from enum value: GRANTED = 438;
   */
  GRANTED = 438,

  /**
   * @generated from enum value: GREATEST = 439;
   */
  GREATEST = 439,

  /**
   * @generated from enum value: GROUP_P = 440;
   */
  GROUP_P = 440,

  /**
   * @generated from enum value: GROUPING = 441;
   */
  GROUPING = 441,

  /**
   * @generated from enum value: GROUPS = 442;
   */
  GROUPS = 442,

  /**
   * @generated from enum value: HANDLER = 443;
   */
  HANDLER = 443,

  /**
   * @generated from enum value: HAVING = 444;
   */
  HAVING = 444,

  /**
   * @generated from enum value: HEADER_P = 445;
   */
  HEADER_P = 445,

  /**
   * @generated from enum value: HOLD = 446;
   */
  HOLD = 446,

  /**
   * @generated from enum value: HOUR_P = 447;
   */
  HOUR_P = 447,

  /**
   * @generated from enum value: IDENTITY_P = 448;
   */
  IDENTITY_P = 448,

  /**
   * @generated from enum value: IF_P = 449;
   */
  IF_P = 449,

  /**
   * @generated from enum value: ILIKE = 450;
   */
  ILIKE = 450,

  /**
   * @generated from enum value: IMMEDIATE = 451;
   */
  IMMEDIATE = 451,

  /**
   * @generated from enum value: IMMUTABLE = 452;
   */
  IMMUTABLE = 452,

  /**
   * @generated from enum value: IMPLICIT_P = 453;
   */
  IMPLICIT_P = 453,

  /**
   * @generated from enum value: IMPORT_P = 454;
   */
  IMPORT_P = 454,

  /**
   * @generated from enum value: IN_P = 455;
   */
  IN_P = 455,

  /**
   * @generated from enum value: INCLUDE = 456;
   */
  INCLUDE = 456,

  /**
   * @generated from enum value: INCLUDING = 457;
   */
  INCLUDING = 457,

  /**
   * @generated from enum value: INCREMENT = 458;
   */
  INCREMENT = 458,

  /**
   * @generated from enum value: INDENT = 459;
   */
  INDENT = 459,

  /**
   * @generated from enum value: INDEX = 460;
   */
  INDEX = 460,

  /**
   * @generated from enum value: INDEXES = 461;
   */
  INDEXES = 461,

  /**
   * @generated from enum value: INHERIT = 462;
   */
  INHERIT = 462,

  /**
   * @generated from enum value: INHERITS = 463;
   */
  INHERITS = 463,

  /**
   * @generated from enum value: INITIALLY = 464;
   */
  INITIALLY = 464,

  /**
   * @generated from enum value: INLINE_P = 465;
   */
  INLINE_P = 465,

  /**
   * @generated from enum value: INNER_P = 466;
   */
  INNER_P = 466,

  /**
   * @generated from enum value: INOUT = 467;
   */
  INOUT = 467,

  /**
   * @generated from enum value: INPUT_P = 468;
   */
  INPUT_P = 468,

  /**
   * @generated from enum value: INSENSITIVE = 469;
   */
  INSENSITIVE = 469,

  /**
   * @generated from enum value: INSERT = 470;
   */
  INSERT = 470,

  /**
   * @generated from enum value: INSTEAD = 471;
   */
  INSTEAD = 471,

  /**
   * @generated from enum value: INT_P = 472;
   */
  INT_P = 472,

  /**
   * @generated from enum value: INTEGER = 473;
   */
  INTEGER = 473,

  /**
   * @generated from enum value: INTERSECT = 474;
   */
  INTERSECT = 474,

  /**
   * @generated from enum value: INTERVAL = 475;
   */
  INTERVAL = 475,

  /**
   * @generated from enum value: INTO = 476;
   */
  INTO = 476,

  /**
   * @generated from enum value: INVOKER = 477;
   */
  INVOKER = 477,

  /**
   * @generated from enum value: IS = 478;
   */
  IS = 478,

  /**
   * @generated from enum value: ISNULL = 479;
   */
  ISNULL = 479,

  /**
   * @generated from enum value: ISOLATION = 480;
   */
  ISOLATION = 480,

  /**
   * @generated from enum value: JOIN = 481;
   */
  JOIN = 481,

  /**
   * @generated from enum value: JSON = 482;
   */
  JSON = 482,

  /**
   * @generated from enum value: JSON_ARRAY = 483;
   */
  JSON_ARRAY = 483,

  /**
   * @generated from enum value: JSON_ARRAYAGG = 484;
   */
  JSON_ARRAYAGG = 484,

  /**
   * @generated from enum value: JSON_OBJECT = 485;
   */
  JSON_OBJECT = 485,

  /**
   * @generated from enum value: JSON_OBJECTAGG = 486;
   */
  JSON_OBJECTAGG = 486,

  /**
   * @generated from enum value: KEY = 487;
   */
  KEY = 487,

  /**
   * @generated from enum value: KEYS = 488;
   */
  KEYS = 488,

  /**
   * @generated from enum value: LABEL = 489;
   */
  LABEL = 489,

  /**
   * @generated from enum value: LANGUAGE = 490;
   */
  LANGUAGE = 490,

  /**
   * @generated from enum value: LARGE_P = 491;
   */
  LARGE_P = 491,

  /**
   * @generated from enum value: LAST_P = 492;
   */
  LAST_P = 492,

  /**
   * @generated from enum value: LATERAL_P = 493;
   */
  LATERAL_P = 493,

  /**
   * @generated from enum value: LEADING = 494;
   */
  LEADING = 494,

  /**
   * @generated from enum value: LEAKPROOF = 495;
   */
  LEAKPROOF = 495,

  /**
   * @generated from enum value: LEAST = 496;
   */
  LEAST = 496,

  /**
   * @generated from enum value: LEFT = 497;
   */
  LEFT = 497,

  /**
   * @generated from enum value: LEVEL = 498;
   */
  LEVEL = 498,

  /**
   * @generated from enum value: LIKE = 499;
   */
  LIKE = 499,

  /**
   * @generated from enum value: LIMIT = 500;
   */
  LIMIT = 500,

  /**
   * @generated from enum value: LISTEN = 501;
   */
  LISTEN = 501,

  /**
   * @generated from enum value: LOAD = 502;
   */
  LOAD = 502,

  /**
   * @generated from enum value: LOCAL = 503;
   */
  LOCAL = 503,

  /**
   * @generated from enum value: LOCALTIME = 504;
   */
  LOCALTIME = 504,

  /**
   * @generated from enum value: LOCALTIMESTAMP = 505;
   */
  LOCALTIMESTAMP = 505,

  /**
   * @generated from enum value: LOCATION = 506;
   */
  LOCATION = 506,

  /**
   * @generated from enum value: LOCK_P = 507;
   */
  LOCK_P = 507,

  /**
   * @generated from enum value: LOCKED = 508;
   */
  LOCKED = 508,

  /**
   * @generated from enum value: LOGGED = 509;
   */
  LOGGED = 509,

  /**
   * @generated from enum value: MAPPING = 510;
   */
  MAPPING = 510,

  /**
   * @generated from enum value: MATCH = 511;
   */
  MATCH = 511,

  /**
   * @generated from enum value: MATCHED = 512;
   */
  MATCHED = 512,

  /**
   * @generated from enum value: MATERIALIZED = 513;
   */
  MATERIALIZED = 513,

  /**
   * @generated from enum value: MAXVALUE = 514;
   */
  MAXVALUE = 514,

  /**
   * @generated from enum value: MERGE = 515;
   */
  MERGE = 515,

  /**
   * @generated from enum value: METHOD = 516;
   */
  METHOD = 516,

  /**
   * @generated from enum value: MINUTE_P = 517;
   */
  MINUTE_P = 517,

  /**
   * @generated from enum value: MINVALUE = 518;
   */
  MINVALUE = 518,

  /**
   * @generated from enum value: MODE = 519;
   */
  MODE = 519,

  /**
   * @generated from enum value: MONTH_P = 520;
   */
  MONTH_P = 520,

  /**
   * @generated from enum value: MOVE = 521;
   */
  MOVE = 521,

  /**
   * @generated from enum value: NAME_P = 522;
   */
  NAME_P = 522,

  /**
   * @generated from enum value: NAMES = 523;
   */
  NAMES = 523,

  /**
   * @generated from enum value: NATIONAL = 524;
   */
  NATIONAL = 524,

  /**
   * @generated from enum value: NATURAL = 525;
   */
  NATURAL = 525,

  /**
   * @generated from enum value: NCHAR = 526;
   */
  NCHAR = 526,

  /**
   * @generated from enum value: NEW = 527;
   */
  NEW = 527,

  /**
   * @generated from enum value: NEXT = 528;
   */
  NEXT = 528,

  /**
   * @generated from enum value: NFC = 529;
   */
  NFC = 529,

  /**
   * @generated from enum value: NFD = 530;
   */
  NFD = 530,

  /**
   * @generated from enum value: NFKC = 531;
   */
  NFKC = 531,

  /**
   * @generated from enum value: NFKD = 532;
   */
  NFKD = 532,

  /**
   * @generated from enum value: NO = 533;
   */
  NO = 533,

  /**
   * @generated from enum value: NONE = 534;
   */
  NONE = 534,

  /**
   * @generated from enum value: NORMALIZE = 535;
   */
  NORMALIZE = 535,

  /**
   * @generated from enum value: NORMALIZED = 536;
   */
  NORMALIZED = 536,

  /**
   * @generated from enum value: NOT = 537;
   */
  NOT = 537,

  /**
   * @generated from enum value: NOTHING = 538;
   */
  NOTHING = 538,

  /**
   * @generated from enum value: NOTIFY = 539;
   */
  NOTIFY = 539,

  /**
   * @generated from enum value: NOTNULL = 540;
   */
  NOTNULL = 540,

  /**
   * @generated from enum value: NOWAIT = 541;
   */
  NOWAIT = 541,

  /**
   * @generated from enum value: NULL_P = 542;
   */
  NULL_P = 542,

  /**
   * @generated from enum value: NULLIF = 543;
   */
  NULLIF = 543,

  /**
   * @generated from enum value: NULLS_P = 544;
   */
  NULLS_P = 544,

  /**
   * @generated from enum value: NUMERIC = 545;
   */
  NUMERIC = 545,

  /**
   * @generated from enum value: OBJECT_P = 546;
   */
  OBJECT_P = 546,

  /**
   * @generated from enum value: OF = 547;
   */
  OF = 547,

  /**
   * @generated from enum value: OFF = 548;
   */
  OFF = 548,

  /**
   * @generated from enum value: OFFSET = 549;
   */
  OFFSET = 549,

  /**
   * @generated from enum value: OIDS = 550;
   */
  OIDS = 550,

  /**
   * @generated from enum value: OLD = 551;
   */
  OLD = 551,

  /**
   * @generated from enum value: ON = 552;
   */
  ON = 552,

  /**
   * @generated from enum value: ONLY = 553;
   */
  ONLY = 553,

  /**
   * @generated from enum value: OPERATOR = 554;
   */
  OPERATOR = 554,

  /**
   * @generated from enum value: OPTION = 555;
   */
  OPTION = 555,

  /**
   * @generated from enum value: OPTIONS = 556;
   */
  OPTIONS = 556,

  /**
   * @generated from enum value: OR = 557;
   */
  OR = 557,

  /**
   * @generated from enum value: ORDER = 558;
   */
  ORDER = 558,

  /**
   * @generated from enum value: ORDINALITY = 559;
   */
  ORDINALITY = 559,

  /**
   * @generated from enum value: OTHERS = 560;
   */
  OTHERS = 560,

  /**
   * @generated from enum value: OUT_P = 561;
   */
  OUT_P = 561,

  /**
   * @generated from enum value: OUTER_P = 562;
   */
  OUTER_P = 562,

  /**
   * @generated from enum value: OVER = 563;
   */
  OVER = 563,

  /**
   * @generated from enum value: OVERLAPS = 564;
   */
  OVERLAPS = 564,

  /**
   * @generated from enum value: OVERLAY = 565;
   */
  OVERLAY = 565,

  /**
   * @generated from enum value: OVERRIDING = 566;
   */
  OVERRIDING = 566,

  /**
   * @generated from enum value: OWNED = 567;
   */
  OWNED = 567,

  /**
   * @generated from enum value: OWNER = 568;
   */
  OWNER = 568,

  /**
   * @generated from enum value: PARALLEL = 569;
   */
  PARALLEL = 569,

  /**
   * @generated from enum value: PARAMETER = 570;
   */
  PARAMETER = 570,

  /**
   * @generated from enum value: PARSER = 571;
   */
  PARSER = 571,

  /**
   * @generated from enum value: PARTIAL = 572;
   */
  PARTIAL = 572,

  /**
   * @generated from enum value: PARTITION = 573;
   */
  PARTITION = 573,

  /**
   * @generated from enum value: PASSING = 574;
   */
  PASSING = 574,

  /**
   * @generated from enum value: PASSWORD = 575;
   */
  PASSWORD = 575,

  /**
   * @generated from enum value: PLACING = 576;
   */
  PLACING = 576,

  /**
   * @generated from enum value: PLANS = 577;
   */
  PLANS = 577,

  /**
   * @generated from enum value: POLICY = 578;
   */
  POLICY = 578,

  /**
   * @generated from enum value: POSITION = 579;
   */
  POSITION = 579,

  /**
   * @generated from enum value: PRECEDING = 580;
   */
  PRECEDING = 580,

  /**
   * @generated from enum value: PRECISION = 581;
   */
  PRECISION = 581,

  /**
   * @generated from enum value: PRESERVE = 582;
   */
  PRESERVE = 582,

  /**
   * @generated from enum value: PREPARE = 583;
   */
  PREPARE = 583,

  /**
   * @generated from enum value: PREPARED = 584;
   */
  PREPARED = 584,

  /**
   * @generated from enum value: PRIMARY = 585;
   */
  PRIMARY = 585,

  /**
   * @generated from enum value: PRIOR = 586;
   */
  PRIOR = 586,

  /**
   * @generated from enum value: PRIVILEGES = 587;
   */
  PRIVILEGES = 587,

  /**
   * @generated from enum value: PROCEDURAL = 588;
   */
  PROCEDURAL = 588,

  /**
   * @generated from enum value: PROCEDURE = 589;
   */
  PROCEDURE = 589,

  /**
   * @generated from enum value: PROCEDURES = 590;
   */
  PROCEDURES = 590,

  /**
   * @generated from enum value: PROGRAM = 591;
   */
  PROGRAM = 591,

  /**
   * @generated from enum value: PUBLICATION = 592;
   */
  PUBLICATION = 592,

  /**
   * @generated from enum value: QUOTE = 593;
   */
  QUOTE = 593,

  /**
   * @generated from enum value: RANGE = 594;
   */
  RANGE = 594,

  /**
   * @generated from enum value: READ = 595;
   */
  READ = 595,

  /**
   * @generated from enum value: REAL = 596;
   */
  REAL = 596,

  /**
   * @generated from enum value: REASSIGN = 597;
   */
  REASSIGN = 597,

  /**
   * @generated from enum value: RECHECK = 598;
   */
  RECHECK = 598,

  /**
   * @generated from enum value: RECURSIVE = 599;
   */
  RECURSIVE = 599,

  /**
   * @generated from enum value: REF_P = 600;
   */
  REF_P = 600,

  /**
   * @generated from enum value: REFERENCES = 601;
   */
  REFERENCES = 601,

  /**
   * @generated from enum value: REFERENCING = 602;
   */
  REFERENCING = 602,

  /**
   * @generated from enum value: REFRESH = 603;
   */
  REFRESH = 603,

  /**
   * @generated from enum value: REINDEX = 604;
   */
  REINDEX = 604,

  /**
   * @generated from enum value: RELATIVE_P = 605;
   */
  RELATIVE_P = 605,

  /**
   * @generated from enum value: RELEASE = 606;
   */
  RELEASE = 606,

  /**
   * @generated from enum value: RENAME = 607;
   */
  RENAME = 607,

  /**
   * @generated from enum value: REPEATABLE = 608;
   */
  REPEATABLE = 608,

  /**
   * @generated from enum value: REPLACE = 609;
   */
  REPLACE = 609,

  /**
   * @generated from enum value: REPLICA = 610;
   */
  REPLICA = 610,

  /**
   * @generated from enum value: RESET = 611;
   */
  RESET = 611,

  /**
   * @generated from enum value: RESTART = 612;
   */
  RESTART = 612,

  /**
   * @generated from enum value: RESTRICT = 613;
   */
  RESTRICT = 613,

  /**
   * @generated from enum value: RETURN = 614;
   */
  RETURN = 614,

  /**
   * @generated from enum value: RETURNING = 615;
   */
  RETURNING = 615,

  /**
   * @generated from enum value: RETURNS = 616;
   */
  RETURNS = 616,

  /**
   * @generated from enum value: REVOKE = 617;
   */
  REVOKE = 617,

  /**
   * @generated from enum value: RIGHT = 618;
   */
  RIGHT = 618,

  /**
   * @generated from enum value: ROLE = 619;
   */
  ROLE = 619,

  /**
   * @generated from enum value: ROLLBACK = 620;
   */
  ROLLBACK = 620,

  /**
   * @generated from enum value: ROLLUP = 621;
   */
  ROLLUP = 621,

  /**
   * @generated from enum value: ROUTINE = 622;
   */
  ROUTINE = 622,

  /**
   * @generated from enum value: ROUTINES = 623;
   */
  ROUTINES = 623,

  /**
   * @generated from enum value: ROW = 624;
   */
  ROW = 624,

  /**
   * @generated from enum value: ROWS = 625;
   */
  ROWS = 625,

  /**
   * @generated from enum value: RULE = 626;
   */
  RULE = 626,

  /**
   * @generated from enum value: SAVEPOINT = 627;
   */
  SAVEPOINT = 627,

  /**
   * @generated from enum value: SCALAR = 628;
   */
  SCALAR = 628,

  /**
   * @generated from enum value: SCHEMA = 629;
   */
  SCHEMA = 629,

  /**
   * @generated from enum value: SCHEMAS = 630;
   */
  SCHEMAS = 630,

  /**
   * @generated from enum value: SCROLL = 631;
   */
  SCROLL = 631,

  /**
   * @generated from enum value: SEARCH = 632;
   */
  SEARCH = 632,

  /**
   * @generated from enum value: SECOND_P = 633;
   */
  SECOND_P = 633,

  /**
   * @generated from enum value: SECURITY = 634;
   */
  SECURITY = 634,

  /**
   * @generated from enum value: SELECT = 635;
   */
  SELECT = 635,

  /**
   * @generated from enum value: SEQUENCE = 636;
   */
  SEQUENCE = 636,

  /**
   * @generated from enum value: SEQUENCES = 637;
   */
  SEQUENCES = 637,

  /**
   * @generated from enum value: SERIALIZABLE = 638;
   */
  SERIALIZABLE = 638,

  /**
   * @generated from enum value: SERVER = 639;
   */
  SERVER = 639,

  /**
   * @generated from enum value: SESSION = 640;
   */
  SESSION = 640,

  /**
   * @generated from enum value: SESSION_USER = 641;
   */
  SESSION_USER = 641,

  /**
   * @generated from enum value: SET = 642;
   */
  SET = 642,

  /**
   * @generated from enum value: SETS = 643;
   */
  SETS = 643,

  /**
   * @generated from enum value: SETOF = 644;
   */
  SETOF = 644,

  /**
   * @generated from enum value: SHARE = 645;
   */
  SHARE = 645,

  /**
   * @generated from enum value: SHOW = 646;
   */
  SHOW = 646,

  /**
   * @generated from enum value: SIMILAR = 647;
   */
  SIMILAR = 647,

  /**
   * @generated from enum value: SIMPLE = 648;
   */
  SIMPLE = 648,

  /**
   * @generated from enum value: SKIP = 649;
   */
  SKIP = 649,

  /**
   * @generated from enum value: SMALLINT = 650;
   */
  SMALLINT = 650,

  /**
   * @generated from enum value: SNAPSHOT = 651;
   */
  SNAPSHOT = 651,

  /**
   * @generated from enum value: SOME = 652;
   */
  SOME = 652,

  /**
   * @generated from enum value: SQL_P = 653;
   */
  SQL_P = 653,

  /**
   * @generated from enum value: STABLE = 654;
   */
  STABLE = 654,

  /**
   * @generated from enum value: STANDALONE_P = 655;
   */
  STANDALONE_P = 655,

  /**
   * @generated from enum value: START = 656;
   */
  START = 656,

  /**
   * @generated from enum value: STATEMENT = 657;
   */
  STATEMENT = 657,

  /**
   * @generated from enum value: STATISTICS = 658;
   */
  STATISTICS = 658,

  /**
   * @generated from enum value: STDIN = 659;
   */
  STDIN = 659,

  /**
   * @generated from enum value: STDOUT = 660;
   */
  STDOUT = 660,

  /**
   * @generated from enum value: STORAGE = 661;
   */
  STORAGE = 661,

  /**
   * @generated from enum value: STORED = 662;
   */
  STORED = 662,

  /**
   * @generated from enum value: STRICT_P = 663;
   */
  STRICT_P = 663,

  /**
   * @generated from enum value: STRIP_P = 664;
   */
  STRIP_P = 664,

  /**
   * @generated from enum value: SUBSCRIPTION = 665;
   */
  SUBSCRIPTION = 665,

  /**
   * @generated from enum value: SUBSTRING = 666;
   */
  SUBSTRING = 666,

  /**
   * @generated from enum value: SUPPORT = 667;
   */
  SUPPORT = 667,

  /**
   * @generated from enum value: SYMMETRIC = 668;
   */
  SYMMETRIC = 668,

  /**
   * @generated from enum value: SYSID = 669;
   */
  SYSID = 669,

  /**
   * @generated from enum value: SYSTEM_P = 670;
   */
  SYSTEM_P = 670,

  /**
   * @generated from enum value: SYSTEM_USER = 671;
   */
  SYSTEM_USER = 671,

  /**
   * @generated from enum value: TABLE = 672;
   */
  TABLE = 672,

  /**
   * @generated from enum value: TABLES = 673;
   */
  TABLES = 673,

  /**
   * @generated from enum value: TABLESAMPLE = 674;
   */
  TABLESAMPLE = 674,

  /**
   * @generated from enum value: TABLESPACE = 675;
   */
  TABLESPACE = 675,

  /**
   * @generated from enum value: TEMP = 676;
   */
  TEMP = 676,

  /**
   * @generated from enum value: TEMPLATE = 677;
   */
  TEMPLATE = 677,

  /**
   * @generated from enum value: TEMPORARY = 678;
   */
  TEMPORARY = 678,

  /**
   * @generated from enum value: TEXT_P = 679;
   */
  TEXT_P = 679,

  /**
   * @generated from enum value: THEN = 680;
   */
  THEN = 680,

  /**
   * @generated from enum value: TIES = 681;
   */
  TIES = 681,

  /**
   * @generated from enum value: TIME = 682;
   */
  TIME = 682,

  /**
   * @generated from enum value: TIMESTAMP = 683;
   */
  TIMESTAMP = 683,

  /**
   * @generated from enum value: TO = 684;
   */
  TO = 684,

  /**
   * @generated from enum value: TRAILING = 685;
   */
  TRAILING = 685,

  /**
   * @generated from enum value: TRANSACTION = 686;
   */
  TRANSACTION = 686,

  /**
   * @generated from enum value: TRANSFORM = 687;
   */
  TRANSFORM = 687,

  /**
   * @generated from enum value: TREAT = 688;
   */
  TREAT = 688,

  /**
   * @generated from enum value: TRIGGER = 689;
   */
  TRIGGER = 689,

  /**
   * @generated from enum value: TRIM = 690;
   */
  TRIM = 690,

  /**
   * @generated from enum value: TRUE_P = 691;
   */
  TRUE_P = 691,

  /**
   * @generated from enum value: TRUNCATE = 692;
   */
  TRUNCATE = 692,

  /**
   * @generated from enum value: TRUSTED = 693;
   */
  TRUSTED = 693,

  /**
   * @generated from enum value: TYPE_P = 694;
   */
  TYPE_P = 694,

  /**
   * @generated from enum value: TYPES_P = 695;
   */
  TYPES_P = 695,

  /**
   * @generated from enum value: UESCAPE = 696;
   */
  UESCAPE = 696,

  /**
   * @generated from enum value: UNBOUNDED = 697;
   */
  UNBOUNDED = 697,

  /**
   * @generated from enum value: UNCOMMITTED = 698;
   */
  UNCOMMITTED = 698,

  /**
   * @generated from enum value: UNENCRYPTED = 699;
   */
  UNENCRYPTED = 699,

  /**
   * @generated from enum value: UNION = 700;
   */
  UNION = 700,

  /**
   * @generated from enum value: UNIQUE = 701;
   */
  UNIQUE = 701,

  /**
   * @generated from enum value: UNKNOWN = 702;
   */
  UNKNOWN = 702,

  /**
   * @generated from enum value: UNLISTEN = 703;
   */
  UNLISTEN = 703,

  /**
   * @generated from enum value: UNLOGGED = 704;
   */
  UNLOGGED = 704,

  /**
   * @generated from enum value: UNTIL = 705;
   */
  UNTIL = 705,

  /**
   * @generated from enum value: UPDATE = 706;
   */
  UPDATE = 706,

  /**
   * @generated from enum value: USER = 707;
   */
  USER = 707,

  /**
   * @generated from enum value: USING = 708;
   */
  USING = 708,

  /**
   * @generated from enum value: VACUUM = 709;
   */
  VACUUM = 709,

  /**
   * @generated from enum value: VALID = 710;
   */
  VALID = 710,

  /**
   * @generated from enum value: VALIDATE = 711;
   */
  VALIDATE = 711,

  /**
   * @generated from enum value: VALIDATOR = 712;
   */
  VALIDATOR = 712,

  /**
   * @generated from enum value: VALUE_P = 713;
   */
  VALUE_P = 713,

  /**
   * @generated from enum value: VALUES = 714;
   */
  VALUES = 714,

  /**
   * @generated from enum value: VARCHAR = 715;
   */
  VARCHAR = 715,

  /**
   * @generated from enum value: VARIADIC = 716;
   */
  VARIADIC = 716,

  /**
   * @generated from enum value: VARYING = 717;
   */
  VARYING = 717,

  /**
   * @generated from enum value: VERBOSE = 718;
   */
  VERBOSE = 718,

  /**
   * @generated from enum value: VERSION_P = 719;
   */
  VERSION_P = 719,

  /**
   * @generated from enum value: VIEW = 720;
   */
  VIEW = 720,

  /**
   * @generated from enum value: VIEWS = 721;
   */
  VIEWS = 721,

  /**
   * @generated from enum value: VOLATILE = 722;
   */
  VOLATILE = 722,

  /**
   * @generated from enum value: WHEN = 723;
   */
  WHEN = 723,

  /**
   * @generated from enum value: WHERE = 724;
   */
  WHERE = 724,

  /**
   * @generated from enum value: WHITESPACE_P = 725;
   */
  WHITESPACE_P = 725,

  /**
   * @generated from enum value: WINDOW = 726;
   */
  WINDOW = 726,

  /**
   * @generated from enum value: WITH = 727;
   */
  WITH = 727,

  /**
   * @generated from enum value: WITHIN = 728;
   */
  WITHIN = 728,

  /**
   * @generated from enum value: WITHOUT = 729;
   */
  WITHOUT = 729,

  /**
   * @generated from enum value: WORK = 730;
   */
  WORK = 730,

  /**
   * @generated from enum value: WRAPPER = 731;
   */
  WRAPPER = 731,

  /**
   * @generated from enum value: WRITE = 732;
   */
  WRITE = 732,

  /**
   * @generated from enum value: XML_P = 733;
   */
  XML_P = 733,

  /**
   * @generated from enum value: XMLATTRIBUTES = 734;
   */
  XMLATTRIBUTES = 734,

  /**
   * @generated from enum value: XMLCONCAT = 735;
   */
  XMLCONCAT = 735,

  /**
   * @generated from enum value: XMLELEMENT = 736;
   */
  XMLELEMENT = 736,

  /**
   * @generated from enum value: XMLEXISTS = 737;
   */
  XMLEXISTS = 737,

  /**
   * @generated from enum value: XMLFOREST = 738;
   */
  XMLFOREST = 738,

  /**
   * @generated from enum value: XMLNAMESPACES = 739;
   */
  XMLNAMESPACES = 739,

  /**
   * @generated from enum value: XMLPARSE = 740;
   */
  XMLPARSE = 740,

  /**
   * @generated from enum value: XMLPI = 741;
   */
  XMLPI = 741,

  /**
   * @generated from enum value: XMLROOT = 742;
   */
  XMLROOT = 742,

  /**
   * @generated from enum value: XMLSERIALIZE = 743;
   */
  XMLSERIALIZE = 743,

  /**
   * @generated from enum value: XMLTABLE = 744;
   */
  XMLTABLE = 744,

  /**
   * @generated from enum value: YEAR_P = 745;
   */
  YEAR_P = 745,

  /**
   * @generated from enum value: YES_P = 746;
   */
  YES_P = 746,

  /**
   * @generated from enum value: ZONE = 747;
   */
  ZONE = 747,

  /**
   * @generated from enum value: FORMAT_LA = 748;
   */
  FORMAT_LA = 748,

  /**
   * @generated from enum value: NOT_LA = 749;
   */
  NOT_LA = 749,

  /**
   * @generated from enum value: NULLS_LA = 750;
   */
  NULLS_LA = 750,

  /**
   * @generated from enum value: WITH_LA = 751;
   */
  WITH_LA = 751,

  /**
   * @generated from enum value: WITHOUT_LA = 752;
   */
  WITHOUT_LA = 752,

  /**
   * @generated from enum value: MODE_TYPE_NAME = 753;
   */
  MODE_TYPE_NAME = 753,

  /**
   * @generated from enum value: MODE_PLPGSQL_EXPR = 754;
   */
  MODE_PLPGSQL_EXPR = 754,

  /**
   * @generated from enum value: MODE_PLPGSQL_ASSIGN1 = 755;
   */
  MODE_PLPGSQL_ASSIGN1 = 755,

  /**
   * @generated from enum value: MODE_PLPGSQL_ASSIGN2 = 756;
   */
  MODE_PLPGSQL_ASSIGN2 = 756,

  /**
   * @generated from enum value: MODE_PLPGSQL_ASSIGN3 = 757;
   */
  MODE_PLPGSQL_ASSIGN3 = 757,

  /**
   * @generated from enum value: UMINUS = 758;
   */
  UMINUS = 758,
}

/**
 * @generated from enum pg_query.Token
 */
export type TokenJson = "NUL" | "ASCII_36" | "ASCII_37" | "ASCII_40" | "ASCII_41" | "ASCII_42" | "ASCII_43" | "ASCII_44" | "ASCII_45" | "ASCII_46" | "ASCII_47" | "ASCII_58" | "ASCII_59" | "ASCII_60" | "ASCII_61" | "ASCII_62" | "ASCII_63" | "ASCII_91" | "ASCII_92" | "ASCII_93" | "ASCII_94" | "IDENT" | "UIDENT" | "FCONST" | "SCONST" | "USCONST" | "BCONST" | "XCONST" | "Op" | "ICONST" | "PARAM" | "TYPECAST" | "DOT_DOT" | "COLON_EQUALS" | "EQUALS_GREATER" | "LESS_EQUALS" | "GREATER_EQUALS" | "NOT_EQUALS" | "SQL_COMMENT" | "C_COMMENT" | "ABORT_P" | "ABSENT" | "ABSOLUTE_P" | "ACCESS" | "ACTION" | "ADD_P" | "ADMIN" | "AFTER" | "AGGREGATE" | "ALL" | "ALSO" | "ALTER" | "ALWAYS" | "ANALYSE" | "ANALYZE" | "AND" | "ANY" | "ARRAY" | "AS" | "ASC" | "ASENSITIVE" | "ASSERTION" | "ASSIGNMENT" | "ASYMMETRIC" | "ATOMIC" | "AT" | "ATTACH" | "ATTRIBUTE" | "AUTHORIZATION" | "BACKWARD" | "BEFORE" | "BEGIN_P" | "BETWEEN" | "BIGINT" | "BINARY" | "BIT" | "BOOLEAN_P" | "BOTH" | "BREADTH" | "BY" | "CACHE" | "CALL" | "CALLED" | "CASCADE" | "CASCADED" | "CASE" | "CAST" | "CATALOG_P" | "CHAIN" | "CHAR_P" | "CHARACTER" | "CHARACTERISTICS" | "CHECK" | "CHECKPOINT" | "CLASS" | "CLOSE" | "CLUSTER" | "COALESCE" | "COLLATE" | "COLLATION" | "COLUMN" | "COLUMNS" | "COMMENT" | "COMMENTS" | "COMMIT" | "COMMITTED" | "COMPRESSION" | "CONCURRENTLY" | "CONFIGURATION" | "CONFLICT" | "CONNECTION" | "CONSTRAINT" | "CONSTRAINTS" | "CONTENT_P" | "CONTINUE_P" | "CONVERSION_P" | "COPY" | "COST" | "CREATE" | "CROSS" | "CSV" | "CUBE" | "CURRENT_P" | "CURRENT_CATALOG" | "CURRENT_DATE" | "CURRENT_ROLE" | "CURRENT_SCHEMA" | "CURRENT_TIME" | "CURRENT_TIMESTAMP" | "CURRENT_USER" | "CURSOR" | "CYCLE" | "DATA_P" | "DATABASE" | "DAY_P" | "DEALLOCATE" | "DEC" | "DECIMAL_P" | "DECLARE" | "DEFAULT" | "DEFAULTS" | "DEFERRABLE" | "DEFERRED" | "DEFINER" | "DELETE_P" | "DELIMITER" | "DELIMITERS" | "DEPENDS" | "DEPTH" | "DESC" | "DETACH" | "DICTIONARY" | "DISABLE_P" | "DISCARD" | "DISTINCT" | "DO" | "DOCUMENT_P" | "DOMAIN_P" | "DOUBLE_P" | "DROP" | "EACH" | "ELSE" | "ENABLE_P" | "ENCODING" | "ENCRYPTED" | "END_P" | "ENUM_P" | "ESCAPE" | "EVENT" | "EXCEPT" | "EXCLUDE" | "EXCLUDING" | "EXCLUSIVE" | "EXECUTE" | "EXISTS" | "EXPLAIN" | "EXPRESSION" | "EXTENSION" | "EXTERNAL" | "EXTRACT" | "FALSE_P" | "FAMILY" | "FETCH" | "FILTER" | "FINALIZE" | "FIRST_P" | "FLOAT_P" | "FOLLOWING" | "FOR" | "FORCE" | "FOREIGN" | "FORMAT" | "FORWARD" | "FREEZE" | "FROM" | "FULL" | "FUNCTION" | "FUNCTIONS" | "GENERATED" | "GLOBAL" | "GRANT" | "GRANTED" | "GREATEST" | "GROUP_P" | "GROUPING" | "GROUPS" | "HANDLER" | "HAVING" | "HEADER_P" | "HOLD" | "HOUR_P" | "IDENTITY_P" | "IF_P" | "ILIKE" | "IMMEDIATE" | "IMMUTABLE" | "IMPLICIT_P" | "IMPORT_P" | "IN_P" | "INCLUDE" | "INCLUDING" | "INCREMENT" | "INDENT" | "INDEX" | "INDEXES" | "INHERIT" | "INHERITS" | "INITIALLY" | "INLINE_P" | "INNER_P" | "INOUT" | "INPUT_P" | "INSENSITIVE" | "INSERT" | "INSTEAD" | "INT_P" | "INTEGER" | "INTERSECT" | "INTERVAL" | "INTO" | "INVOKER" | "IS" | "ISNULL" | "ISOLATION" | "JOIN" | "JSON" | "JSON_ARRAY" | "JSON_ARRAYAGG" | "JSON_OBJECT" | "JSON_OBJECTAGG" | "KEY" | "KEYS" | "LABEL" | "LANGUAGE" | "LARGE_P" | "LAST_P" | "LATERAL_P" | "LEADING" | "LEAKPROOF" | "LEAST" | "LEFT" | "LEVEL" | "LIKE" | "LIMIT" | "LISTEN" | "LOAD" | "LOCAL" | "LOCALTIME" | "LOCALTIMESTAMP" | "LOCATION" | "LOCK_P" | "LOCKED" | "LOGGED" | "MAPPING" | "MATCH" | "MATCHED" | "MATERIALIZED" | "MAXVALUE" | "MERGE" | "METHOD" | "MINUTE_P" | "MINVALUE" | "MODE" | "MONTH_P" | "MOVE" | "NAME_P" | "NAMES" | "NATIONAL" | "NATURAL" | "NCHAR" | "NEW" | "NEXT" | "NFC" | "NFD" | "NFKC" | "NFKD" | "NO" | "NONE" | "NORMALIZE" | "NORMALIZED" | "NOT" | "NOTHING" | "NOTIFY" | "NOTNULL" | "NOWAIT" | "NULL_P" | "NULLIF" | "NULLS_P" | "NUMERIC" | "OBJECT_P" | "OF" | "OFF" | "OFFSET" | "OIDS" | "OLD" | "ON" | "ONLY" | "OPERATOR" | "OPTION" | "OPTIONS" | "OR" | "ORDER" | "ORDINALITY" | "OTHERS" | "OUT_P" | "OUTER_P" | "OVER" | "OVERLAPS" | "OVERLAY" | "OVERRIDING" | "OWNED" | "OWNER" | "PARALLEL" | "PARAMETER" | "PARSER" | "PARTIAL" | "PARTITION" | "PASSING" | "PASSWORD" | "PLACING" | "PLANS" | "POLICY" | "POSITION" | "PRECEDING" | "PRECISION" | "PRESERVE" | "PREPARE" | "PREPARED" | "PRIMARY" | "PRIOR" | "PRIVILEGES" | "PROCEDURAL" | "PROCEDURE" | "PROCEDURES" | "PROGRAM" | "PUBLICATION" | "QUOTE" | "RANGE" | "READ" | "REAL" | "REASSIGN" | "RECHECK" | "RECURSIVE" | "REF_P" | "REFERENCES" | "REFERENCING" | "REFRESH" | "REINDEX" | "RELATIVE_P" | "RELEASE" | "RENAME" | "REPEATABLE" | "REPLACE" | "REPLICA" | "RESET" | "RESTART" | "RESTRICT" | "RETURN" | "RETURNING" | "RETURNS" | "REVOKE" | "RIGHT" | "ROLE" | "ROLLBACK" | "ROLLUP" | "ROUTINE" | "ROUTINES" | "ROW" | "ROWS" | "RULE" | "SAVEPOINT" | "SCALAR" | "SCHEMA" | "SCHEMAS" | "SCROLL" | "SEARCH" | "SECOND_P" | "SECURITY" | "SELECT" | "SEQUENCE" | "SEQUENCES" | "SERIALIZABLE" | "SERVER" | "SESSION" | "SESSION_USER" | "SET" | "SETS" | "SETOF" | "SHARE" | "SHOW" | "SIMILAR" | "SIMPLE" | "SKIP" | "SMALLINT" | "SNAPSHOT" | "SOME" | "SQL_P" | "STABLE" | "STANDALONE_P" | "START" | "STATEMENT" | "STATISTICS" | "STDIN" | "STDOUT" | "STORAGE" | "STORED" | "STRICT_P" | "STRIP_P" | "SUBSCRIPTION" | "SUBSTRING" | "SUPPORT" | "SYMMETRIC" | "SYSID" | "SYSTEM_P" | "SYSTEM_USER" | "TABLE" | "TABLES" | "TABLESAMPLE" | "TABLESPACE" | "TEMP" | "TEMPLATE" | "TEMPORARY" | "TEXT_P" | "THEN" | "TIES" | "TIME" | "TIMESTAMP" | "TO" | "TRAILING" | "TRANSACTION" | "TRANSFORM" | "TREAT" | "TRIGGER" | "TRIM" | "TRUE_P" | "TRUNCATE" | "TRUSTED" | "TYPE_P" | "TYPES_P" | "UESCAPE" | "UNBOUNDED" | "UNCOMMITTED" | "UNENCRYPTED" | "UNION" | "UNIQUE" | "UNKNOWN" | "UNLISTEN" | "UNLOGGED" | "UNTIL" | "UPDATE" | "USER" | "USING" | "VACUUM" | "VALID" | "VALIDATE" | "VALIDATOR" | "VALUE_P" | "VALUES" | "VARCHAR" | "VARIADIC" | "VARYING" | "VERBOSE" | "VERSION_P" | "VIEW" | "VIEWS" | "VOLATILE" | "WHEN" | "WHERE" | "WHITESPACE_P" | "WINDOW" | "WITH" | "WITHIN" | "WITHOUT" | "WORK" | "WRAPPER" | "WRITE" | "XML_P" | "XMLATTRIBUTES" | "XMLCONCAT" | "XMLELEMENT" | "XMLEXISTS" | "XMLFOREST" | "XMLNAMESPACES" | "XMLPARSE" | "XMLPI" | "XMLROOT" | "XMLSERIALIZE" | "XMLTABLE" | "YEAR_P" | "YES_P" | "ZONE" | "FORMAT_LA" | "NOT_LA" | "NULLS_LA" | "WITH_LA" | "WITHOUT_LA" | "MODE_TYPE_NAME" | "MODE_PLPGSQL_EXPR" | "MODE_PLPGSQL_ASSIGN1" | "MODE_PLPGSQL_ASSIGN2" | "MODE_PLPGSQL_ASSIGN3" | "UMINUS";

/**
 * Describes the enum pg_query.Token.
 */
export const TokenSchema: GenEnum<Token, TokenJson> = /*@__PURE__*/
  enumDesc(file_pg_query, 63);

